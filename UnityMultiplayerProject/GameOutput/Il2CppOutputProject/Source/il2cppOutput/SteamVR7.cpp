#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};

// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
// System.Action`1<System.Object>
struct Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0;
// System.Action`1<System.String>
struct Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo>
struct Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B;
// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo>
struct Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Collections.IEnumerator
struct IEnumerator_t8789118187258CC88B77AFAC6315B5AF87D3E18A;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.Globalization.Calendar
struct Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5;
// System.Globalization.CompareInfo
struct CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1;
// System.Globalization.CultureData
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD;
// System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F;
// System.Globalization.DateTimeFormatInfo
struct DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F;
// System.Globalization.NumberFormatInfo
struct NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8;
// System.Globalization.TextInfo
struct TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.NotSupportedException
struct NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityAction
struct UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4;
// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF;
// UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>
struct UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F;
// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>
struct UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>
struct UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>
struct UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4;
// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE;
// UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>
struct UnityEvent_4_t1F826F09136C51BFD9170BD030317255794011D6;
// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
// UnityEngine.WaitForEndOfFrame
struct WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA;
// Valve.VR.CVRInput
struct CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B;
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E;
// Valve.VR.IVRInput/_DecompressSkeletalBoneData
struct _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277;
// Valve.VR.IVRInput/_GetActionBindingInfo
struct _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5;
// Valve.VR.IVRInput/_GetActionHandle
struct _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988;
// Valve.VR.IVRInput/_GetActionOrigins
struct _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69;
// Valve.VR.IVRInput/_GetActionSetHandle
struct _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56;
// Valve.VR.IVRInput/_GetAnalogActionData
struct _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB;
// Valve.VR.IVRInput/_GetBoneCount
struct _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1;
// Valve.VR.IVRInput/_GetBoneHierarchy
struct _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876;
// Valve.VR.IVRInput/_GetBoneName
struct _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF;
// Valve.VR.IVRInput/_GetDigitalActionData
struct _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8;
// Valve.VR.IVRInput/_GetInputSourceHandle
struct _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF;
// Valve.VR.IVRInput/_GetOriginLocalizedName
struct _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F;
// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo
struct _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B;
// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame
struct _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E;
// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow
struct _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8;
// Valve.VR.IVRInput/_GetSkeletalActionData
struct _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A;
// Valve.VR.IVRInput/_GetSkeletalBoneData
struct _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A;
// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed
struct _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B;
// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms
struct _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5;
// Valve.VR.IVRInput/_GetSkeletalSummaryData
struct _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822;
// Valve.VR.IVRInput/_GetSkeletalTrackingLevel
struct _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93;
// Valve.VR.IVRInput/_IsUsingLegacyInput
struct _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7;
// Valve.VR.IVRInput/_OpenBindingUI
struct _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F;
// Valve.VR.IVRInput/_SetActionManifestPath
struct _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE;
// Valve.VR.IVRInput/_ShowActionOrigins
struct _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71;
// Valve.VR.IVRInput/_ShowBindingsForActionSet
struct _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A;
// Valve.VR.IVRInput/_TriggerHapticVibrationAction
struct _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8;
// Valve.VR.IVRInput/_UpdateActionState
struct _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5;
// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734;
// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6;
// Valve.VR.SteamVR_ActionSet_Data
struct SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529;
// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20;
// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884;
// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0;
// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464;
// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA;
// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8;
// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B;
// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB;
// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B;
// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB;
// Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>
struct SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253;
// Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>
struct SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2;
// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6;
// Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>
struct SteamVR_Action_Out_2_tBFC90712829F4A53DB24EF908459C469ADC749B7;
// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0;
// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C;
// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E;
// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE;
// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9;
// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914;
// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1;
// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A;
// Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>
struct SteamVR_Action_Pose_Base_2_tE4721EEBBC945BAAF6FF57A49BF6EB4ACDB13900;
// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2;
// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>
struct SteamVR_Action_Pose_Source_Map_1_t8D737DFC58E320B9252D6AC46CC512D3AA443163;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125;
// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81;
// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE;
// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843;
// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED;
// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D;
// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F;
// Valve.VR.SteamVR_Action_Single_Source[]
struct SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277;
// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37;
// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504;
// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler
struct ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4;
// Valve.VR.SteamVR_Action_Skeleton/ChangeHandler
struct ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7;
// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592;
// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4;
// Valve.VR.SteamVR_Action_Skeleton/UpdateHandler
struct UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046;
// Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7;
// Valve.VR.SteamVR_Action_Skeleton_Source
struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72;
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB;
// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0;
// Valve.VR.SteamVR_Action_Source_Map
struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17;
// Valve.VR.SteamVR_Action_Source_Map`1<System.Object>
struct SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7;
// Valve.VR.SteamVR_Action_Vector2
struct SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37;
// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler
struct ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2;
// Valve.VR.SteamVR_Action_Vector2/AxisHandler
struct AxisHandler_t97FB692AF5465040A2929AB663941933E3567689;
// Valve.VR.SteamVR_Action_Vector2/ChangeHandler
struct ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6;
// Valve.VR.SteamVR_Action_Vector2/UpdateHandler
struct UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177;
// Valve.VR.SteamVR_Action_Vector2_Source
struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1;
// Valve.VR.SteamVR_Action_Vector2_Source[]
struct SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359;
// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3;
// Valve.VR.SteamVR_Action_Vector3
struct SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9;
// Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler
struct ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652;
// Valve.VR.SteamVR_Action_Vector3/AxisHandler
struct AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779;
// Valve.VR.SteamVR_Action_Vector3/ChangeHandler
struct ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B;
// Valve.VR.SteamVR_Action_Vector3/UpdateHandler
struct UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75;
// Valve.VR.SteamVR_Action_Vector3_Source
struct SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90;
// Valve.VR.SteamVR_Action_Vector3_Source[]
struct SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF;
// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95;
// Valve.VR.SteamVR_Action_Vibration
struct SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB;
// Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler
struct ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA;
// Valve.VR.SteamVR_Action_Vibration/ExecuteHandler
struct ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865;
// Valve.VR.SteamVR_Action_Vibration_Source
struct SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151;
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;
// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A;
// Valve.VR.SteamVR_Action`2<System.Object,System.Object>
struct SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D;
// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7;
// Valve.VR.SteamVR_Behaviour
struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586;
// Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15
struct U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7;
// Valve.VR.SteamVR_Behaviour_Boolean
struct SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00;
// Valve.VR.SteamVR_Behaviour_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453;
// Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler
struct ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6;
// Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler
struct StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24;
// Valve.VR.SteamVR_Behaviour_Boolean/StateHandler
struct StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D;
// Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler
struct StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5;
// Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler
struct UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1;
// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4;
// Valve.VR.SteamVR_Behaviour_Pose
struct SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787;
// Valve.VR.SteamVR_Behaviour_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA;
// Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler
struct ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB;
// Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler
struct DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988;
// Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler
struct TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443;
// Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler
struct UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D;
// Valve.VR.SteamVR_Behaviour_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9;
// Valve.VR.SteamVR_Behaviour_PoseEvent
struct SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87;
// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9;
// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9;
// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E;
// Valve.VR.SteamVR_Behaviour_Single
struct SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562;
// Valve.VR.SteamVR_Behaviour_Single/AxisHandler
struct AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C;
// Valve.VR.SteamVR_Behaviour_Single/ChangeHandler
struct ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7;
// Valve.VR.SteamVR_Behaviour_Single/UpdateHandler
struct UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4;
// Valve.VR.SteamVR_Behaviour_SingleEvent
struct SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4;
// Valve.VR.SteamVR_Camera[]
struct SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3;
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>
struct Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262;
// Valve.VR.SteamVR_ExternalCamera
struct SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D;
// Valve.VR.SteamVR_HistoryBuffer
struct SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8;
// Valve.VR.SteamVR_HistoryStep
struct SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E;
// Valve.VR.SteamVR_HistoryStep[]
struct SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F;
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
// Valve.VR.SteamVR_Render
struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665;
// Valve.VR.SteamVR_RingBuffer`1<System.Object>
struct SteamVR_RingBuffer_1_tB6FE64DC340FF76D0FDC901B5FB739DA8458EE74;
// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4;
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196;
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B;

IL2CPP_EXTERN_C RuntimeClass* Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84;
IL2CPP_EXTERN_C String_t* _stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0;
IL2CPP_EXTERN_C String_t* _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F;
IL2CPP_EXTERN_C String_t* _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B;
IL2CPP_EXTERN_C String_t* _stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5;
IL2CPP_EXTERN_C String_t* _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458;
IL2CPP_EXTERN_C String_t* _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E;
IL2CPP_EXTERN_C String_t* _stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F;
IL2CPP_EXTERN_C String_t* _stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C;
IL2CPP_EXTERN_C String_t* _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B;
IL2CPP_EXTERN_C String_t* _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16;
IL2CPP_EXTERN_C String_t* _stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635;
IL2CPP_EXTERN_C String_t* _stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7;
IL2CPP_EXTERN_C String_t* _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45;
IL2CPP_EXTERN_C String_t* _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F;
IL2CPP_EXTERN_C String_t* _stringLiteralA98667A476D022EB9B2CF25800415760BE586401;
IL2CPP_EXTERN_C String_t* _stringLiteralAC897ED588F0446677581414C46F231807AB2556;
IL2CPP_EXTERN_C String_t* _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2;
IL2CPP_EXTERN_C String_t* _stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E;
IL2CPP_EXTERN_C String_t* _stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1;
IL2CPP_EXTERN_C String_t* _stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD;
IL2CPP_EXTERN_C String_t* _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2;
IL2CPP_EXTERN_C String_t* _stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8;
IL2CPP_EXTERN_C String_t* _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8;
IL2CPP_EXTERN_C String_t* _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356;
IL2CPP_EXTERN_C String_t* _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376;
IL2CPP_EXTERN_C String_t* _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630;
IL2CPP_EXTERN_C const RuntimeMethod* Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m18C23160315F8414CA38CA01EB2E95529802281C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mEE7832ED7C1B03D8FEB093F34B2B63974C3B5A04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mF4DC388BA98BF545E220E94BC0C4DBF458090EB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_mD999F898F7EC32F7FF2A4DE8A4FC77CB7012CC2F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_mF9E126AD1A57CA13943CDE8404A98C0DA8FF8225_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_m1C7CDFB82FBD6E95D7AF23AB9320BCCD68C5CA92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_m3CF6B3F7CC98C67885A2F7915311C360B9842389_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2_UpdateTransform_mDF91BEAC2D9487D14C5D1EB34996E2C2E4F275D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2__ctor_mA24A37A7DD68461F1328F541DD825CDACBAC30C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_Map_1__ctor_m46CC8AADAF802355D940EB7B8E1F27836A7B4476_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m20FA39B27B526812B1D6D1749788D3F1D884B2C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9858F23AEB6C3D2B98736BBD60B2ED75E533A673_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mFC1496645B04E0FA94A6D7CFDE9B46B6D0EEA42B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m56A724C82B49A38D44B3D2B18453771AFA341B36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m5CE6356122E9BD630D00B5452683EAE16AF35BA0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m0EF461A8F50FD59DC6511DC78FCD636809CF5F14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mD94A911B751372C821E31CD6DD96566FFE44956E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m822DAC3B254223500E283102B983C97D78333D10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Map__ctor_mBEEDF89DB49EE998BFEFAC3FB1DF7665B3FE4AE9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnActiveChangeListener_m2D32E586E074A6211226E0B25A4BD7819BDD2331_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnChangeListener_m6D171EBBE99E96449ED31256191F0B9B37660CA4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_mCDC3AE4ECD7F52EBBF02BB5DC2E81A5F2F493915_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnTrackingChanged_mFEFEF4A49A2F219DD9C6A2B315829772A140FAE0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnUpdateListener_m4747980341F8DD2D9AB7068B6517CCB415635808_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnValidPoseChanged_m7C3267EC9F47669379DC41F6653B34BD70071A20_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetActive_m6E06AD31889D5E0E0431CA1766F874759FE3216F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneCount_mB8D948288CCD3A7E432C9A28508CFF40C96F85A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneHierarchy_mE6046CC9827A1DDF795FB53696BA8A0119FCBD54_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneName_m3664883EBE49B71E83B8C4A2D3D6CA5648D896A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBonePositions_mB8ED80319622D467201E3562AEDCE36C6601D531_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneRotations_m7239E024A6D2E783C25D633A0476CA9428D465C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetDeviceIsConnected_m5A76303DB4261016DAEBD30B735BED3259855734_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurl_mC1F50D0ECE4C5553E8E25A7C06668558D2742620_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurls_mB05B99839838D84A19A639120BC6DD7FB2395A29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerSplays_m7CB3DAB877B3FE9EF6AD8A79FCFE6A80C0D1CD0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBonePositions_mD5C9D7939B6693865BFC89D4CFF3A29E8273E5EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBoneRotations_m6828376AA97DD3A7A78FE2F9E0EE038CA96D39ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mD15EE41DB5743A4DD42DB692B56470A75297D7B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurl_m39488C73FCFCA0C9586171A54C06F3336F9EA563_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurls_m6971403DF34683B96CB48F156A71C57C137AA5CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerSplays_m8144088BE8AF0D0FDDF3F1D89711732D63C16EBB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastPoseIsValid_mB18ED4BF91977E89C1BE821A473AAAD5C2AD9AAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastSplay_m3EE8FC2ECE44A16A6F103E19A42AF8A10780C9B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalizedName_m6E5B2E0BB7BBB24B0C10D4178DEBD2452F21511B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseAtTimeOffset_mBCC36205E479616B506EFA081120EDA9E3269202_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseIsValid_m940EF6B8834E5EE883FB69081F7A8CF115F7090D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSplay_m6A6A69B1D61A8EB56C024FBE87D50C11A155ACE0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_m188E942824BC8328FF62524D8AC7121B41214E8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_mDAA7E51AE61F9EFB56712D2BFC5C2481BE781D7C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnChangeListener_mAFAD8747C82109904BB2B6B5BF3387EA6DA970F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA65B569EE113DD0F88233B2A720F57ACDBFFDA23_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m50F6BBB2398BED51DAC0B5F444FFFB487C938D58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnUpdateListener_m123C6B0C9425E2C84DFDFA880047D7A6C6FDD3CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mC3A2516F26566F6E2C9F01EA501C095E1978269C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m18728D948D1B46D284FBEBFEDA47FB97BBB1B68D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneName_m67234F0D980501AD00E029B0B30415B8F18856F9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Initialize_mAC7E24B466C1A3D77533F0A1C76F5E1F3C0D704A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Map__ctor_m69133E0B86EA755338F18B76A09F13A18570204A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Preinitialize_mC689B2C9BDC3CB56B8539484F3B370FA955C0A45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateValue_m973732FC7285143B7F0ABF27A4DD83041EA2FB82_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source__ctor_mFC568147EA2C28081C0956D1830836B71530D0B3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_m4DC3513C7C9507997D9D34F1A514F152B2D38CFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m8B778606DA02C1FB1A23C1A955951094E261F2AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5CD84AEC49B84E110E6BF9277B9335A136ABAAA5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateTransform_m6F79643A24833641C748F3088E112AF52E478BF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValue_mA4FFC2C42D19F3EBD6E63E0F10D43754E49E238F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__cctor_m57066E5D93F7A7D6D735CE541E25BABAC7E5480A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__ctor_mC5935E4BA141DDF7A90EC1593B0AB235ED4A150E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveBindingChange_m07DF54383907362AF8846A96EC486DE4ADF4CDA1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveChange_m49322B1046AB4F7F652CFC7F8F5354697CFC419E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onChange_mD39BD96DEA8F826BAB9975C7960E0FCC34DD2949_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m92354268E04EC26BEA381884B6642CFBB1E08CC1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onTrackingChanged_m27D7D512A8B28F439D5462462C58725039CB823B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onUpdate_mB35B29D83BC5DBA077A734822B1E78F0D921A6E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onValidPoseChanged_m16EEF660B28D51B84173746D48C7CA5E4AFDF384_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerCurls_m4A263447B22178919E09D1E97E8C3BDEA0736BAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerSplays_m7B088FB1B70AD3B51A16353085AA0A50AF77EDBD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexCurl_mEB1F41479BDBBEF2E93E1268C0947AA789242C41_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexMiddleSplay_m546A2A3E6E1449CA4C6A482D4138EAD63206C7D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerCurls_m3739004D70486E65E29BC117CE7D03A7F42A334F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerSplays_m8D682F035CBCDC7D71503C78433E061096D3D5FE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexCurl_m8CF537005F0FB51208329280711F0A8408BDBAC9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m30ED9E7BD9BA8E840D1F80AC165E7074B050F1B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleCurl_m6D5135ECD058B820D04982DC4077E2E14AA03BAC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mD8B7B998BDCE4FEE0FD4D60A6EF589F85A7CE40C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastPinkyCurl_mBFB42992D9E09ADD2B6ED7BC5782C5C6986D3D69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingCurl_m6D22D1042A5D05F28D363BE71CA94318FDEF683F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingPinkySplay_m4AA30BABB66CAD75BD36C1B957A439F308AD694B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbCurl_m8EF585CBDF71173BBE7A3FFDCADDA14B9DF133DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mA28395123EDD33FE080B5BBDD9B83A5A25E80948_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleCurl_mB7653A8B23ED58306E8EB31E707229BFAE1FA9B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleRingSplay_mC6A6DC9021549480656FD3EFABD14D6D304D555C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m34F8E2E3DFF90BC3E25A4DE8F90C6E717AF3D5BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_pinkyCurl_mFB7270C1D7CCD0346630B7FD9537DF2859241C32_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_poseChanged_m248D619571236D9D7833B76A03BA70B033516FFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringCurl_mC657F338C93FBF39891F77C5B58DFD063B82D9E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringPinkySplay_mA246643EFA211CB2B0ACC8BF02C70B386D86420E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbCurl_m78B436FFB2D7C6B0FE83FBA4BA11123C3B06EF28_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbIndexSplay_mE662DBD9173578066DAC6EA4537A9609A89ED735_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveBindingChange_mF4DF38A823FEA14CBCBEBAD5B07048564772FF42_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveChange_mB45B49699E0BA70E2CE347A6E9F96018F3FA7BB4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onChange_mE3314F2A6094E48BA418013DBEB83064A7F853B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_mCC1CD5EF82563E7FE898D2BAE0DEDC59C9AFA8C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onTrackingChanged_mE5229135F65372F6DDA222F462565A6D0E66DA6D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onUpdate_m8558F015C56A6191114E396FBFA440F47580D79C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onValidPoseChanged_m36DAF4159892070D6853F24DD8D8DB701CA0F706_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mFB1077C0BE8DD592764267D71E922C34CF11DB09_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_rangeOfMotion_mB389010B0C01970B95C278A809545561A1BA4D58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_skeletalTransformSpace_mA307660C0D7CC13E16AEF9D45B7B87D6B90634F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_summaryDataType_m71DB13F92B26A5E85B0E03386E49397066869B27_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_Initialize_mF2DCDEC5F104A3F7879C6D0CE8D60483334DBAC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_PreInitialize_m39C648952C2AFF5056406BD4D62DCC94D5D15CF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map__cctor_mF8C1CC42AFBDF717407FDEDAF6AB49577F23A171_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m35A2F8651583EEEA5BFBC687A94D985FFD1C9A01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveChangeListener_m4356C2D99F90AC783F576D243573B89ECC4A0765_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnAxisListener_m5167A71DD40E61F49C0651E92F333FF72DE8F918_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnChangeListener_m56C1216E50360BCA55C3A0C0EFD71D622939D3FE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnUpdateListener_m26DF2290B9B1D47A4F581F149686B184C5625F18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3BDA480949C10CEC9D1EE308FA3A104860A5D193_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m77342D95999D75F33C4C1E7C1F052EA6DB22F9AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnAxisListener_m2E5541FBF94FF3B4854220E63766E1A383126384_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnChangeListener_mBFA847AD63D1EFEBEB507A0EDB69DC8721C9C53E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnUpdateListener_m9B8C6E9BFE29429882D6118D4BDC13B441FA7FA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Initialize_mEA3978343DC5DDA279610886729C005BA2807088_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Map__ctor_m8779F6CACD1A9A58ECCEE336EEC40FC287CBFE01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Preinitialize_mD54D144D5346D31B95218D570EFF9EC692818236_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_UpdateValue_m46FD9956F29672FF3594957130165B620D3EFD21_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source__ctor_m48D3C09B91B17F520133008F7722E4B4EB26F1EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m19FBDDF4C65A56BE9DEFBFF7D9C20ED59218FB4C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2__ctor_mEEEA92BB27BB0513C419BAB3CB220ECBF331AF56_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveBindingChange_m15664B2ED53BB2BD17087FDB290DA192A62D91C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveChange_m0A69F75E3DC172336397A4100CE8E9536E907131_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onAxis_m9AF8E8737CD6E677A1FBFF700F6536919762898B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onChange_m1F62155EA9883091580EC03275BE740C911BAAFF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onUpdate_m2B0186EEB573726C35ED4A38486D31FFE5CBC469_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveBindingChange_m28C26AEA56A5BE493976C0C18A34349E13B63029_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveChange_m27F9EC8B3B7CE60AB0AD1614DEE638622F6DABE7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onAxis_mC00F340345B916EA150D4AA4FF3E03F924A67584_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onChange_m869E023BEB666D8A6A7955802BA9816EE77435F6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onUpdate_mAEF9FF7CC422045456A60152EC8847FEDB033ED2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mA8C945BE28CAD502B6A1BD6A72659509A206C658_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnActiveChangeListener_m2D01DEF21993C1450F3A6DD5A1A0E13E015A16EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnAxisListener_mFB5B81222D06CE1838A819CD31E5468593497A42_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnChangeListener_m856C1E73A985193161F7E68E51E2E7D405CAC77D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_AddOnUpdateListener_mFDBD5206DBD8AE0CB95CDF5FCA769635C7BEF1A3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_m0318DB5C418AB27237EBEDD74986CEED5322FED4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m768C67754A7B4122AC2CA9AF3F4A6C84BF71C122_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnAxisListener_m54BB3A15B566FCD77B580FEB19A879EB6BAA0B19_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnChangeListener_m8AD0A1B8695E9BBF053F3E2D4A6661F22E52BC3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_RemoveOnUpdateListener_m3BB302B27358EBEF86B005C6C3BA792EDE27CB75_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Initialize_mF6083AADD5357032AE31D4496681462FBC9379AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_Preinitialize_m4F993EE6B1E88BC3A4162D8C989D5E8B7FD3F286_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_UpdateValue_m740BBE6FBE4887C46BCBA55A25D58A7EF5AE2171_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source__ctor_mC0D29BEF4DAD2DE16DAA78C0F490591AB171DE1A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4713EBBEB02475300C221E3B1D590A50FBDCFE1D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3__ctor_m37437A0DC1654AC61B42767A3F6BE9FA2328347C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onActiveBindingChange_mC4E35E2233DC7C10B75320C8A5EAF0EC207AC5D8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onActiveChange_mFD6D6D7BBFDDDBAB5371E7D544A1CBA0ABE4CA18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onAxis_mD6A4E09D264E987391E26F51543D63494DD24EEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onChange_m99FB29754E2862967F8BD9009CDD8F59B5D112FC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_add_onUpdate_mC6730976874F184C9AC45CDDBA4A51145E562EB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onActiveBindingChange_m65EA244FFFCEFAE4B87F0B1E90A38F1CBE2F9C1C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onActiveChange_mB126BA6BF4C9EA71ED10C37E584079216BB7F536_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onAxis_mFD39E7E5FE3F6A009869F30872D651DAC960CF9F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onChange_mBA3BF7FDF2A7C02DE0DB32629D2CF110A5375206_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector3_remove_onUpdate_m49616C5F27B3F1F0F08E30427FF68A2AA06CDB62_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m9817EC8D7AAF0FA43430700B83DD1F976D5C8242_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m3BD5916ADDFFADD04B76A00FA7F8A73235AB5598_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mBFD7F08AC61DC5337F3BF6981E53E840CF89AC68_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m3BEFCC52268F783010319929B644B5D756E0D1C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE_MetadataUsageId;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04;
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.Globalization.CultureInfo
struct  CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F  : public RuntimeObject
{
public:
	// System.Boolean System.Globalization.CultureInfo::m_isReadOnly
	bool ___m_isReadOnly_3;
	// System.Int32 System.Globalization.CultureInfo::cultureID
	int32_t ___cultureID_4;
	// System.Int32 System.Globalization.CultureInfo::parent_lcid
	int32_t ___parent_lcid_5;
	// System.Int32 System.Globalization.CultureInfo::datetime_index
	int32_t ___datetime_index_6;
	// System.Int32 System.Globalization.CultureInfo::number_index
	int32_t ___number_index_7;
	// System.Int32 System.Globalization.CultureInfo::default_calendar_type
	int32_t ___default_calendar_type_8;
	// System.Boolean System.Globalization.CultureInfo::m_useUserOverride
	bool ___m_useUserOverride_9;
	// System.Globalization.NumberFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::numInfo
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	// System.Globalization.DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::dateTimeInfo
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	// System.Globalization.TextInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::textInfo
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	// System.String System.Globalization.CultureInfo::m_name
	String_t* ___m_name_13;
	// System.String System.Globalization.CultureInfo::englishname
	String_t* ___englishname_14;
	// System.String System.Globalization.CultureInfo::nativename
	String_t* ___nativename_15;
	// System.String System.Globalization.CultureInfo::iso3lang
	String_t* ___iso3lang_16;
	// System.String System.Globalization.CultureInfo::iso2lang
	String_t* ___iso2lang_17;
	// System.String System.Globalization.CultureInfo::win3lang
	String_t* ___win3lang_18;
	// System.String System.Globalization.CultureInfo::territory
	String_t* ___territory_19;
	// System.String[] System.Globalization.CultureInfo::native_calendar_names
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___native_calendar_names_20;
	// System.Globalization.CompareInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::compareInfo
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	// System.Void* System.Globalization.CultureInfo::textinfo_data
	void* ___textinfo_data_22;
	// System.Int32 System.Globalization.CultureInfo::m_dataItem
	int32_t ___m_dataItem_23;
	// System.Globalization.Calendar System.Globalization.CultureInfo::calendar
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::parent_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___parent_culture_25;
	// System.Boolean System.Globalization.CultureInfo::constructed
	bool ___constructed_26;
	// System.Byte[] System.Globalization.CultureInfo::cached_serialized_form
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___cached_serialized_form_27;
	// System.Globalization.CultureData System.Globalization.CultureInfo::m_cultureData
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * ___m_cultureData_28;
	// System.Boolean System.Globalization.CultureInfo::m_isInherited
	bool ___m_isInherited_29;

public:
	inline static int32_t get_offset_of_m_isReadOnly_3() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isReadOnly_3)); }
	inline bool get_m_isReadOnly_3() const { return ___m_isReadOnly_3; }
	inline bool* get_address_of_m_isReadOnly_3() { return &___m_isReadOnly_3; }
	inline void set_m_isReadOnly_3(bool value)
	{
		___m_isReadOnly_3 = value;
	}

	inline static int32_t get_offset_of_cultureID_4() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cultureID_4)); }
	inline int32_t get_cultureID_4() const { return ___cultureID_4; }
	inline int32_t* get_address_of_cultureID_4() { return &___cultureID_4; }
	inline void set_cultureID_4(int32_t value)
	{
		___cultureID_4 = value;
	}

	inline static int32_t get_offset_of_parent_lcid_5() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_lcid_5)); }
	inline int32_t get_parent_lcid_5() const { return ___parent_lcid_5; }
	inline int32_t* get_address_of_parent_lcid_5() { return &___parent_lcid_5; }
	inline void set_parent_lcid_5(int32_t value)
	{
		___parent_lcid_5 = value;
	}

	inline static int32_t get_offset_of_datetime_index_6() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___datetime_index_6)); }
	inline int32_t get_datetime_index_6() const { return ___datetime_index_6; }
	inline int32_t* get_address_of_datetime_index_6() { return &___datetime_index_6; }
	inline void set_datetime_index_6(int32_t value)
	{
		___datetime_index_6 = value;
	}

	inline static int32_t get_offset_of_number_index_7() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___number_index_7)); }
	inline int32_t get_number_index_7() const { return ___number_index_7; }
	inline int32_t* get_address_of_number_index_7() { return &___number_index_7; }
	inline void set_number_index_7(int32_t value)
	{
		___number_index_7 = value;
	}

	inline static int32_t get_offset_of_default_calendar_type_8() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___default_calendar_type_8)); }
	inline int32_t get_default_calendar_type_8() const { return ___default_calendar_type_8; }
	inline int32_t* get_address_of_default_calendar_type_8() { return &___default_calendar_type_8; }
	inline void set_default_calendar_type_8(int32_t value)
	{
		___default_calendar_type_8 = value;
	}

	inline static int32_t get_offset_of_m_useUserOverride_9() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_useUserOverride_9)); }
	inline bool get_m_useUserOverride_9() const { return ___m_useUserOverride_9; }
	inline bool* get_address_of_m_useUserOverride_9() { return &___m_useUserOverride_9; }
	inline void set_m_useUserOverride_9(bool value)
	{
		___m_useUserOverride_9 = value;
	}

	inline static int32_t get_offset_of_numInfo_10() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___numInfo_10)); }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * get_numInfo_10() const { return ___numInfo_10; }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 ** get_address_of_numInfo_10() { return &___numInfo_10; }
	inline void set_numInfo_10(NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * value)
	{
		___numInfo_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___numInfo_10), (void*)value);
	}

	inline static int32_t get_offset_of_dateTimeInfo_11() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___dateTimeInfo_11)); }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * get_dateTimeInfo_11() const { return ___dateTimeInfo_11; }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F ** get_address_of_dateTimeInfo_11() { return &___dateTimeInfo_11; }
	inline void set_dateTimeInfo_11(DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * value)
	{
		___dateTimeInfo_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dateTimeInfo_11), (void*)value);
	}

	inline static int32_t get_offset_of_textInfo_12() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textInfo_12)); }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * get_textInfo_12() const { return ___textInfo_12; }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 ** get_address_of_textInfo_12() { return &___textInfo_12; }
	inline void set_textInfo_12(TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * value)
	{
		___textInfo_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textInfo_12), (void*)value);
	}

	inline static int32_t get_offset_of_m_name_13() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_name_13)); }
	inline String_t* get_m_name_13() const { return ___m_name_13; }
	inline String_t** get_address_of_m_name_13() { return &___m_name_13; }
	inline void set_m_name_13(String_t* value)
	{
		___m_name_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_name_13), (void*)value);
	}

	inline static int32_t get_offset_of_englishname_14() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___englishname_14)); }
	inline String_t* get_englishname_14() const { return ___englishname_14; }
	inline String_t** get_address_of_englishname_14() { return &___englishname_14; }
	inline void set_englishname_14(String_t* value)
	{
		___englishname_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___englishname_14), (void*)value);
	}

	inline static int32_t get_offset_of_nativename_15() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___nativename_15)); }
	inline String_t* get_nativename_15() const { return ___nativename_15; }
	inline String_t** get_address_of_nativename_15() { return &___nativename_15; }
	inline void set_nativename_15(String_t* value)
	{
		___nativename_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___nativename_15), (void*)value);
	}

	inline static int32_t get_offset_of_iso3lang_16() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso3lang_16)); }
	inline String_t* get_iso3lang_16() const { return ___iso3lang_16; }
	inline String_t** get_address_of_iso3lang_16() { return &___iso3lang_16; }
	inline void set_iso3lang_16(String_t* value)
	{
		___iso3lang_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso3lang_16), (void*)value);
	}

	inline static int32_t get_offset_of_iso2lang_17() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso2lang_17)); }
	inline String_t* get_iso2lang_17() const { return ___iso2lang_17; }
	inline String_t** get_address_of_iso2lang_17() { return &___iso2lang_17; }
	inline void set_iso2lang_17(String_t* value)
	{
		___iso2lang_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso2lang_17), (void*)value);
	}

	inline static int32_t get_offset_of_win3lang_18() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___win3lang_18)); }
	inline String_t* get_win3lang_18() const { return ___win3lang_18; }
	inline String_t** get_address_of_win3lang_18() { return &___win3lang_18; }
	inline void set_win3lang_18(String_t* value)
	{
		___win3lang_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___win3lang_18), (void*)value);
	}

	inline static int32_t get_offset_of_territory_19() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___territory_19)); }
	inline String_t* get_territory_19() const { return ___territory_19; }
	inline String_t** get_address_of_territory_19() { return &___territory_19; }
	inline void set_territory_19(String_t* value)
	{
		___territory_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___territory_19), (void*)value);
	}

	inline static int32_t get_offset_of_native_calendar_names_20() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___native_calendar_names_20)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_native_calendar_names_20() const { return ___native_calendar_names_20; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_native_calendar_names_20() { return &___native_calendar_names_20; }
	inline void set_native_calendar_names_20(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___native_calendar_names_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_calendar_names_20), (void*)value);
	}

	inline static int32_t get_offset_of_compareInfo_21() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___compareInfo_21)); }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * get_compareInfo_21() const { return ___compareInfo_21; }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 ** get_address_of_compareInfo_21() { return &___compareInfo_21; }
	inline void set_compareInfo_21(CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * value)
	{
		___compareInfo_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___compareInfo_21), (void*)value);
	}

	inline static int32_t get_offset_of_textinfo_data_22() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textinfo_data_22)); }
	inline void* get_textinfo_data_22() const { return ___textinfo_data_22; }
	inline void** get_address_of_textinfo_data_22() { return &___textinfo_data_22; }
	inline void set_textinfo_data_22(void* value)
	{
		___textinfo_data_22 = value;
	}

	inline static int32_t get_offset_of_m_dataItem_23() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_dataItem_23)); }
	inline int32_t get_m_dataItem_23() const { return ___m_dataItem_23; }
	inline int32_t* get_address_of_m_dataItem_23() { return &___m_dataItem_23; }
	inline void set_m_dataItem_23(int32_t value)
	{
		___m_dataItem_23 = value;
	}

	inline static int32_t get_offset_of_calendar_24() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___calendar_24)); }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * get_calendar_24() const { return ___calendar_24; }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 ** get_address_of_calendar_24() { return &___calendar_24; }
	inline void set_calendar_24(Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * value)
	{
		___calendar_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___calendar_24), (void*)value);
	}

	inline static int32_t get_offset_of_parent_culture_25() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_culture_25)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_parent_culture_25() const { return ___parent_culture_25; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_parent_culture_25() { return &___parent_culture_25; }
	inline void set_parent_culture_25(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___parent_culture_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___parent_culture_25), (void*)value);
	}

	inline static int32_t get_offset_of_constructed_26() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___constructed_26)); }
	inline bool get_constructed_26() const { return ___constructed_26; }
	inline bool* get_address_of_constructed_26() { return &___constructed_26; }
	inline void set_constructed_26(bool value)
	{
		___constructed_26 = value;
	}

	inline static int32_t get_offset_of_cached_serialized_form_27() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cached_serialized_form_27)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_cached_serialized_form_27() const { return ___cached_serialized_form_27; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_cached_serialized_form_27() { return &___cached_serialized_form_27; }
	inline void set_cached_serialized_form_27(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___cached_serialized_form_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cached_serialized_form_27), (void*)value);
	}

	inline static int32_t get_offset_of_m_cultureData_28() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_cultureData_28)); }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * get_m_cultureData_28() const { return ___m_cultureData_28; }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD ** get_address_of_m_cultureData_28() { return &___m_cultureData_28; }
	inline void set_m_cultureData_28(CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * value)
	{
		___m_cultureData_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_cultureData_28), (void*)value);
	}

	inline static int32_t get_offset_of_m_isInherited_29() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isInherited_29)); }
	inline bool get_m_isInherited_29() const { return ___m_isInherited_29; }
	inline bool* get_address_of_m_isInherited_29() { return &___m_isInherited_29; }
	inline void set_m_isInherited_29(bool value)
	{
		___m_isInherited_29 = value;
	}
};

struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields
{
public:
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::invariant_culture_info
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___invariant_culture_info_0;
	// System.Object System.Globalization.CultureInfo::shared_table_lock
	RuntimeObject * ___shared_table_lock_1;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::default_current_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___default_current_culture_2;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentUICulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentUICulture_33;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentCulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentCulture_34;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_number
	Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * ___shared_by_number_35;
	// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_name
	Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * ___shared_by_name_36;
	// System.Boolean System.Globalization.CultureInfo::IsTaiwanSku
	bool ___IsTaiwanSku_37;

public:
	inline static int32_t get_offset_of_invariant_culture_info_0() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___invariant_culture_info_0)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_invariant_culture_info_0() const { return ___invariant_culture_info_0; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_invariant_culture_info_0() { return &___invariant_culture_info_0; }
	inline void set_invariant_culture_info_0(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___invariant_culture_info_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___invariant_culture_info_0), (void*)value);
	}

	inline static int32_t get_offset_of_shared_table_lock_1() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_table_lock_1)); }
	inline RuntimeObject * get_shared_table_lock_1() const { return ___shared_table_lock_1; }
	inline RuntimeObject ** get_address_of_shared_table_lock_1() { return &___shared_table_lock_1; }
	inline void set_shared_table_lock_1(RuntimeObject * value)
	{
		___shared_table_lock_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_table_lock_1), (void*)value);
	}

	inline static int32_t get_offset_of_default_current_culture_2() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___default_current_culture_2)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_default_current_culture_2() const { return ___default_current_culture_2; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_default_current_culture_2() { return &___default_current_culture_2; }
	inline void set_default_current_culture_2(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___default_current_culture_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___default_current_culture_2), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentUICulture_33() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentUICulture_33)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentUICulture_33() const { return ___s_DefaultThreadCurrentUICulture_33; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentUICulture_33() { return &___s_DefaultThreadCurrentUICulture_33; }
	inline void set_s_DefaultThreadCurrentUICulture_33(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentUICulture_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentUICulture_33), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentCulture_34() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentCulture_34)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentCulture_34() const { return ___s_DefaultThreadCurrentCulture_34; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentCulture_34() { return &___s_DefaultThreadCurrentCulture_34; }
	inline void set_s_DefaultThreadCurrentCulture_34(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentCulture_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentCulture_34), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_number_35() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_number_35)); }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * get_shared_by_number_35() const { return ___shared_by_number_35; }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B ** get_address_of_shared_by_number_35() { return &___shared_by_number_35; }
	inline void set_shared_by_number_35(Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * value)
	{
		___shared_by_number_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_number_35), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_name_36() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_name_36)); }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * get_shared_by_name_36() const { return ___shared_by_name_36; }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 ** get_address_of_shared_by_name_36() { return &___shared_by_name_36; }
	inline void set_shared_by_name_36(Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * value)
	{
		___shared_by_name_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_name_36), (void*)value);
	}

	inline static int32_t get_offset_of_IsTaiwanSku_37() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___IsTaiwanSku_37)); }
	inline bool get_IsTaiwanSku_37() const { return ___IsTaiwanSku_37; }
	inline bool* get_address_of_IsTaiwanSku_37() { return &___IsTaiwanSku_37; }
	inline void set_IsTaiwanSku_37(bool value)
	{
		___IsTaiwanSku_37 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	char* ___m_name_13;
	char* ___englishname_14;
	char* ___nativename_15;
	char* ___iso3lang_16;
	char* ___iso2lang_17;
	char* ___win3lang_18;
	char* ___territory_19;
	char** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};
// Native definition for COM marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	Il2CppChar* ___m_name_13;
	Il2CppChar* ___englishname_14;
	Il2CppChar* ___nativename_15;
	Il2CppChar* ___iso3lang_16;
	Il2CppChar* ___iso2lang_17;
	Il2CppChar* ___win3lang_18;
	Il2CppChar* ___territory_19;
	Il2CppChar** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};

// System.Reflection.MemberInfo
struct  MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkChars_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkPrevious_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.Events.UnityEventBase
struct  UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// UnityEngine.YieldInstruction
struct  YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
};

// Valve.VR.SteamVR_Action
struct  SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action::actionPath
	String_t* ___actionPath_0;
	// System.Boolean Valve.VR.SteamVR_Action::needsReinit
	bool ___needsReinit_1;
	// System.String Valve.VR.SteamVR_Action::cachedShortName
	String_t* ___cachedShortName_3;

public:
	inline static int32_t get_offset_of_actionPath_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___actionPath_0)); }
	inline String_t* get_actionPath_0() const { return ___actionPath_0; }
	inline String_t** get_address_of_actionPath_0() { return &___actionPath_0; }
	inline void set_actionPath_0(String_t* value)
	{
		___actionPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_needsReinit_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___needsReinit_1)); }
	inline bool get_needsReinit_1() const { return ___needsReinit_1; }
	inline bool* get_address_of_needsReinit_1() { return &___needsReinit_1; }
	inline void set_needsReinit_1(bool value)
	{
		___needsReinit_1 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___cachedShortName_3)); }
	inline String_t* get_cachedShortName_3() const { return ___cachedShortName_3; }
	inline String_t** get_address_of_cachedShortName_3() { return &___cachedShortName_3; }
	inline void set_cachedShortName_3(String_t* value)
	{
		___cachedShortName_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_3), (void*)value);
	}
};

struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Action::startUpdatingSourceOnAccess
	bool ___startUpdatingSourceOnAccess_2;

public:
	inline static int32_t get_offset_of_startUpdatingSourceOnAccess_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields, ___startUpdatingSourceOnAccess_2)); }
	inline bool get_startUpdatingSourceOnAccess_2() const { return ___startUpdatingSourceOnAccess_2; }
	inline bool* get_address_of_startUpdatingSourceOnAccess_2() { return &___startUpdatingSourceOnAccess_2; }
	inline void set_startUpdatingSourceOnAccess_2(bool value)
	{
		___startUpdatingSourceOnAccess_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet
struct  SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_ActionSet::actionSetPath
	String_t* ___actionSetPath_0;
	// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::setData
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * ___setData_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet::initialized
	bool ___initialized_2;

public:
	inline static int32_t get_offset_of_actionSetPath_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___actionSetPath_0)); }
	inline String_t* get_actionSetPath_0() const { return ___actionSetPath_0; }
	inline String_t** get_address_of_actionSetPath_0() { return &___actionSetPath_0; }
	inline void set_actionSetPath_0(String_t* value)
	{
		___actionSetPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_setData_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___setData_1)); }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * get_setData_1() const { return ___setData_1; }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 ** get_address_of_setData_1() { return &___setData_1; }
	inline void set_setData_1(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * value)
	{
		___setData_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setData_1), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___initialized_2)); }
	inline bool get_initialized_2() const { return ___initialized_2; }
	inline bool* get_address_of_initialized_2() { return &___initialized_2; }
	inline void set_initialized_2(bool value)
	{
		___initialized_2 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15
struct  U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7  : public RuntimeObject
{
public:
	// System.Int32 Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>2__current
	RuntimeObject * ___U3CU3E2__current_1;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::<>4__this
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ___U3CU3E4__this_2;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3E2__current_1() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E2__current_1)); }
	inline RuntimeObject * get_U3CU3E2__current_1() const { return ___U3CU3E2__current_1; }
	inline RuntimeObject ** get_address_of_U3CU3E2__current_1() { return &___U3CU3E2__current_1; }
	inline void set_U3CU3E2__current_1(RuntimeObject * value)
	{
		___U3CU3E2__current_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E2__current_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3E4__this_2() { return static_cast<int32_t>(offsetof(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7, ___U3CU3E4__this_2)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get_U3CU3E4__this_2() const { return ___U3CU3E4__this_2; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of_U3CU3E4__this_2() { return &___U3CU3E4__this_2; }
	inline void set_U3CU3E4__this_2(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		___U3CU3E4__this_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_2), (void*)value);
	}
};


// Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>
struct  SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4  : public RuntimeObject
{
public:
	// T[] Valve.VR.SteamVR_RingBuffer`1::buffer
	SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* ___buffer_0;
	// System.Int32 Valve.VR.SteamVR_RingBuffer`1::currentIndex
	int32_t ___currentIndex_1;
	// T Valve.VR.SteamVR_RingBuffer`1::lastElement
	SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * ___lastElement_2;
	// System.Boolean Valve.VR.SteamVR_RingBuffer`1::cleared
	bool ___cleared_3;

public:
	inline static int32_t get_offset_of_buffer_0() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___buffer_0)); }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* get_buffer_0() const { return ___buffer_0; }
	inline SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F** get_address_of_buffer_0() { return &___buffer_0; }
	inline void set_buffer_0(SteamVR_HistoryStepU5BU5D_t43030A4B81B2D8EF4C0661A965AA3C15F65E828F* value)
	{
		___buffer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buffer_0), (void*)value);
	}

	inline static int32_t get_offset_of_currentIndex_1() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___currentIndex_1)); }
	inline int32_t get_currentIndex_1() const { return ___currentIndex_1; }
	inline int32_t* get_address_of_currentIndex_1() { return &___currentIndex_1; }
	inline void set_currentIndex_1(int32_t value)
	{
		___currentIndex_1 = value;
	}

	inline static int32_t get_offset_of_lastElement_2() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___lastElement_2)); }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * get_lastElement_2() const { return ___lastElement_2; }
	inline SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E ** get_address_of_lastElement_2() { return &___lastElement_2; }
	inline void set_lastElement_2(SteamVR_HistoryStep_t90A5A15C505B8C28A5E344A1431F49082DACCC5E * value)
	{
		___lastElement_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lastElement_2), (void*)value);
	}

	inline static int32_t get_offset_of_cleared_3() { return static_cast<int32_t>(offsetof(SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4, ___cleared_3)); }
	inline bool get_cleared_3() const { return ___cleared_3; }
	inline bool* get_address_of_cleared_3() { return &___cleared_3; }
	inline void set_cleared_3(bool value)
	{
		___cleared_3 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexes
struct  SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerIndexes::enumArray
	SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* ___enumArray_5;

public:
	inline static int32_t get_offset_of_enumArray_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields, ___enumArray_5)); }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* get_enumArray_5() const { return ___enumArray_5; }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7** get_address_of_enumArray_5() { return &___enumArray_5; }
	inline void set_enumArray_5(SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* value)
	{
		___enumArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_5), (void*)value);
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexes
struct  SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerSplayIndexes::enumArray
	SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* ___enumArray_4;

public:
	inline static int32_t get_offset_of_enumArray_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields, ___enumArray_4)); }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* get_enumArray_4() const { return ___enumArray_4; }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B** get_address_of_enumArray_4() { return &___enumArray_4; }
	inline void set_enumArray_4(SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* value)
	{
		___enumArray_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_4), (void*)value);
	}
};


// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Char
struct  Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9 
{
public:
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9, ___m_value_0)); }
	inline Il2CppChar get_m_value_0() const { return ___m_value_0; }
	inline Il2CppChar* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(Il2CppChar value)
	{
		___m_value_0 = value;
	}
};

struct Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields
{
public:
	// System.Byte[] System.Char::categoryForLatin1
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___categoryForLatin1_3;

public:
	inline static int32_t get_offset_of_categoryForLatin1_3() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields, ___categoryForLatin1_3)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_categoryForLatin1_3() const { return ___categoryForLatin1_3; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_categoryForLatin1_3() { return &___categoryForLatin1_3; }
	inline void set_categoryForLatin1_3(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___categoryForLatin1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___categoryForLatin1_3), (void*)value);
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Boolean>
struct  Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 
{
public:
	// T System.Nullable`1::value
	bool ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___value_0)); }
	inline bool get_value_0() const { return ___value_0; }
	inline bool* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(bool value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Events.UnityEvent`1<Valve.VR.VREvent_t>
struct  UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>
struct  UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`2::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>
struct  UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>
struct  UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>
struct  UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>
struct  UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`4::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Mathf
struct  Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB__padding[1];
	};

public:
};

struct Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields
{
public:
	// System.Single UnityEngine.Mathf::Epsilon
	float ___Epsilon_0;

public:
	inline static int32_t get_offset_of_Epsilon_0() { return static_cast<int32_t>(offsetof(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields, ___Epsilon_0)); }
	inline float get_Epsilon_0() const { return ___Epsilon_0; }
	inline float* get_address_of_Epsilon_0() { return &___Epsilon_0; }
	inline void set_Epsilon_0(float value)
	{
		___Epsilon_0 = value;
	}
};


// UnityEngine.Quaternion
struct  Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct  Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdQuaternionf_t
struct  HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 
{
public:
	// System.Single Valve.VR.HmdQuaternionf_t::w
	float ___w_0;
	// System.Single Valve.VR.HmdQuaternionf_t::x
	float ___x_1;
	// System.Single Valve.VR.HmdQuaternionf_t::y
	float ___y_2;
	// System.Single Valve.VR.HmdQuaternionf_t::z
	float ___z_3;

public:
	inline static int32_t get_offset_of_w_0() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___w_0)); }
	inline float get_w_0() const { return ___w_0; }
	inline float* get_address_of_w_0() { return &___w_0; }
	inline void set_w_0(float value)
	{
		___w_0 = value;
	}

	inline static int32_t get_offset_of_x_1() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___x_1)); }
	inline float get_x_1() const { return ___x_1; }
	inline float* get_address_of_x_1() { return &___x_1; }
	inline void set_x_1(float value)
	{
		___x_1 = value;
	}

	inline static int32_t get_offset_of_y_2() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___y_2)); }
	inline float get_y_2() const { return ___y_2; }
	inline float* get_address_of_y_2() { return &___y_2; }
	inline void set_y_2(float value)
	{
		___y_2 = value;
	}

	inline static int32_t get_offset_of_z_3() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11, ___z_3)); }
	inline float get_z_3() const { return ___z_3; }
	inline float* get_address_of_z_3() { return &___z_3; }
	inline void set_z_3(float value)
	{
		___z_3 = value;
	}
};


// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.HmdVector4_t
struct  HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 
{
public:
	// System.Single Valve.VR.HmdVector4_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector4_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector4_t::v2
	float ___v2_2;
	// System.Single Valve.VR.HmdVector4_t::v3
	float ___v3_3;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}

	inline static int32_t get_offset_of_v3_3() { return static_cast<int32_t>(offsetof(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9, ___v3_3)); }
	inline float get_v3_3() const { return ___v3_3; }
	inline float* get_address_of_v3_3() { return &___v3_3; }
	inline void set_v3_3(float value)
	{
		___v3_3 = value;
	}
};


// Valve.VR.IVRInput
struct  IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 
{
public:
	// Valve.VR.IVRInput__SetActionManifestPath Valve.VR.IVRInput::SetActionManifestPath
	_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * ___SetActionManifestPath_0;
	// Valve.VR.IVRInput__GetActionSetHandle Valve.VR.IVRInput::GetActionSetHandle
	_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * ___GetActionSetHandle_1;
	// Valve.VR.IVRInput__GetActionHandle Valve.VR.IVRInput::GetActionHandle
	_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * ___GetActionHandle_2;
	// Valve.VR.IVRInput__GetInputSourceHandle Valve.VR.IVRInput::GetInputSourceHandle
	_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * ___GetInputSourceHandle_3;
	// Valve.VR.IVRInput__UpdateActionState Valve.VR.IVRInput::UpdateActionState
	_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * ___UpdateActionState_4;
	// Valve.VR.IVRInput__GetDigitalActionData Valve.VR.IVRInput::GetDigitalActionData
	_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * ___GetDigitalActionData_5;
	// Valve.VR.IVRInput__GetAnalogActionData Valve.VR.IVRInput::GetAnalogActionData
	_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * ___GetAnalogActionData_6;
	// Valve.VR.IVRInput__GetPoseActionDataRelativeToNow Valve.VR.IVRInput::GetPoseActionDataRelativeToNow
	_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * ___GetPoseActionDataRelativeToNow_7;
	// Valve.VR.IVRInput__GetPoseActionDataForNextFrame Valve.VR.IVRInput::GetPoseActionDataForNextFrame
	_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * ___GetPoseActionDataForNextFrame_8;
	// Valve.VR.IVRInput__GetSkeletalActionData Valve.VR.IVRInput::GetSkeletalActionData
	_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * ___GetSkeletalActionData_9;
	// Valve.VR.IVRInput__GetBoneCount Valve.VR.IVRInput::GetBoneCount
	_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * ___GetBoneCount_10;
	// Valve.VR.IVRInput__GetBoneHierarchy Valve.VR.IVRInput::GetBoneHierarchy
	_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * ___GetBoneHierarchy_11;
	// Valve.VR.IVRInput__GetBoneName Valve.VR.IVRInput::GetBoneName
	_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * ___GetBoneName_12;
	// Valve.VR.IVRInput__GetSkeletalReferenceTransforms Valve.VR.IVRInput::GetSkeletalReferenceTransforms
	_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * ___GetSkeletalReferenceTransforms_13;
	// Valve.VR.IVRInput__GetSkeletalTrackingLevel Valve.VR.IVRInput::GetSkeletalTrackingLevel
	_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * ___GetSkeletalTrackingLevel_14;
	// Valve.VR.IVRInput__GetSkeletalBoneData Valve.VR.IVRInput::GetSkeletalBoneData
	_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * ___GetSkeletalBoneData_15;
	// Valve.VR.IVRInput__GetSkeletalSummaryData Valve.VR.IVRInput::GetSkeletalSummaryData
	_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * ___GetSkeletalSummaryData_16;
	// Valve.VR.IVRInput__GetSkeletalBoneDataCompressed Valve.VR.IVRInput::GetSkeletalBoneDataCompressed
	_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * ___GetSkeletalBoneDataCompressed_17;
	// Valve.VR.IVRInput__DecompressSkeletalBoneData Valve.VR.IVRInput::DecompressSkeletalBoneData
	_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * ___DecompressSkeletalBoneData_18;
	// Valve.VR.IVRInput__TriggerHapticVibrationAction Valve.VR.IVRInput::TriggerHapticVibrationAction
	_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * ___TriggerHapticVibrationAction_19;
	// Valve.VR.IVRInput__GetActionOrigins Valve.VR.IVRInput::GetActionOrigins
	_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * ___GetActionOrigins_20;
	// Valve.VR.IVRInput__GetOriginLocalizedName Valve.VR.IVRInput::GetOriginLocalizedName
	_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * ___GetOriginLocalizedName_21;
	// Valve.VR.IVRInput__GetOriginTrackedDeviceInfo Valve.VR.IVRInput::GetOriginTrackedDeviceInfo
	_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * ___GetOriginTrackedDeviceInfo_22;
	// Valve.VR.IVRInput__GetActionBindingInfo Valve.VR.IVRInput::GetActionBindingInfo
	_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * ___GetActionBindingInfo_23;
	// Valve.VR.IVRInput__ShowActionOrigins Valve.VR.IVRInput::ShowActionOrigins
	_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * ___ShowActionOrigins_24;
	// Valve.VR.IVRInput__ShowBindingsForActionSet Valve.VR.IVRInput::ShowBindingsForActionSet
	_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * ___ShowBindingsForActionSet_25;
	// Valve.VR.IVRInput__IsUsingLegacyInput Valve.VR.IVRInput::IsUsingLegacyInput
	_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * ___IsUsingLegacyInput_26;
	// Valve.VR.IVRInput__OpenBindingUI Valve.VR.IVRInput::OpenBindingUI
	_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * ___OpenBindingUI_27;

public:
	inline static int32_t get_offset_of_SetActionManifestPath_0() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetActionManifestPath_0)); }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * get_SetActionManifestPath_0() const { return ___SetActionManifestPath_0; }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE ** get_address_of_SetActionManifestPath_0() { return &___SetActionManifestPath_0; }
	inline void set_SetActionManifestPath_0(_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * value)
	{
		___SetActionManifestPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetActionManifestPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionSetHandle_1() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionSetHandle_1)); }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * get_GetActionSetHandle_1() const { return ___GetActionSetHandle_1; }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 ** get_address_of_GetActionSetHandle_1() { return &___GetActionSetHandle_1; }
	inline void set_GetActionSetHandle_1(_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * value)
	{
		___GetActionSetHandle_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionSetHandle_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionHandle_2() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionHandle_2)); }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * get_GetActionHandle_2() const { return ___GetActionHandle_2; }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 ** get_address_of_GetActionHandle_2() { return &___GetActionHandle_2; }
	inline void set_GetActionHandle_2(_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * value)
	{
		___GetActionHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetInputSourceHandle_3() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetInputSourceHandle_3)); }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * get_GetInputSourceHandle_3() const { return ___GetInputSourceHandle_3; }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF ** get_address_of_GetInputSourceHandle_3() { return &___GetInputSourceHandle_3; }
	inline void set_GetInputSourceHandle_3(_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * value)
	{
		___GetInputSourceHandle_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInputSourceHandle_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateActionState_4() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___UpdateActionState_4)); }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * get_UpdateActionState_4() const { return ___UpdateActionState_4; }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 ** get_address_of_UpdateActionState_4() { return &___UpdateActionState_4; }
	inline void set_UpdateActionState_4(_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * value)
	{
		___UpdateActionState_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateActionState_4), (void*)value);
	}

	inline static int32_t get_offset_of_GetDigitalActionData_5() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDigitalActionData_5)); }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * get_GetDigitalActionData_5() const { return ___GetDigitalActionData_5; }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 ** get_address_of_GetDigitalActionData_5() { return &___GetDigitalActionData_5; }
	inline void set_GetDigitalActionData_5(_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * value)
	{
		___GetDigitalActionData_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDigitalActionData_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetAnalogActionData_6() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetAnalogActionData_6)); }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * get_GetAnalogActionData_6() const { return ___GetAnalogActionData_6; }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB ** get_address_of_GetAnalogActionData_6() { return &___GetAnalogActionData_6; }
	inline void set_GetAnalogActionData_6(_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * value)
	{
		___GetAnalogActionData_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetAnalogActionData_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataRelativeToNow_7() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataRelativeToNow_7)); }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * get_GetPoseActionDataRelativeToNow_7() const { return ___GetPoseActionDataRelativeToNow_7; }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 ** get_address_of_GetPoseActionDataRelativeToNow_7() { return &___GetPoseActionDataRelativeToNow_7; }
	inline void set_GetPoseActionDataRelativeToNow_7(_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * value)
	{
		___GetPoseActionDataRelativeToNow_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataRelativeToNow_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataForNextFrame_8() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataForNextFrame_8)); }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * get_GetPoseActionDataForNextFrame_8() const { return ___GetPoseActionDataForNextFrame_8; }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E ** get_address_of_GetPoseActionDataForNextFrame_8() { return &___GetPoseActionDataForNextFrame_8; }
	inline void set_GetPoseActionDataForNextFrame_8(_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * value)
	{
		___GetPoseActionDataForNextFrame_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataForNextFrame_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalActionData_9() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalActionData_9)); }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * get_GetSkeletalActionData_9() const { return ___GetSkeletalActionData_9; }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A ** get_address_of_GetSkeletalActionData_9() { return &___GetSkeletalActionData_9; }
	inline void set_GetSkeletalActionData_9(_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * value)
	{
		___GetSkeletalActionData_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalActionData_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneCount_10() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneCount_10)); }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * get_GetBoneCount_10() const { return ___GetBoneCount_10; }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 ** get_address_of_GetBoneCount_10() { return &___GetBoneCount_10; }
	inline void set_GetBoneCount_10(_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * value)
	{
		___GetBoneCount_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneCount_10), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneHierarchy_11() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneHierarchy_11)); }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * get_GetBoneHierarchy_11() const { return ___GetBoneHierarchy_11; }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 ** get_address_of_GetBoneHierarchy_11() { return &___GetBoneHierarchy_11; }
	inline void set_GetBoneHierarchy_11(_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * value)
	{
		___GetBoneHierarchy_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneHierarchy_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneName_12() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneName_12)); }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * get_GetBoneName_12() const { return ___GetBoneName_12; }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF ** get_address_of_GetBoneName_12() { return &___GetBoneName_12; }
	inline void set_GetBoneName_12(_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * value)
	{
		___GetBoneName_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneName_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalReferenceTransforms_13() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalReferenceTransforms_13)); }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * get_GetSkeletalReferenceTransforms_13() const { return ___GetSkeletalReferenceTransforms_13; }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 ** get_address_of_GetSkeletalReferenceTransforms_13() { return &___GetSkeletalReferenceTransforms_13; }
	inline void set_GetSkeletalReferenceTransforms_13(_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * value)
	{
		___GetSkeletalReferenceTransforms_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalReferenceTransforms_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalTrackingLevel_14() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalTrackingLevel_14)); }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * get_GetSkeletalTrackingLevel_14() const { return ___GetSkeletalTrackingLevel_14; }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 ** get_address_of_GetSkeletalTrackingLevel_14() { return &___GetSkeletalTrackingLevel_14; }
	inline void set_GetSkeletalTrackingLevel_14(_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * value)
	{
		___GetSkeletalTrackingLevel_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalTrackingLevel_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneData_15() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneData_15)); }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * get_GetSkeletalBoneData_15() const { return ___GetSkeletalBoneData_15; }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A ** get_address_of_GetSkeletalBoneData_15() { return &___GetSkeletalBoneData_15; }
	inline void set_GetSkeletalBoneData_15(_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * value)
	{
		___GetSkeletalBoneData_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneData_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalSummaryData_16() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalSummaryData_16)); }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * get_GetSkeletalSummaryData_16() const { return ___GetSkeletalSummaryData_16; }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 ** get_address_of_GetSkeletalSummaryData_16() { return &___GetSkeletalSummaryData_16; }
	inline void set_GetSkeletalSummaryData_16(_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * value)
	{
		___GetSkeletalSummaryData_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalSummaryData_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneDataCompressed_17() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneDataCompressed_17)); }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * get_GetSkeletalBoneDataCompressed_17() const { return ___GetSkeletalBoneDataCompressed_17; }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B ** get_address_of_GetSkeletalBoneDataCompressed_17() { return &___GetSkeletalBoneDataCompressed_17; }
	inline void set_GetSkeletalBoneDataCompressed_17(_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * value)
	{
		___GetSkeletalBoneDataCompressed_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneDataCompressed_17), (void*)value);
	}

	inline static int32_t get_offset_of_DecompressSkeletalBoneData_18() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___DecompressSkeletalBoneData_18)); }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * get_DecompressSkeletalBoneData_18() const { return ___DecompressSkeletalBoneData_18; }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 ** get_address_of_DecompressSkeletalBoneData_18() { return &___DecompressSkeletalBoneData_18; }
	inline void set_DecompressSkeletalBoneData_18(_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * value)
	{
		___DecompressSkeletalBoneData_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DecompressSkeletalBoneData_18), (void*)value);
	}

	inline static int32_t get_offset_of_TriggerHapticVibrationAction_19() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___TriggerHapticVibrationAction_19)); }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * get_TriggerHapticVibrationAction_19() const { return ___TriggerHapticVibrationAction_19; }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 ** get_address_of_TriggerHapticVibrationAction_19() { return &___TriggerHapticVibrationAction_19; }
	inline void set_TriggerHapticVibrationAction_19(_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * value)
	{
		___TriggerHapticVibrationAction_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TriggerHapticVibrationAction_19), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionOrigins_20() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionOrigins_20)); }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * get_GetActionOrigins_20() const { return ___GetActionOrigins_20; }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 ** get_address_of_GetActionOrigins_20() { return &___GetActionOrigins_20; }
	inline void set_GetActionOrigins_20(_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * value)
	{
		___GetActionOrigins_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionOrigins_20), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginLocalizedName_21() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginLocalizedName_21)); }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * get_GetOriginLocalizedName_21() const { return ___GetOriginLocalizedName_21; }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F ** get_address_of_GetOriginLocalizedName_21() { return &___GetOriginLocalizedName_21; }
	inline void set_GetOriginLocalizedName_21(_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * value)
	{
		___GetOriginLocalizedName_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginLocalizedName_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginTrackedDeviceInfo_22() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginTrackedDeviceInfo_22)); }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * get_GetOriginTrackedDeviceInfo_22() const { return ___GetOriginTrackedDeviceInfo_22; }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B ** get_address_of_GetOriginTrackedDeviceInfo_22() { return &___GetOriginTrackedDeviceInfo_22; }
	inline void set_GetOriginTrackedDeviceInfo_22(_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * value)
	{
		___GetOriginTrackedDeviceInfo_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginTrackedDeviceInfo_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionBindingInfo_23() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionBindingInfo_23)); }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * get_GetActionBindingInfo_23() const { return ___GetActionBindingInfo_23; }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 ** get_address_of_GetActionBindingInfo_23() { return &___GetActionBindingInfo_23; }
	inline void set_GetActionBindingInfo_23(_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * value)
	{
		___GetActionBindingInfo_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionBindingInfo_23), (void*)value);
	}

	inline static int32_t get_offset_of_ShowActionOrigins_24() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowActionOrigins_24)); }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * get_ShowActionOrigins_24() const { return ___ShowActionOrigins_24; }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 ** get_address_of_ShowActionOrigins_24() { return &___ShowActionOrigins_24; }
	inline void set_ShowActionOrigins_24(_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * value)
	{
		___ShowActionOrigins_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowActionOrigins_24), (void*)value);
	}

	inline static int32_t get_offset_of_ShowBindingsForActionSet_25() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowBindingsForActionSet_25)); }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * get_ShowBindingsForActionSet_25() const { return ___ShowBindingsForActionSet_25; }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A ** get_address_of_ShowBindingsForActionSet_25() { return &___ShowBindingsForActionSet_25; }
	inline void set_ShowBindingsForActionSet_25(_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * value)
	{
		___ShowBindingsForActionSet_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowBindingsForActionSet_25), (void*)value);
	}

	inline static int32_t get_offset_of_IsUsingLegacyInput_26() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___IsUsingLegacyInput_26)); }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * get_IsUsingLegacyInput_26() const { return ___IsUsingLegacyInput_26; }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 ** get_address_of_IsUsingLegacyInput_26() { return &___IsUsingLegacyInput_26; }
	inline void set_IsUsingLegacyInput_26(_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * value)
	{
		___IsUsingLegacyInput_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsUsingLegacyInput_26), (void*)value);
	}

	inline static int32_t get_offset_of_OpenBindingUI_27() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___OpenBindingUI_27)); }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * get_OpenBindingUI_27() const { return ___OpenBindingUI_27; }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F ** get_address_of_OpenBindingUI_27() { return &___OpenBindingUI_27; }
	inline void set_OpenBindingUI_27(_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * value)
	{
		___OpenBindingUI_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OpenBindingUI_27), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetBoneCount_10;
	Il2CppMethodPointer ___GetBoneHierarchy_11;
	Il2CppMethodPointer ___GetBoneName_12;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_13;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_14;
	Il2CppMethodPointer ___GetSkeletalBoneData_15;
	Il2CppMethodPointer ___GetSkeletalSummaryData_16;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_17;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_18;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_19;
	Il2CppMethodPointer ___GetActionOrigins_20;
	Il2CppMethodPointer ___GetOriginLocalizedName_21;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_22;
	Il2CppMethodPointer ___GetActionBindingInfo_23;
	Il2CppMethodPointer ___ShowActionOrigins_24;
	Il2CppMethodPointer ___ShowBindingsForActionSet_25;
	Il2CppMethodPointer ___IsUsingLegacyInput_26;
	Il2CppMethodPointer ___OpenBindingUI_27;
};
// Native definition for COM marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_com
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetBoneCount_10;
	Il2CppMethodPointer ___GetBoneHierarchy_11;
	Il2CppMethodPointer ___GetBoneName_12;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_13;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_14;
	Il2CppMethodPointer ___GetSkeletalBoneData_15;
	Il2CppMethodPointer ___GetSkeletalSummaryData_16;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_17;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_18;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_19;
	Il2CppMethodPointer ___GetActionOrigins_20;
	Il2CppMethodPointer ___GetOriginLocalizedName_21;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_22;
	Il2CppMethodPointer ___GetActionBindingInfo_23;
	Il2CppMethodPointer ___ShowActionOrigins_24;
	Il2CppMethodPointer ___ShowBindingsForActionSet_25;
	Il2CppMethodPointer ___IsUsingLegacyInput_26;
	Il2CppMethodPointer ___OpenBindingUI_27;
};

// Valve.VR.InputAnalogActionData_t
struct  InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C 
{
public:
	// System.Boolean Valve.VR.InputAnalogActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputAnalogActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Single Valve.VR.InputAnalogActionData_t::x
	float ___x_2;
	// System.Single Valve.VR.InputAnalogActionData_t::y
	float ___y_3;
	// System.Single Valve.VR.InputAnalogActionData_t::z
	float ___z_4;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaX
	float ___deltaX_5;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaY
	float ___deltaY_6;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaZ
	float ___deltaZ_7;
	// System.Single Valve.VR.InputAnalogActionData_t::fUpdateTime
	float ___fUpdateTime_8;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}

	inline static int32_t get_offset_of_deltaX_5() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaX_5)); }
	inline float get_deltaX_5() const { return ___deltaX_5; }
	inline float* get_address_of_deltaX_5() { return &___deltaX_5; }
	inline void set_deltaX_5(float value)
	{
		___deltaX_5 = value;
	}

	inline static int32_t get_offset_of_deltaY_6() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaY_6)); }
	inline float get_deltaY_6() const { return ___deltaY_6; }
	inline float* get_address_of_deltaY_6() { return &___deltaY_6; }
	inline void set_deltaY_6(float value)
	{
		___deltaY_6 = value;
	}

	inline static int32_t get_offset_of_deltaZ_7() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaZ_7)); }
	inline float get_deltaZ_7() const { return ___deltaZ_7; }
	inline float* get_address_of_deltaZ_7() { return &___deltaZ_7; }
	inline void set_deltaZ_7(float value)
	{
		___deltaZ_7 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_8() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___fUpdateTime_8)); }
	inline float get_fUpdateTime_8() const { return ___fUpdateTime_8; }
	inline float* get_address_of_fUpdateTime_8() { return &___fUpdateTime_8; }
	inline void set_fUpdateTime_8(float value)
	{
		___fUpdateTime_8 = value;
	}
};


// Valve.VR.InputDigitalActionData_t
struct  InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 
{
public:
	// System.Boolean Valve.VR.InputDigitalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputDigitalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bState
	bool ___bState_2;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bChanged
	bool ___bChanged_3;
	// System.Single Valve.VR.InputDigitalActionData_t::fUpdateTime
	float ___fUpdateTime_4;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_bState_2() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bState_2)); }
	inline bool get_bState_2() const { return ___bState_2; }
	inline bool* get_address_of_bState_2() { return &___bState_2; }
	inline void set_bState_2(bool value)
	{
		___bState_2 = value;
	}

	inline static int32_t get_offset_of_bChanged_3() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bChanged_3)); }
	inline bool get_bChanged_3() const { return ___bChanged_3; }
	inline bool* get_address_of_bChanged_3() { return &___bChanged_3; }
	inline void set_bChanged_3(bool value)
	{
		___bChanged_3 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_4() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___fUpdateTime_4)); }
	inline float get_fUpdateTime_4() const { return ___fUpdateTime_4; }
	inline float* get_address_of_fUpdateTime_4() { return &___fUpdateTime_4; }
	inline void set_fUpdateTime_4(float value)
	{
		___fUpdateTime_4 = value;
	}
};


// Valve.VR.InputOriginInfo_t
struct  InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A 
{
public:
	// System.UInt64 Valve.VR.InputOriginInfo_t::devicePath
	uint64_t ___devicePath_0;
	// System.UInt32 Valve.VR.InputOriginInfo_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName0
	uint8_t ___rchRenderModelComponentName0_2;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName1
	uint8_t ___rchRenderModelComponentName1_3;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName2
	uint8_t ___rchRenderModelComponentName2_4;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName3
	uint8_t ___rchRenderModelComponentName3_5;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName4
	uint8_t ___rchRenderModelComponentName4_6;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName5
	uint8_t ___rchRenderModelComponentName5_7;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName6
	uint8_t ___rchRenderModelComponentName6_8;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName7
	uint8_t ___rchRenderModelComponentName7_9;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName8
	uint8_t ___rchRenderModelComponentName8_10;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName9
	uint8_t ___rchRenderModelComponentName9_11;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName10
	uint8_t ___rchRenderModelComponentName10_12;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName11
	uint8_t ___rchRenderModelComponentName11_13;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName12
	uint8_t ___rchRenderModelComponentName12_14;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName13
	uint8_t ___rchRenderModelComponentName13_15;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName14
	uint8_t ___rchRenderModelComponentName14_16;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName15
	uint8_t ___rchRenderModelComponentName15_17;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName16
	uint8_t ___rchRenderModelComponentName16_18;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName17
	uint8_t ___rchRenderModelComponentName17_19;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName18
	uint8_t ___rchRenderModelComponentName18_20;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName19
	uint8_t ___rchRenderModelComponentName19_21;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName20
	uint8_t ___rchRenderModelComponentName20_22;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName21
	uint8_t ___rchRenderModelComponentName21_23;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName22
	uint8_t ___rchRenderModelComponentName22_24;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName23
	uint8_t ___rchRenderModelComponentName23_25;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName24
	uint8_t ___rchRenderModelComponentName24_26;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName25
	uint8_t ___rchRenderModelComponentName25_27;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName26
	uint8_t ___rchRenderModelComponentName26_28;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName27
	uint8_t ___rchRenderModelComponentName27_29;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName28
	uint8_t ___rchRenderModelComponentName28_30;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName29
	uint8_t ___rchRenderModelComponentName29_31;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName30
	uint8_t ___rchRenderModelComponentName30_32;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName31
	uint8_t ___rchRenderModelComponentName31_33;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName32
	uint8_t ___rchRenderModelComponentName32_34;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName33
	uint8_t ___rchRenderModelComponentName33_35;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName34
	uint8_t ___rchRenderModelComponentName34_36;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName35
	uint8_t ___rchRenderModelComponentName35_37;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName36
	uint8_t ___rchRenderModelComponentName36_38;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName37
	uint8_t ___rchRenderModelComponentName37_39;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName38
	uint8_t ___rchRenderModelComponentName38_40;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName39
	uint8_t ___rchRenderModelComponentName39_41;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName40
	uint8_t ___rchRenderModelComponentName40_42;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName41
	uint8_t ___rchRenderModelComponentName41_43;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName42
	uint8_t ___rchRenderModelComponentName42_44;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName43
	uint8_t ___rchRenderModelComponentName43_45;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName44
	uint8_t ___rchRenderModelComponentName44_46;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName45
	uint8_t ___rchRenderModelComponentName45_47;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName46
	uint8_t ___rchRenderModelComponentName46_48;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName47
	uint8_t ___rchRenderModelComponentName47_49;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName48
	uint8_t ___rchRenderModelComponentName48_50;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName49
	uint8_t ___rchRenderModelComponentName49_51;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName50
	uint8_t ___rchRenderModelComponentName50_52;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName51
	uint8_t ___rchRenderModelComponentName51_53;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName52
	uint8_t ___rchRenderModelComponentName52_54;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName53
	uint8_t ___rchRenderModelComponentName53_55;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName54
	uint8_t ___rchRenderModelComponentName54_56;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName55
	uint8_t ___rchRenderModelComponentName55_57;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName56
	uint8_t ___rchRenderModelComponentName56_58;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName57
	uint8_t ___rchRenderModelComponentName57_59;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName58
	uint8_t ___rchRenderModelComponentName58_60;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName59
	uint8_t ___rchRenderModelComponentName59_61;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName60
	uint8_t ___rchRenderModelComponentName60_62;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName61
	uint8_t ___rchRenderModelComponentName61_63;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName62
	uint8_t ___rchRenderModelComponentName62_64;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName63
	uint8_t ___rchRenderModelComponentName63_65;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName64
	uint8_t ___rchRenderModelComponentName64_66;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName65
	uint8_t ___rchRenderModelComponentName65_67;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName66
	uint8_t ___rchRenderModelComponentName66_68;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName67
	uint8_t ___rchRenderModelComponentName67_69;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName68
	uint8_t ___rchRenderModelComponentName68_70;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName69
	uint8_t ___rchRenderModelComponentName69_71;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName70
	uint8_t ___rchRenderModelComponentName70_72;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName71
	uint8_t ___rchRenderModelComponentName71_73;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName72
	uint8_t ___rchRenderModelComponentName72_74;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName73
	uint8_t ___rchRenderModelComponentName73_75;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName74
	uint8_t ___rchRenderModelComponentName74_76;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName75
	uint8_t ___rchRenderModelComponentName75_77;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName76
	uint8_t ___rchRenderModelComponentName76_78;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName77
	uint8_t ___rchRenderModelComponentName77_79;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName78
	uint8_t ___rchRenderModelComponentName78_80;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName79
	uint8_t ___rchRenderModelComponentName79_81;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName80
	uint8_t ___rchRenderModelComponentName80_82;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName81
	uint8_t ___rchRenderModelComponentName81_83;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName82
	uint8_t ___rchRenderModelComponentName82_84;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName83
	uint8_t ___rchRenderModelComponentName83_85;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName84
	uint8_t ___rchRenderModelComponentName84_86;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName85
	uint8_t ___rchRenderModelComponentName85_87;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName86
	uint8_t ___rchRenderModelComponentName86_88;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName87
	uint8_t ___rchRenderModelComponentName87_89;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName88
	uint8_t ___rchRenderModelComponentName88_90;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName89
	uint8_t ___rchRenderModelComponentName89_91;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName90
	uint8_t ___rchRenderModelComponentName90_92;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName91
	uint8_t ___rchRenderModelComponentName91_93;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName92
	uint8_t ___rchRenderModelComponentName92_94;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName93
	uint8_t ___rchRenderModelComponentName93_95;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName94
	uint8_t ___rchRenderModelComponentName94_96;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName95
	uint8_t ___rchRenderModelComponentName95_97;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName96
	uint8_t ___rchRenderModelComponentName96_98;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName97
	uint8_t ___rchRenderModelComponentName97_99;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName98
	uint8_t ___rchRenderModelComponentName98_100;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName99
	uint8_t ___rchRenderModelComponentName99_101;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName100
	uint8_t ___rchRenderModelComponentName100_102;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName101
	uint8_t ___rchRenderModelComponentName101_103;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName102
	uint8_t ___rchRenderModelComponentName102_104;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName103
	uint8_t ___rchRenderModelComponentName103_105;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName104
	uint8_t ___rchRenderModelComponentName104_106;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName105
	uint8_t ___rchRenderModelComponentName105_107;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName106
	uint8_t ___rchRenderModelComponentName106_108;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName107
	uint8_t ___rchRenderModelComponentName107_109;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName108
	uint8_t ___rchRenderModelComponentName108_110;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName109
	uint8_t ___rchRenderModelComponentName109_111;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName110
	uint8_t ___rchRenderModelComponentName110_112;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName111
	uint8_t ___rchRenderModelComponentName111_113;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName112
	uint8_t ___rchRenderModelComponentName112_114;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName113
	uint8_t ___rchRenderModelComponentName113_115;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName114
	uint8_t ___rchRenderModelComponentName114_116;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName115
	uint8_t ___rchRenderModelComponentName115_117;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName116
	uint8_t ___rchRenderModelComponentName116_118;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName117
	uint8_t ___rchRenderModelComponentName117_119;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName118
	uint8_t ___rchRenderModelComponentName118_120;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName119
	uint8_t ___rchRenderModelComponentName119_121;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName120
	uint8_t ___rchRenderModelComponentName120_122;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName121
	uint8_t ___rchRenderModelComponentName121_123;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName122
	uint8_t ___rchRenderModelComponentName122_124;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName123
	uint8_t ___rchRenderModelComponentName123_125;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName124
	uint8_t ___rchRenderModelComponentName124_126;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName125
	uint8_t ___rchRenderModelComponentName125_127;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName126
	uint8_t ___rchRenderModelComponentName126_128;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName127
	uint8_t ___rchRenderModelComponentName127_129;

public:
	inline static int32_t get_offset_of_devicePath_0() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___devicePath_0)); }
	inline uint64_t get_devicePath_0() const { return ___devicePath_0; }
	inline uint64_t* get_address_of_devicePath_0() { return &___devicePath_0; }
	inline void set_devicePath_0(uint64_t value)
	{
		___devicePath_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName0_2() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName0_2)); }
	inline uint8_t get_rchRenderModelComponentName0_2() const { return ___rchRenderModelComponentName0_2; }
	inline uint8_t* get_address_of_rchRenderModelComponentName0_2() { return &___rchRenderModelComponentName0_2; }
	inline void set_rchRenderModelComponentName0_2(uint8_t value)
	{
		___rchRenderModelComponentName0_2 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName1_3() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName1_3)); }
	inline uint8_t get_rchRenderModelComponentName1_3() const { return ___rchRenderModelComponentName1_3; }
	inline uint8_t* get_address_of_rchRenderModelComponentName1_3() { return &___rchRenderModelComponentName1_3; }
	inline void set_rchRenderModelComponentName1_3(uint8_t value)
	{
		___rchRenderModelComponentName1_3 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName2_4() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName2_4)); }
	inline uint8_t get_rchRenderModelComponentName2_4() const { return ___rchRenderModelComponentName2_4; }
	inline uint8_t* get_address_of_rchRenderModelComponentName2_4() { return &___rchRenderModelComponentName2_4; }
	inline void set_rchRenderModelComponentName2_4(uint8_t value)
	{
		___rchRenderModelComponentName2_4 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName3_5() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName3_5)); }
	inline uint8_t get_rchRenderModelComponentName3_5() const { return ___rchRenderModelComponentName3_5; }
	inline uint8_t* get_address_of_rchRenderModelComponentName3_5() { return &___rchRenderModelComponentName3_5; }
	inline void set_rchRenderModelComponentName3_5(uint8_t value)
	{
		___rchRenderModelComponentName3_5 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName4_6() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName4_6)); }
	inline uint8_t get_rchRenderModelComponentName4_6() const { return ___rchRenderModelComponentName4_6; }
	inline uint8_t* get_address_of_rchRenderModelComponentName4_6() { return &___rchRenderModelComponentName4_6; }
	inline void set_rchRenderModelComponentName4_6(uint8_t value)
	{
		___rchRenderModelComponentName4_6 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName5_7() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName5_7)); }
	inline uint8_t get_rchRenderModelComponentName5_7() const { return ___rchRenderModelComponentName5_7; }
	inline uint8_t* get_address_of_rchRenderModelComponentName5_7() { return &___rchRenderModelComponentName5_7; }
	inline void set_rchRenderModelComponentName5_7(uint8_t value)
	{
		___rchRenderModelComponentName5_7 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName6_8() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName6_8)); }
	inline uint8_t get_rchRenderModelComponentName6_8() const { return ___rchRenderModelComponentName6_8; }
	inline uint8_t* get_address_of_rchRenderModelComponentName6_8() { return &___rchRenderModelComponentName6_8; }
	inline void set_rchRenderModelComponentName6_8(uint8_t value)
	{
		___rchRenderModelComponentName6_8 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName7_9() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName7_9)); }
	inline uint8_t get_rchRenderModelComponentName7_9() const { return ___rchRenderModelComponentName7_9; }
	inline uint8_t* get_address_of_rchRenderModelComponentName7_9() { return &___rchRenderModelComponentName7_9; }
	inline void set_rchRenderModelComponentName7_9(uint8_t value)
	{
		___rchRenderModelComponentName7_9 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName8_10() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName8_10)); }
	inline uint8_t get_rchRenderModelComponentName8_10() const { return ___rchRenderModelComponentName8_10; }
	inline uint8_t* get_address_of_rchRenderModelComponentName8_10() { return &___rchRenderModelComponentName8_10; }
	inline void set_rchRenderModelComponentName8_10(uint8_t value)
	{
		___rchRenderModelComponentName8_10 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName9_11() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName9_11)); }
	inline uint8_t get_rchRenderModelComponentName9_11() const { return ___rchRenderModelComponentName9_11; }
	inline uint8_t* get_address_of_rchRenderModelComponentName9_11() { return &___rchRenderModelComponentName9_11; }
	inline void set_rchRenderModelComponentName9_11(uint8_t value)
	{
		___rchRenderModelComponentName9_11 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName10_12() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName10_12)); }
	inline uint8_t get_rchRenderModelComponentName10_12() const { return ___rchRenderModelComponentName10_12; }
	inline uint8_t* get_address_of_rchRenderModelComponentName10_12() { return &___rchRenderModelComponentName10_12; }
	inline void set_rchRenderModelComponentName10_12(uint8_t value)
	{
		___rchRenderModelComponentName10_12 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName11_13() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName11_13)); }
	inline uint8_t get_rchRenderModelComponentName11_13() const { return ___rchRenderModelComponentName11_13; }
	inline uint8_t* get_address_of_rchRenderModelComponentName11_13() { return &___rchRenderModelComponentName11_13; }
	inline void set_rchRenderModelComponentName11_13(uint8_t value)
	{
		___rchRenderModelComponentName11_13 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName12_14() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName12_14)); }
	inline uint8_t get_rchRenderModelComponentName12_14() const { return ___rchRenderModelComponentName12_14; }
	inline uint8_t* get_address_of_rchRenderModelComponentName12_14() { return &___rchRenderModelComponentName12_14; }
	inline void set_rchRenderModelComponentName12_14(uint8_t value)
	{
		___rchRenderModelComponentName12_14 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName13_15() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName13_15)); }
	inline uint8_t get_rchRenderModelComponentName13_15() const { return ___rchRenderModelComponentName13_15; }
	inline uint8_t* get_address_of_rchRenderModelComponentName13_15() { return &___rchRenderModelComponentName13_15; }
	inline void set_rchRenderModelComponentName13_15(uint8_t value)
	{
		___rchRenderModelComponentName13_15 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName14_16() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName14_16)); }
	inline uint8_t get_rchRenderModelComponentName14_16() const { return ___rchRenderModelComponentName14_16; }
	inline uint8_t* get_address_of_rchRenderModelComponentName14_16() { return &___rchRenderModelComponentName14_16; }
	inline void set_rchRenderModelComponentName14_16(uint8_t value)
	{
		___rchRenderModelComponentName14_16 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName15_17() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName15_17)); }
	inline uint8_t get_rchRenderModelComponentName15_17() const { return ___rchRenderModelComponentName15_17; }
	inline uint8_t* get_address_of_rchRenderModelComponentName15_17() { return &___rchRenderModelComponentName15_17; }
	inline void set_rchRenderModelComponentName15_17(uint8_t value)
	{
		___rchRenderModelComponentName15_17 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName16_18() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName16_18)); }
	inline uint8_t get_rchRenderModelComponentName16_18() const { return ___rchRenderModelComponentName16_18; }
	inline uint8_t* get_address_of_rchRenderModelComponentName16_18() { return &___rchRenderModelComponentName16_18; }
	inline void set_rchRenderModelComponentName16_18(uint8_t value)
	{
		___rchRenderModelComponentName16_18 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName17_19() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName17_19)); }
	inline uint8_t get_rchRenderModelComponentName17_19() const { return ___rchRenderModelComponentName17_19; }
	inline uint8_t* get_address_of_rchRenderModelComponentName17_19() { return &___rchRenderModelComponentName17_19; }
	inline void set_rchRenderModelComponentName17_19(uint8_t value)
	{
		___rchRenderModelComponentName17_19 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName18_20() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName18_20)); }
	inline uint8_t get_rchRenderModelComponentName18_20() const { return ___rchRenderModelComponentName18_20; }
	inline uint8_t* get_address_of_rchRenderModelComponentName18_20() { return &___rchRenderModelComponentName18_20; }
	inline void set_rchRenderModelComponentName18_20(uint8_t value)
	{
		___rchRenderModelComponentName18_20 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName19_21() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName19_21)); }
	inline uint8_t get_rchRenderModelComponentName19_21() const { return ___rchRenderModelComponentName19_21; }
	inline uint8_t* get_address_of_rchRenderModelComponentName19_21() { return &___rchRenderModelComponentName19_21; }
	inline void set_rchRenderModelComponentName19_21(uint8_t value)
	{
		___rchRenderModelComponentName19_21 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName20_22() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName20_22)); }
	inline uint8_t get_rchRenderModelComponentName20_22() const { return ___rchRenderModelComponentName20_22; }
	inline uint8_t* get_address_of_rchRenderModelComponentName20_22() { return &___rchRenderModelComponentName20_22; }
	inline void set_rchRenderModelComponentName20_22(uint8_t value)
	{
		___rchRenderModelComponentName20_22 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName21_23() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName21_23)); }
	inline uint8_t get_rchRenderModelComponentName21_23() const { return ___rchRenderModelComponentName21_23; }
	inline uint8_t* get_address_of_rchRenderModelComponentName21_23() { return &___rchRenderModelComponentName21_23; }
	inline void set_rchRenderModelComponentName21_23(uint8_t value)
	{
		___rchRenderModelComponentName21_23 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName22_24() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName22_24)); }
	inline uint8_t get_rchRenderModelComponentName22_24() const { return ___rchRenderModelComponentName22_24; }
	inline uint8_t* get_address_of_rchRenderModelComponentName22_24() { return &___rchRenderModelComponentName22_24; }
	inline void set_rchRenderModelComponentName22_24(uint8_t value)
	{
		___rchRenderModelComponentName22_24 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName23_25() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName23_25)); }
	inline uint8_t get_rchRenderModelComponentName23_25() const { return ___rchRenderModelComponentName23_25; }
	inline uint8_t* get_address_of_rchRenderModelComponentName23_25() { return &___rchRenderModelComponentName23_25; }
	inline void set_rchRenderModelComponentName23_25(uint8_t value)
	{
		___rchRenderModelComponentName23_25 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName24_26() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName24_26)); }
	inline uint8_t get_rchRenderModelComponentName24_26() const { return ___rchRenderModelComponentName24_26; }
	inline uint8_t* get_address_of_rchRenderModelComponentName24_26() { return &___rchRenderModelComponentName24_26; }
	inline void set_rchRenderModelComponentName24_26(uint8_t value)
	{
		___rchRenderModelComponentName24_26 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName25_27() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName25_27)); }
	inline uint8_t get_rchRenderModelComponentName25_27() const { return ___rchRenderModelComponentName25_27; }
	inline uint8_t* get_address_of_rchRenderModelComponentName25_27() { return &___rchRenderModelComponentName25_27; }
	inline void set_rchRenderModelComponentName25_27(uint8_t value)
	{
		___rchRenderModelComponentName25_27 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName26_28() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName26_28)); }
	inline uint8_t get_rchRenderModelComponentName26_28() const { return ___rchRenderModelComponentName26_28; }
	inline uint8_t* get_address_of_rchRenderModelComponentName26_28() { return &___rchRenderModelComponentName26_28; }
	inline void set_rchRenderModelComponentName26_28(uint8_t value)
	{
		___rchRenderModelComponentName26_28 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName27_29() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName27_29)); }
	inline uint8_t get_rchRenderModelComponentName27_29() const { return ___rchRenderModelComponentName27_29; }
	inline uint8_t* get_address_of_rchRenderModelComponentName27_29() { return &___rchRenderModelComponentName27_29; }
	inline void set_rchRenderModelComponentName27_29(uint8_t value)
	{
		___rchRenderModelComponentName27_29 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName28_30() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName28_30)); }
	inline uint8_t get_rchRenderModelComponentName28_30() const { return ___rchRenderModelComponentName28_30; }
	inline uint8_t* get_address_of_rchRenderModelComponentName28_30() { return &___rchRenderModelComponentName28_30; }
	inline void set_rchRenderModelComponentName28_30(uint8_t value)
	{
		___rchRenderModelComponentName28_30 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName29_31() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName29_31)); }
	inline uint8_t get_rchRenderModelComponentName29_31() const { return ___rchRenderModelComponentName29_31; }
	inline uint8_t* get_address_of_rchRenderModelComponentName29_31() { return &___rchRenderModelComponentName29_31; }
	inline void set_rchRenderModelComponentName29_31(uint8_t value)
	{
		___rchRenderModelComponentName29_31 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName30_32() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName30_32)); }
	inline uint8_t get_rchRenderModelComponentName30_32() const { return ___rchRenderModelComponentName30_32; }
	inline uint8_t* get_address_of_rchRenderModelComponentName30_32() { return &___rchRenderModelComponentName30_32; }
	inline void set_rchRenderModelComponentName30_32(uint8_t value)
	{
		___rchRenderModelComponentName30_32 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName31_33() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName31_33)); }
	inline uint8_t get_rchRenderModelComponentName31_33() const { return ___rchRenderModelComponentName31_33; }
	inline uint8_t* get_address_of_rchRenderModelComponentName31_33() { return &___rchRenderModelComponentName31_33; }
	inline void set_rchRenderModelComponentName31_33(uint8_t value)
	{
		___rchRenderModelComponentName31_33 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName32_34() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName32_34)); }
	inline uint8_t get_rchRenderModelComponentName32_34() const { return ___rchRenderModelComponentName32_34; }
	inline uint8_t* get_address_of_rchRenderModelComponentName32_34() { return &___rchRenderModelComponentName32_34; }
	inline void set_rchRenderModelComponentName32_34(uint8_t value)
	{
		___rchRenderModelComponentName32_34 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName33_35() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName33_35)); }
	inline uint8_t get_rchRenderModelComponentName33_35() const { return ___rchRenderModelComponentName33_35; }
	inline uint8_t* get_address_of_rchRenderModelComponentName33_35() { return &___rchRenderModelComponentName33_35; }
	inline void set_rchRenderModelComponentName33_35(uint8_t value)
	{
		___rchRenderModelComponentName33_35 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName34_36() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName34_36)); }
	inline uint8_t get_rchRenderModelComponentName34_36() const { return ___rchRenderModelComponentName34_36; }
	inline uint8_t* get_address_of_rchRenderModelComponentName34_36() { return &___rchRenderModelComponentName34_36; }
	inline void set_rchRenderModelComponentName34_36(uint8_t value)
	{
		___rchRenderModelComponentName34_36 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName35_37() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName35_37)); }
	inline uint8_t get_rchRenderModelComponentName35_37() const { return ___rchRenderModelComponentName35_37; }
	inline uint8_t* get_address_of_rchRenderModelComponentName35_37() { return &___rchRenderModelComponentName35_37; }
	inline void set_rchRenderModelComponentName35_37(uint8_t value)
	{
		___rchRenderModelComponentName35_37 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName36_38() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName36_38)); }
	inline uint8_t get_rchRenderModelComponentName36_38() const { return ___rchRenderModelComponentName36_38; }
	inline uint8_t* get_address_of_rchRenderModelComponentName36_38() { return &___rchRenderModelComponentName36_38; }
	inline void set_rchRenderModelComponentName36_38(uint8_t value)
	{
		___rchRenderModelComponentName36_38 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName37_39() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName37_39)); }
	inline uint8_t get_rchRenderModelComponentName37_39() const { return ___rchRenderModelComponentName37_39; }
	inline uint8_t* get_address_of_rchRenderModelComponentName37_39() { return &___rchRenderModelComponentName37_39; }
	inline void set_rchRenderModelComponentName37_39(uint8_t value)
	{
		___rchRenderModelComponentName37_39 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName38_40() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName38_40)); }
	inline uint8_t get_rchRenderModelComponentName38_40() const { return ___rchRenderModelComponentName38_40; }
	inline uint8_t* get_address_of_rchRenderModelComponentName38_40() { return &___rchRenderModelComponentName38_40; }
	inline void set_rchRenderModelComponentName38_40(uint8_t value)
	{
		___rchRenderModelComponentName38_40 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName39_41() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName39_41)); }
	inline uint8_t get_rchRenderModelComponentName39_41() const { return ___rchRenderModelComponentName39_41; }
	inline uint8_t* get_address_of_rchRenderModelComponentName39_41() { return &___rchRenderModelComponentName39_41; }
	inline void set_rchRenderModelComponentName39_41(uint8_t value)
	{
		___rchRenderModelComponentName39_41 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName40_42() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName40_42)); }
	inline uint8_t get_rchRenderModelComponentName40_42() const { return ___rchRenderModelComponentName40_42; }
	inline uint8_t* get_address_of_rchRenderModelComponentName40_42() { return &___rchRenderModelComponentName40_42; }
	inline void set_rchRenderModelComponentName40_42(uint8_t value)
	{
		___rchRenderModelComponentName40_42 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName41_43() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName41_43)); }
	inline uint8_t get_rchRenderModelComponentName41_43() const { return ___rchRenderModelComponentName41_43; }
	inline uint8_t* get_address_of_rchRenderModelComponentName41_43() { return &___rchRenderModelComponentName41_43; }
	inline void set_rchRenderModelComponentName41_43(uint8_t value)
	{
		___rchRenderModelComponentName41_43 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName42_44() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName42_44)); }
	inline uint8_t get_rchRenderModelComponentName42_44() const { return ___rchRenderModelComponentName42_44; }
	inline uint8_t* get_address_of_rchRenderModelComponentName42_44() { return &___rchRenderModelComponentName42_44; }
	inline void set_rchRenderModelComponentName42_44(uint8_t value)
	{
		___rchRenderModelComponentName42_44 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName43_45() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName43_45)); }
	inline uint8_t get_rchRenderModelComponentName43_45() const { return ___rchRenderModelComponentName43_45; }
	inline uint8_t* get_address_of_rchRenderModelComponentName43_45() { return &___rchRenderModelComponentName43_45; }
	inline void set_rchRenderModelComponentName43_45(uint8_t value)
	{
		___rchRenderModelComponentName43_45 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName44_46() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName44_46)); }
	inline uint8_t get_rchRenderModelComponentName44_46() const { return ___rchRenderModelComponentName44_46; }
	inline uint8_t* get_address_of_rchRenderModelComponentName44_46() { return &___rchRenderModelComponentName44_46; }
	inline void set_rchRenderModelComponentName44_46(uint8_t value)
	{
		___rchRenderModelComponentName44_46 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName45_47() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName45_47)); }
	inline uint8_t get_rchRenderModelComponentName45_47() const { return ___rchRenderModelComponentName45_47; }
	inline uint8_t* get_address_of_rchRenderModelComponentName45_47() { return &___rchRenderModelComponentName45_47; }
	inline void set_rchRenderModelComponentName45_47(uint8_t value)
	{
		___rchRenderModelComponentName45_47 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName46_48() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName46_48)); }
	inline uint8_t get_rchRenderModelComponentName46_48() const { return ___rchRenderModelComponentName46_48; }
	inline uint8_t* get_address_of_rchRenderModelComponentName46_48() { return &___rchRenderModelComponentName46_48; }
	inline void set_rchRenderModelComponentName46_48(uint8_t value)
	{
		___rchRenderModelComponentName46_48 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName47_49() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName47_49)); }
	inline uint8_t get_rchRenderModelComponentName47_49() const { return ___rchRenderModelComponentName47_49; }
	inline uint8_t* get_address_of_rchRenderModelComponentName47_49() { return &___rchRenderModelComponentName47_49; }
	inline void set_rchRenderModelComponentName47_49(uint8_t value)
	{
		___rchRenderModelComponentName47_49 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName48_50() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName48_50)); }
	inline uint8_t get_rchRenderModelComponentName48_50() const { return ___rchRenderModelComponentName48_50; }
	inline uint8_t* get_address_of_rchRenderModelComponentName48_50() { return &___rchRenderModelComponentName48_50; }
	inline void set_rchRenderModelComponentName48_50(uint8_t value)
	{
		___rchRenderModelComponentName48_50 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName49_51() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName49_51)); }
	inline uint8_t get_rchRenderModelComponentName49_51() const { return ___rchRenderModelComponentName49_51; }
	inline uint8_t* get_address_of_rchRenderModelComponentName49_51() { return &___rchRenderModelComponentName49_51; }
	inline void set_rchRenderModelComponentName49_51(uint8_t value)
	{
		___rchRenderModelComponentName49_51 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName50_52() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName50_52)); }
	inline uint8_t get_rchRenderModelComponentName50_52() const { return ___rchRenderModelComponentName50_52; }
	inline uint8_t* get_address_of_rchRenderModelComponentName50_52() { return &___rchRenderModelComponentName50_52; }
	inline void set_rchRenderModelComponentName50_52(uint8_t value)
	{
		___rchRenderModelComponentName50_52 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName51_53() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName51_53)); }
	inline uint8_t get_rchRenderModelComponentName51_53() const { return ___rchRenderModelComponentName51_53; }
	inline uint8_t* get_address_of_rchRenderModelComponentName51_53() { return &___rchRenderModelComponentName51_53; }
	inline void set_rchRenderModelComponentName51_53(uint8_t value)
	{
		___rchRenderModelComponentName51_53 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName52_54() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName52_54)); }
	inline uint8_t get_rchRenderModelComponentName52_54() const { return ___rchRenderModelComponentName52_54; }
	inline uint8_t* get_address_of_rchRenderModelComponentName52_54() { return &___rchRenderModelComponentName52_54; }
	inline void set_rchRenderModelComponentName52_54(uint8_t value)
	{
		___rchRenderModelComponentName52_54 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName53_55() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName53_55)); }
	inline uint8_t get_rchRenderModelComponentName53_55() const { return ___rchRenderModelComponentName53_55; }
	inline uint8_t* get_address_of_rchRenderModelComponentName53_55() { return &___rchRenderModelComponentName53_55; }
	inline void set_rchRenderModelComponentName53_55(uint8_t value)
	{
		___rchRenderModelComponentName53_55 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName54_56() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName54_56)); }
	inline uint8_t get_rchRenderModelComponentName54_56() const { return ___rchRenderModelComponentName54_56; }
	inline uint8_t* get_address_of_rchRenderModelComponentName54_56() { return &___rchRenderModelComponentName54_56; }
	inline void set_rchRenderModelComponentName54_56(uint8_t value)
	{
		___rchRenderModelComponentName54_56 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName55_57() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName55_57)); }
	inline uint8_t get_rchRenderModelComponentName55_57() const { return ___rchRenderModelComponentName55_57; }
	inline uint8_t* get_address_of_rchRenderModelComponentName55_57() { return &___rchRenderModelComponentName55_57; }
	inline void set_rchRenderModelComponentName55_57(uint8_t value)
	{
		___rchRenderModelComponentName55_57 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName56_58() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName56_58)); }
	inline uint8_t get_rchRenderModelComponentName56_58() const { return ___rchRenderModelComponentName56_58; }
	inline uint8_t* get_address_of_rchRenderModelComponentName56_58() { return &___rchRenderModelComponentName56_58; }
	inline void set_rchRenderModelComponentName56_58(uint8_t value)
	{
		___rchRenderModelComponentName56_58 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName57_59() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName57_59)); }
	inline uint8_t get_rchRenderModelComponentName57_59() const { return ___rchRenderModelComponentName57_59; }
	inline uint8_t* get_address_of_rchRenderModelComponentName57_59() { return &___rchRenderModelComponentName57_59; }
	inline void set_rchRenderModelComponentName57_59(uint8_t value)
	{
		___rchRenderModelComponentName57_59 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName58_60() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName58_60)); }
	inline uint8_t get_rchRenderModelComponentName58_60() const { return ___rchRenderModelComponentName58_60; }
	inline uint8_t* get_address_of_rchRenderModelComponentName58_60() { return &___rchRenderModelComponentName58_60; }
	inline void set_rchRenderModelComponentName58_60(uint8_t value)
	{
		___rchRenderModelComponentName58_60 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName59_61() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName59_61)); }
	inline uint8_t get_rchRenderModelComponentName59_61() const { return ___rchRenderModelComponentName59_61; }
	inline uint8_t* get_address_of_rchRenderModelComponentName59_61() { return &___rchRenderModelComponentName59_61; }
	inline void set_rchRenderModelComponentName59_61(uint8_t value)
	{
		___rchRenderModelComponentName59_61 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName60_62() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName60_62)); }
	inline uint8_t get_rchRenderModelComponentName60_62() const { return ___rchRenderModelComponentName60_62; }
	inline uint8_t* get_address_of_rchRenderModelComponentName60_62() { return &___rchRenderModelComponentName60_62; }
	inline void set_rchRenderModelComponentName60_62(uint8_t value)
	{
		___rchRenderModelComponentName60_62 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName61_63() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName61_63)); }
	inline uint8_t get_rchRenderModelComponentName61_63() const { return ___rchRenderModelComponentName61_63; }
	inline uint8_t* get_address_of_rchRenderModelComponentName61_63() { return &___rchRenderModelComponentName61_63; }
	inline void set_rchRenderModelComponentName61_63(uint8_t value)
	{
		___rchRenderModelComponentName61_63 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName62_64() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName62_64)); }
	inline uint8_t get_rchRenderModelComponentName62_64() const { return ___rchRenderModelComponentName62_64; }
	inline uint8_t* get_address_of_rchRenderModelComponentName62_64() { return &___rchRenderModelComponentName62_64; }
	inline void set_rchRenderModelComponentName62_64(uint8_t value)
	{
		___rchRenderModelComponentName62_64 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName63_65() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName63_65)); }
	inline uint8_t get_rchRenderModelComponentName63_65() const { return ___rchRenderModelComponentName63_65; }
	inline uint8_t* get_address_of_rchRenderModelComponentName63_65() { return &___rchRenderModelComponentName63_65; }
	inline void set_rchRenderModelComponentName63_65(uint8_t value)
	{
		___rchRenderModelComponentName63_65 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName64_66() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName64_66)); }
	inline uint8_t get_rchRenderModelComponentName64_66() const { return ___rchRenderModelComponentName64_66; }
	inline uint8_t* get_address_of_rchRenderModelComponentName64_66() { return &___rchRenderModelComponentName64_66; }
	inline void set_rchRenderModelComponentName64_66(uint8_t value)
	{
		___rchRenderModelComponentName64_66 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName65_67() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName65_67)); }
	inline uint8_t get_rchRenderModelComponentName65_67() const { return ___rchRenderModelComponentName65_67; }
	inline uint8_t* get_address_of_rchRenderModelComponentName65_67() { return &___rchRenderModelComponentName65_67; }
	inline void set_rchRenderModelComponentName65_67(uint8_t value)
	{
		___rchRenderModelComponentName65_67 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName66_68() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName66_68)); }
	inline uint8_t get_rchRenderModelComponentName66_68() const { return ___rchRenderModelComponentName66_68; }
	inline uint8_t* get_address_of_rchRenderModelComponentName66_68() { return &___rchRenderModelComponentName66_68; }
	inline void set_rchRenderModelComponentName66_68(uint8_t value)
	{
		___rchRenderModelComponentName66_68 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName67_69() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName67_69)); }
	inline uint8_t get_rchRenderModelComponentName67_69() const { return ___rchRenderModelComponentName67_69; }
	inline uint8_t* get_address_of_rchRenderModelComponentName67_69() { return &___rchRenderModelComponentName67_69; }
	inline void set_rchRenderModelComponentName67_69(uint8_t value)
	{
		___rchRenderModelComponentName67_69 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName68_70() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName68_70)); }
	inline uint8_t get_rchRenderModelComponentName68_70() const { return ___rchRenderModelComponentName68_70; }
	inline uint8_t* get_address_of_rchRenderModelComponentName68_70() { return &___rchRenderModelComponentName68_70; }
	inline void set_rchRenderModelComponentName68_70(uint8_t value)
	{
		___rchRenderModelComponentName68_70 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName69_71() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName69_71)); }
	inline uint8_t get_rchRenderModelComponentName69_71() const { return ___rchRenderModelComponentName69_71; }
	inline uint8_t* get_address_of_rchRenderModelComponentName69_71() { return &___rchRenderModelComponentName69_71; }
	inline void set_rchRenderModelComponentName69_71(uint8_t value)
	{
		___rchRenderModelComponentName69_71 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName70_72() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName70_72)); }
	inline uint8_t get_rchRenderModelComponentName70_72() const { return ___rchRenderModelComponentName70_72; }
	inline uint8_t* get_address_of_rchRenderModelComponentName70_72() { return &___rchRenderModelComponentName70_72; }
	inline void set_rchRenderModelComponentName70_72(uint8_t value)
	{
		___rchRenderModelComponentName70_72 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName71_73() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName71_73)); }
	inline uint8_t get_rchRenderModelComponentName71_73() const { return ___rchRenderModelComponentName71_73; }
	inline uint8_t* get_address_of_rchRenderModelComponentName71_73() { return &___rchRenderModelComponentName71_73; }
	inline void set_rchRenderModelComponentName71_73(uint8_t value)
	{
		___rchRenderModelComponentName71_73 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName72_74() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName72_74)); }
	inline uint8_t get_rchRenderModelComponentName72_74() const { return ___rchRenderModelComponentName72_74; }
	inline uint8_t* get_address_of_rchRenderModelComponentName72_74() { return &___rchRenderModelComponentName72_74; }
	inline void set_rchRenderModelComponentName72_74(uint8_t value)
	{
		___rchRenderModelComponentName72_74 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName73_75() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName73_75)); }
	inline uint8_t get_rchRenderModelComponentName73_75() const { return ___rchRenderModelComponentName73_75; }
	inline uint8_t* get_address_of_rchRenderModelComponentName73_75() { return &___rchRenderModelComponentName73_75; }
	inline void set_rchRenderModelComponentName73_75(uint8_t value)
	{
		___rchRenderModelComponentName73_75 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName74_76() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName74_76)); }
	inline uint8_t get_rchRenderModelComponentName74_76() const { return ___rchRenderModelComponentName74_76; }
	inline uint8_t* get_address_of_rchRenderModelComponentName74_76() { return &___rchRenderModelComponentName74_76; }
	inline void set_rchRenderModelComponentName74_76(uint8_t value)
	{
		___rchRenderModelComponentName74_76 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName75_77() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName75_77)); }
	inline uint8_t get_rchRenderModelComponentName75_77() const { return ___rchRenderModelComponentName75_77; }
	inline uint8_t* get_address_of_rchRenderModelComponentName75_77() { return &___rchRenderModelComponentName75_77; }
	inline void set_rchRenderModelComponentName75_77(uint8_t value)
	{
		___rchRenderModelComponentName75_77 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName76_78() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName76_78)); }
	inline uint8_t get_rchRenderModelComponentName76_78() const { return ___rchRenderModelComponentName76_78; }
	inline uint8_t* get_address_of_rchRenderModelComponentName76_78() { return &___rchRenderModelComponentName76_78; }
	inline void set_rchRenderModelComponentName76_78(uint8_t value)
	{
		___rchRenderModelComponentName76_78 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName77_79() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName77_79)); }
	inline uint8_t get_rchRenderModelComponentName77_79() const { return ___rchRenderModelComponentName77_79; }
	inline uint8_t* get_address_of_rchRenderModelComponentName77_79() { return &___rchRenderModelComponentName77_79; }
	inline void set_rchRenderModelComponentName77_79(uint8_t value)
	{
		___rchRenderModelComponentName77_79 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName78_80() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName78_80)); }
	inline uint8_t get_rchRenderModelComponentName78_80() const { return ___rchRenderModelComponentName78_80; }
	inline uint8_t* get_address_of_rchRenderModelComponentName78_80() { return &___rchRenderModelComponentName78_80; }
	inline void set_rchRenderModelComponentName78_80(uint8_t value)
	{
		___rchRenderModelComponentName78_80 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName79_81() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName79_81)); }
	inline uint8_t get_rchRenderModelComponentName79_81() const { return ___rchRenderModelComponentName79_81; }
	inline uint8_t* get_address_of_rchRenderModelComponentName79_81() { return &___rchRenderModelComponentName79_81; }
	inline void set_rchRenderModelComponentName79_81(uint8_t value)
	{
		___rchRenderModelComponentName79_81 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName80_82() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName80_82)); }
	inline uint8_t get_rchRenderModelComponentName80_82() const { return ___rchRenderModelComponentName80_82; }
	inline uint8_t* get_address_of_rchRenderModelComponentName80_82() { return &___rchRenderModelComponentName80_82; }
	inline void set_rchRenderModelComponentName80_82(uint8_t value)
	{
		___rchRenderModelComponentName80_82 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName81_83() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName81_83)); }
	inline uint8_t get_rchRenderModelComponentName81_83() const { return ___rchRenderModelComponentName81_83; }
	inline uint8_t* get_address_of_rchRenderModelComponentName81_83() { return &___rchRenderModelComponentName81_83; }
	inline void set_rchRenderModelComponentName81_83(uint8_t value)
	{
		___rchRenderModelComponentName81_83 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName82_84() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName82_84)); }
	inline uint8_t get_rchRenderModelComponentName82_84() const { return ___rchRenderModelComponentName82_84; }
	inline uint8_t* get_address_of_rchRenderModelComponentName82_84() { return &___rchRenderModelComponentName82_84; }
	inline void set_rchRenderModelComponentName82_84(uint8_t value)
	{
		___rchRenderModelComponentName82_84 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName83_85() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName83_85)); }
	inline uint8_t get_rchRenderModelComponentName83_85() const { return ___rchRenderModelComponentName83_85; }
	inline uint8_t* get_address_of_rchRenderModelComponentName83_85() { return &___rchRenderModelComponentName83_85; }
	inline void set_rchRenderModelComponentName83_85(uint8_t value)
	{
		___rchRenderModelComponentName83_85 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName84_86() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName84_86)); }
	inline uint8_t get_rchRenderModelComponentName84_86() const { return ___rchRenderModelComponentName84_86; }
	inline uint8_t* get_address_of_rchRenderModelComponentName84_86() { return &___rchRenderModelComponentName84_86; }
	inline void set_rchRenderModelComponentName84_86(uint8_t value)
	{
		___rchRenderModelComponentName84_86 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName85_87() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName85_87)); }
	inline uint8_t get_rchRenderModelComponentName85_87() const { return ___rchRenderModelComponentName85_87; }
	inline uint8_t* get_address_of_rchRenderModelComponentName85_87() { return &___rchRenderModelComponentName85_87; }
	inline void set_rchRenderModelComponentName85_87(uint8_t value)
	{
		___rchRenderModelComponentName85_87 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName86_88() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName86_88)); }
	inline uint8_t get_rchRenderModelComponentName86_88() const { return ___rchRenderModelComponentName86_88; }
	inline uint8_t* get_address_of_rchRenderModelComponentName86_88() { return &___rchRenderModelComponentName86_88; }
	inline void set_rchRenderModelComponentName86_88(uint8_t value)
	{
		___rchRenderModelComponentName86_88 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName87_89() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName87_89)); }
	inline uint8_t get_rchRenderModelComponentName87_89() const { return ___rchRenderModelComponentName87_89; }
	inline uint8_t* get_address_of_rchRenderModelComponentName87_89() { return &___rchRenderModelComponentName87_89; }
	inline void set_rchRenderModelComponentName87_89(uint8_t value)
	{
		___rchRenderModelComponentName87_89 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName88_90() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName88_90)); }
	inline uint8_t get_rchRenderModelComponentName88_90() const { return ___rchRenderModelComponentName88_90; }
	inline uint8_t* get_address_of_rchRenderModelComponentName88_90() { return &___rchRenderModelComponentName88_90; }
	inline void set_rchRenderModelComponentName88_90(uint8_t value)
	{
		___rchRenderModelComponentName88_90 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName89_91() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName89_91)); }
	inline uint8_t get_rchRenderModelComponentName89_91() const { return ___rchRenderModelComponentName89_91; }
	inline uint8_t* get_address_of_rchRenderModelComponentName89_91() { return &___rchRenderModelComponentName89_91; }
	inline void set_rchRenderModelComponentName89_91(uint8_t value)
	{
		___rchRenderModelComponentName89_91 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName90_92() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName90_92)); }
	inline uint8_t get_rchRenderModelComponentName90_92() const { return ___rchRenderModelComponentName90_92; }
	inline uint8_t* get_address_of_rchRenderModelComponentName90_92() { return &___rchRenderModelComponentName90_92; }
	inline void set_rchRenderModelComponentName90_92(uint8_t value)
	{
		___rchRenderModelComponentName90_92 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName91_93() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName91_93)); }
	inline uint8_t get_rchRenderModelComponentName91_93() const { return ___rchRenderModelComponentName91_93; }
	inline uint8_t* get_address_of_rchRenderModelComponentName91_93() { return &___rchRenderModelComponentName91_93; }
	inline void set_rchRenderModelComponentName91_93(uint8_t value)
	{
		___rchRenderModelComponentName91_93 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName92_94() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName92_94)); }
	inline uint8_t get_rchRenderModelComponentName92_94() const { return ___rchRenderModelComponentName92_94; }
	inline uint8_t* get_address_of_rchRenderModelComponentName92_94() { return &___rchRenderModelComponentName92_94; }
	inline void set_rchRenderModelComponentName92_94(uint8_t value)
	{
		___rchRenderModelComponentName92_94 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName93_95() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName93_95)); }
	inline uint8_t get_rchRenderModelComponentName93_95() const { return ___rchRenderModelComponentName93_95; }
	inline uint8_t* get_address_of_rchRenderModelComponentName93_95() { return &___rchRenderModelComponentName93_95; }
	inline void set_rchRenderModelComponentName93_95(uint8_t value)
	{
		___rchRenderModelComponentName93_95 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName94_96() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName94_96)); }
	inline uint8_t get_rchRenderModelComponentName94_96() const { return ___rchRenderModelComponentName94_96; }
	inline uint8_t* get_address_of_rchRenderModelComponentName94_96() { return &___rchRenderModelComponentName94_96; }
	inline void set_rchRenderModelComponentName94_96(uint8_t value)
	{
		___rchRenderModelComponentName94_96 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName95_97() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName95_97)); }
	inline uint8_t get_rchRenderModelComponentName95_97() const { return ___rchRenderModelComponentName95_97; }
	inline uint8_t* get_address_of_rchRenderModelComponentName95_97() { return &___rchRenderModelComponentName95_97; }
	inline void set_rchRenderModelComponentName95_97(uint8_t value)
	{
		___rchRenderModelComponentName95_97 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName96_98() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName96_98)); }
	inline uint8_t get_rchRenderModelComponentName96_98() const { return ___rchRenderModelComponentName96_98; }
	inline uint8_t* get_address_of_rchRenderModelComponentName96_98() { return &___rchRenderModelComponentName96_98; }
	inline void set_rchRenderModelComponentName96_98(uint8_t value)
	{
		___rchRenderModelComponentName96_98 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName97_99() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName97_99)); }
	inline uint8_t get_rchRenderModelComponentName97_99() const { return ___rchRenderModelComponentName97_99; }
	inline uint8_t* get_address_of_rchRenderModelComponentName97_99() { return &___rchRenderModelComponentName97_99; }
	inline void set_rchRenderModelComponentName97_99(uint8_t value)
	{
		___rchRenderModelComponentName97_99 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName98_100() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName98_100)); }
	inline uint8_t get_rchRenderModelComponentName98_100() const { return ___rchRenderModelComponentName98_100; }
	inline uint8_t* get_address_of_rchRenderModelComponentName98_100() { return &___rchRenderModelComponentName98_100; }
	inline void set_rchRenderModelComponentName98_100(uint8_t value)
	{
		___rchRenderModelComponentName98_100 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName99_101() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName99_101)); }
	inline uint8_t get_rchRenderModelComponentName99_101() const { return ___rchRenderModelComponentName99_101; }
	inline uint8_t* get_address_of_rchRenderModelComponentName99_101() { return &___rchRenderModelComponentName99_101; }
	inline void set_rchRenderModelComponentName99_101(uint8_t value)
	{
		___rchRenderModelComponentName99_101 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName100_102() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName100_102)); }
	inline uint8_t get_rchRenderModelComponentName100_102() const { return ___rchRenderModelComponentName100_102; }
	inline uint8_t* get_address_of_rchRenderModelComponentName100_102() { return &___rchRenderModelComponentName100_102; }
	inline void set_rchRenderModelComponentName100_102(uint8_t value)
	{
		___rchRenderModelComponentName100_102 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName101_103() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName101_103)); }
	inline uint8_t get_rchRenderModelComponentName101_103() const { return ___rchRenderModelComponentName101_103; }
	inline uint8_t* get_address_of_rchRenderModelComponentName101_103() { return &___rchRenderModelComponentName101_103; }
	inline void set_rchRenderModelComponentName101_103(uint8_t value)
	{
		___rchRenderModelComponentName101_103 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName102_104() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName102_104)); }
	inline uint8_t get_rchRenderModelComponentName102_104() const { return ___rchRenderModelComponentName102_104; }
	inline uint8_t* get_address_of_rchRenderModelComponentName102_104() { return &___rchRenderModelComponentName102_104; }
	inline void set_rchRenderModelComponentName102_104(uint8_t value)
	{
		___rchRenderModelComponentName102_104 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName103_105() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName103_105)); }
	inline uint8_t get_rchRenderModelComponentName103_105() const { return ___rchRenderModelComponentName103_105; }
	inline uint8_t* get_address_of_rchRenderModelComponentName103_105() { return &___rchRenderModelComponentName103_105; }
	inline void set_rchRenderModelComponentName103_105(uint8_t value)
	{
		___rchRenderModelComponentName103_105 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName104_106() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName104_106)); }
	inline uint8_t get_rchRenderModelComponentName104_106() const { return ___rchRenderModelComponentName104_106; }
	inline uint8_t* get_address_of_rchRenderModelComponentName104_106() { return &___rchRenderModelComponentName104_106; }
	inline void set_rchRenderModelComponentName104_106(uint8_t value)
	{
		___rchRenderModelComponentName104_106 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName105_107() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName105_107)); }
	inline uint8_t get_rchRenderModelComponentName105_107() const { return ___rchRenderModelComponentName105_107; }
	inline uint8_t* get_address_of_rchRenderModelComponentName105_107() { return &___rchRenderModelComponentName105_107; }
	inline void set_rchRenderModelComponentName105_107(uint8_t value)
	{
		___rchRenderModelComponentName105_107 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName106_108() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName106_108)); }
	inline uint8_t get_rchRenderModelComponentName106_108() const { return ___rchRenderModelComponentName106_108; }
	inline uint8_t* get_address_of_rchRenderModelComponentName106_108() { return &___rchRenderModelComponentName106_108; }
	inline void set_rchRenderModelComponentName106_108(uint8_t value)
	{
		___rchRenderModelComponentName106_108 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName107_109() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName107_109)); }
	inline uint8_t get_rchRenderModelComponentName107_109() const { return ___rchRenderModelComponentName107_109; }
	inline uint8_t* get_address_of_rchRenderModelComponentName107_109() { return &___rchRenderModelComponentName107_109; }
	inline void set_rchRenderModelComponentName107_109(uint8_t value)
	{
		___rchRenderModelComponentName107_109 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName108_110() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName108_110)); }
	inline uint8_t get_rchRenderModelComponentName108_110() const { return ___rchRenderModelComponentName108_110; }
	inline uint8_t* get_address_of_rchRenderModelComponentName108_110() { return &___rchRenderModelComponentName108_110; }
	inline void set_rchRenderModelComponentName108_110(uint8_t value)
	{
		___rchRenderModelComponentName108_110 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName109_111() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName109_111)); }
	inline uint8_t get_rchRenderModelComponentName109_111() const { return ___rchRenderModelComponentName109_111; }
	inline uint8_t* get_address_of_rchRenderModelComponentName109_111() { return &___rchRenderModelComponentName109_111; }
	inline void set_rchRenderModelComponentName109_111(uint8_t value)
	{
		___rchRenderModelComponentName109_111 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName110_112() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName110_112)); }
	inline uint8_t get_rchRenderModelComponentName110_112() const { return ___rchRenderModelComponentName110_112; }
	inline uint8_t* get_address_of_rchRenderModelComponentName110_112() { return &___rchRenderModelComponentName110_112; }
	inline void set_rchRenderModelComponentName110_112(uint8_t value)
	{
		___rchRenderModelComponentName110_112 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName111_113() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName111_113)); }
	inline uint8_t get_rchRenderModelComponentName111_113() const { return ___rchRenderModelComponentName111_113; }
	inline uint8_t* get_address_of_rchRenderModelComponentName111_113() { return &___rchRenderModelComponentName111_113; }
	inline void set_rchRenderModelComponentName111_113(uint8_t value)
	{
		___rchRenderModelComponentName111_113 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName112_114() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName112_114)); }
	inline uint8_t get_rchRenderModelComponentName112_114() const { return ___rchRenderModelComponentName112_114; }
	inline uint8_t* get_address_of_rchRenderModelComponentName112_114() { return &___rchRenderModelComponentName112_114; }
	inline void set_rchRenderModelComponentName112_114(uint8_t value)
	{
		___rchRenderModelComponentName112_114 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName113_115() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName113_115)); }
	inline uint8_t get_rchRenderModelComponentName113_115() const { return ___rchRenderModelComponentName113_115; }
	inline uint8_t* get_address_of_rchRenderModelComponentName113_115() { return &___rchRenderModelComponentName113_115; }
	inline void set_rchRenderModelComponentName113_115(uint8_t value)
	{
		___rchRenderModelComponentName113_115 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName114_116() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName114_116)); }
	inline uint8_t get_rchRenderModelComponentName114_116() const { return ___rchRenderModelComponentName114_116; }
	inline uint8_t* get_address_of_rchRenderModelComponentName114_116() { return &___rchRenderModelComponentName114_116; }
	inline void set_rchRenderModelComponentName114_116(uint8_t value)
	{
		___rchRenderModelComponentName114_116 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName115_117() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName115_117)); }
	inline uint8_t get_rchRenderModelComponentName115_117() const { return ___rchRenderModelComponentName115_117; }
	inline uint8_t* get_address_of_rchRenderModelComponentName115_117() { return &___rchRenderModelComponentName115_117; }
	inline void set_rchRenderModelComponentName115_117(uint8_t value)
	{
		___rchRenderModelComponentName115_117 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName116_118() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName116_118)); }
	inline uint8_t get_rchRenderModelComponentName116_118() const { return ___rchRenderModelComponentName116_118; }
	inline uint8_t* get_address_of_rchRenderModelComponentName116_118() { return &___rchRenderModelComponentName116_118; }
	inline void set_rchRenderModelComponentName116_118(uint8_t value)
	{
		___rchRenderModelComponentName116_118 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName117_119() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName117_119)); }
	inline uint8_t get_rchRenderModelComponentName117_119() const { return ___rchRenderModelComponentName117_119; }
	inline uint8_t* get_address_of_rchRenderModelComponentName117_119() { return &___rchRenderModelComponentName117_119; }
	inline void set_rchRenderModelComponentName117_119(uint8_t value)
	{
		___rchRenderModelComponentName117_119 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName118_120() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName118_120)); }
	inline uint8_t get_rchRenderModelComponentName118_120() const { return ___rchRenderModelComponentName118_120; }
	inline uint8_t* get_address_of_rchRenderModelComponentName118_120() { return &___rchRenderModelComponentName118_120; }
	inline void set_rchRenderModelComponentName118_120(uint8_t value)
	{
		___rchRenderModelComponentName118_120 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName119_121() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName119_121)); }
	inline uint8_t get_rchRenderModelComponentName119_121() const { return ___rchRenderModelComponentName119_121; }
	inline uint8_t* get_address_of_rchRenderModelComponentName119_121() { return &___rchRenderModelComponentName119_121; }
	inline void set_rchRenderModelComponentName119_121(uint8_t value)
	{
		___rchRenderModelComponentName119_121 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName120_122() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName120_122)); }
	inline uint8_t get_rchRenderModelComponentName120_122() const { return ___rchRenderModelComponentName120_122; }
	inline uint8_t* get_address_of_rchRenderModelComponentName120_122() { return &___rchRenderModelComponentName120_122; }
	inline void set_rchRenderModelComponentName120_122(uint8_t value)
	{
		___rchRenderModelComponentName120_122 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName121_123() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName121_123)); }
	inline uint8_t get_rchRenderModelComponentName121_123() const { return ___rchRenderModelComponentName121_123; }
	inline uint8_t* get_address_of_rchRenderModelComponentName121_123() { return &___rchRenderModelComponentName121_123; }
	inline void set_rchRenderModelComponentName121_123(uint8_t value)
	{
		___rchRenderModelComponentName121_123 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName122_124() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName122_124)); }
	inline uint8_t get_rchRenderModelComponentName122_124() const { return ___rchRenderModelComponentName122_124; }
	inline uint8_t* get_address_of_rchRenderModelComponentName122_124() { return &___rchRenderModelComponentName122_124; }
	inline void set_rchRenderModelComponentName122_124(uint8_t value)
	{
		___rchRenderModelComponentName122_124 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName123_125() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName123_125)); }
	inline uint8_t get_rchRenderModelComponentName123_125() const { return ___rchRenderModelComponentName123_125; }
	inline uint8_t* get_address_of_rchRenderModelComponentName123_125() { return &___rchRenderModelComponentName123_125; }
	inline void set_rchRenderModelComponentName123_125(uint8_t value)
	{
		___rchRenderModelComponentName123_125 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName124_126() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName124_126)); }
	inline uint8_t get_rchRenderModelComponentName124_126() const { return ___rchRenderModelComponentName124_126; }
	inline uint8_t* get_address_of_rchRenderModelComponentName124_126() { return &___rchRenderModelComponentName124_126; }
	inline void set_rchRenderModelComponentName124_126(uint8_t value)
	{
		___rchRenderModelComponentName124_126 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName125_127() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName125_127)); }
	inline uint8_t get_rchRenderModelComponentName125_127() const { return ___rchRenderModelComponentName125_127; }
	inline uint8_t* get_address_of_rchRenderModelComponentName125_127() { return &___rchRenderModelComponentName125_127; }
	inline void set_rchRenderModelComponentName125_127(uint8_t value)
	{
		___rchRenderModelComponentName125_127 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName126_128() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName126_128)); }
	inline uint8_t get_rchRenderModelComponentName126_128() const { return ___rchRenderModelComponentName126_128; }
	inline uint8_t* get_address_of_rchRenderModelComponentName126_128() { return &___rchRenderModelComponentName126_128; }
	inline void set_rchRenderModelComponentName126_128(uint8_t value)
	{
		___rchRenderModelComponentName126_128 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName127_129() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName127_129)); }
	inline uint8_t get_rchRenderModelComponentName127_129() const { return ___rchRenderModelComponentName127_129; }
	inline uint8_t* get_address_of_rchRenderModelComponentName127_129() { return &___rchRenderModelComponentName127_129; }
	inline void set_rchRenderModelComponentName127_129(uint8_t value)
	{
		___rchRenderModelComponentName127_129 = value;
	}
};


// Valve.VR.InputSkeletalActionData_t
struct  InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 
{
public:
	// System.Boolean Valve.VR.InputSkeletalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputSkeletalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___sourceMap_4)); }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___sourceMap_4)); }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___sourceMap_4)); }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___sourceMap_4)); }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___sourceMap_4)); }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902, ___sourceMap_4)); }
	inline SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___sourceMap_4)); }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_HistoryBuffer
struct  SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8  : public SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4
{
public:

public:
};


// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};


// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};


// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};


// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};


// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};


// Valve.VR.VREvent_InputActionManifestLoad_t
struct  VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathAppKey
	uint64_t ___pathAppKey_0;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessageParam
	uint64_t ___pathMessageParam_2;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathManifestPath
	uint64_t ___pathManifestPath_3;

public:
	inline static int32_t get_offset_of_pathAppKey_0() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathAppKey_0)); }
	inline uint64_t get_pathAppKey_0() const { return ___pathAppKey_0; }
	inline uint64_t* get_address_of_pathAppKey_0() { return &___pathAppKey_0; }
	inline void set_pathAppKey_0(uint64_t value)
	{
		___pathAppKey_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathMessageParam_2() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessageParam_2)); }
	inline uint64_t get_pathMessageParam_2() const { return ___pathMessageParam_2; }
	inline uint64_t* get_address_of_pathMessageParam_2() { return &___pathMessageParam_2; }
	inline void set_pathMessageParam_2(uint64_t value)
	{
		___pathMessageParam_2 = value;
	}

	inline static int32_t get_offset_of_pathManifestPath_3() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathManifestPath_3)); }
	inline uint64_t get_pathManifestPath_3() const { return ___pathManifestPath_3; }
	inline uint64_t* get_address_of_pathManifestPath_3() { return &___pathManifestPath_3; }
	inline void set_pathManifestPath_3(uint64_t value)
	{
		___pathManifestPath_3 = value;
	}
};


// Valve.VR.VREvent_InputBindingLoad_t
struct  VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::ulAppContainer
	uint64_t ___ulAppContainer_0;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathUrl
	uint64_t ___pathUrl_2;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathControllerType
	uint64_t ___pathControllerType_3;

public:
	inline static int32_t get_offset_of_ulAppContainer_0() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___ulAppContainer_0)); }
	inline uint64_t get_ulAppContainer_0() const { return ___ulAppContainer_0; }
	inline uint64_t* get_address_of_ulAppContainer_0() { return &___ulAppContainer_0; }
	inline void set_ulAppContainer_0(uint64_t value)
	{
		___ulAppContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathUrl_2() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathUrl_2)); }
	inline uint64_t get_pathUrl_2() const { return ___pathUrl_2; }
	inline uint64_t* get_address_of_pathUrl_2() { return &___pathUrl_2; }
	inline void set_pathUrl_2(uint64_t value)
	{
		___pathUrl_2 = value;
	}

	inline static int32_t get_offset_of_pathControllerType_3() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathControllerType_3)); }
	inline uint64_t get_pathControllerType_3() const { return ___pathControllerType_3; }
	inline uint64_t* get_address_of_pathControllerType_3() { return &___pathControllerType_3; }
	inline void set_pathControllerType_3(uint64_t value)
	{
		___pathControllerType_3 = value;
	}
};


// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};


// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};


// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};


// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};


// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};


// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt64 Valve.VR.VREvent_Overlay_t::devicePath
	uint64_t ___devicePath_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_devicePath_1() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___devicePath_1)); }
	inline uint64_t get_devicePath_1() const { return ___devicePath_1; }
	inline uint64_t* get_address_of_devicePath_1() { return &___devicePath_1; }
	inline void set_devicePath_1(uint64_t value)
	{
		___devicePath_1 = value;
	}
};


// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};


// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;
	// System.Boolean Valve.VR.VREvent_Process_t::bConnectionLost
	bool ___bConnectionLost_3;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}

	inline static int32_t get_offset_of_bConnectionLost_3() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bConnectionLost_3)); }
	inline bool get_bConnectionLost_3() const { return ___bConnectionLost_3; }
	inline bool* get_address_of_bConnectionLost_3() { return &___bConnectionLost_3; }
	inline void set_bConnectionLost_3(bool value)
	{
		___bConnectionLost_3 = value;
	}
};


// Valve.VR.VREvent_ProgressUpdate_t
struct  VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE 
{
public:
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::ulApplicationPropertyContainer
	uint64_t ___ulApplicationPropertyContainer_0;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathDevice
	uint64_t ___pathDevice_1;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathInputSource
	uint64_t ___pathInputSource_2;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathProgressAction
	uint64_t ___pathProgressAction_3;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathIcon
	uint64_t ___pathIcon_4;
	// System.Single Valve.VR.VREvent_ProgressUpdate_t::fProgress
	float ___fProgress_5;

public:
	inline static int32_t get_offset_of_ulApplicationPropertyContainer_0() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___ulApplicationPropertyContainer_0)); }
	inline uint64_t get_ulApplicationPropertyContainer_0() const { return ___ulApplicationPropertyContainer_0; }
	inline uint64_t* get_address_of_ulApplicationPropertyContainer_0() { return &___ulApplicationPropertyContainer_0; }
	inline void set_ulApplicationPropertyContainer_0(uint64_t value)
	{
		___ulApplicationPropertyContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathDevice_1() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathDevice_1)); }
	inline uint64_t get_pathDevice_1() const { return ___pathDevice_1; }
	inline uint64_t* get_address_of_pathDevice_1() { return &___pathDevice_1; }
	inline void set_pathDevice_1(uint64_t value)
	{
		___pathDevice_1 = value;
	}

	inline static int32_t get_offset_of_pathInputSource_2() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathInputSource_2)); }
	inline uint64_t get_pathInputSource_2() const { return ___pathInputSource_2; }
	inline uint64_t* get_address_of_pathInputSource_2() { return &___pathInputSource_2; }
	inline void set_pathInputSource_2(uint64_t value)
	{
		___pathInputSource_2 = value;
	}

	inline static int32_t get_offset_of_pathProgressAction_3() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathProgressAction_3)); }
	inline uint64_t get_pathProgressAction_3() const { return ___pathProgressAction_3; }
	inline uint64_t* get_address_of_pathProgressAction_3() { return &___pathProgressAction_3; }
	inline void set_pathProgressAction_3(uint64_t value)
	{
		___pathProgressAction_3 = value;
	}

	inline static int32_t get_offset_of_pathIcon_4() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathIcon_4)); }
	inline uint64_t get_pathIcon_4() const { return ___pathIcon_4; }
	inline uint64_t* get_address_of_pathIcon_4() { return &___pathIcon_4; }
	inline void set_pathIcon_4(uint64_t value)
	{
		___pathIcon_4 = value;
	}

	inline static int32_t get_offset_of_fProgress_5() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___fProgress_5)); }
	inline float get_fProgress_5() const { return ___fProgress_5; }
	inline float* get_address_of_fProgress_5() { return &___fProgress_5; }
	inline void set_fProgress_5(float value)
	{
		___fProgress_5 = value;
	}
};


// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved2
	uint64_t ___reserved2_2;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved3
	uint64_t ___reserved3_3;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved4
	uint64_t ___reserved4_4;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved5
	uint64_t ___reserved5_5;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}

	inline static int32_t get_offset_of_reserved2_2() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved2_2)); }
	inline uint64_t get_reserved2_2() const { return ___reserved2_2; }
	inline uint64_t* get_address_of_reserved2_2() { return &___reserved2_2; }
	inline void set_reserved2_2(uint64_t value)
	{
		___reserved2_2 = value;
	}

	inline static int32_t get_offset_of_reserved3_3() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved3_3)); }
	inline uint64_t get_reserved3_3() const { return ___reserved3_3; }
	inline uint64_t* get_address_of_reserved3_3() { return &___reserved3_3; }
	inline void set_reserved3_3(uint64_t value)
	{
		___reserved3_3 = value;
	}

	inline static int32_t get_offset_of_reserved4_4() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved4_4)); }
	inline uint64_t get_reserved4_4() const { return ___reserved4_4; }
	inline uint64_t* get_address_of_reserved4_4() { return &___reserved4_4; }
	inline void set_reserved4_4(uint64_t value)
	{
		___reserved4_4 = value;
	}

	inline static int32_t get_offset_of_reserved5_5() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved5_5)); }
	inline uint64_t get_reserved5_5() const { return ___reserved5_5; }
	inline uint64_t* get_address_of_reserved5_5() { return &___reserved5_5; }
	inline void set_reserved5_5(uint64_t value)
	{
		___reserved5_5 = value;
	}
};


// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};


// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};


// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::unused
	uint32_t ___unused_2;
	// System.Single Valve.VR.VREvent_Scroll_t::viewportscale
	float ___viewportscale_3;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_unused_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___unused_2)); }
	inline uint32_t get_unused_2() const { return ___unused_2; }
	inline uint32_t* get_address_of_unused_2() { return &___unused_2; }
	inline void set_unused_2(uint32_t value)
	{
		___unused_2 = value;
	}

	inline static int32_t get_offset_of_viewportscale_3() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___viewportscale_3)); }
	inline float get_viewportscale_3() const { return ___viewportscale_3; }
	inline float* get_address_of_viewportscale_3() { return &___viewportscale_3; }
	inline void set_viewportscale_3(float value)
	{
		___viewportscale_3 = value;
	}
};


// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};


// Valve.VR.VREvent_ShowDevTools_t
struct  VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 
{
public:
	// System.Int32 Valve.VR.VREvent_ShowDevTools_t::nBrowserIdentifier
	int32_t ___nBrowserIdentifier_0;

public:
	inline static int32_t get_offset_of_nBrowserIdentifier_0() { return static_cast<int32_t>(offsetof(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6, ___nBrowserIdentifier_0)); }
	inline int32_t get_nBrowserIdentifier_0() const { return ___nBrowserIdentifier_0; }
	inline int32_t* get_address_of_nBrowserIdentifier_0() { return &___nBrowserIdentifier_0; }
	inline void set_nBrowserIdentifier_0(int32_t value)
	{
		___nBrowserIdentifier_0 = value;
	}
};


// Valve.VR.VREvent_SpatialAnchor_t
struct  VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 
{
public:
	// System.UInt32 Valve.VR.VREvent_SpatialAnchor_t::unHandle
	uint32_t ___unHandle_0;

public:
	inline static int32_t get_offset_of_unHandle_0() { return static_cast<int32_t>(offsetof(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473, ___unHandle_0)); }
	inline uint32_t get_unHandle_0() const { return ___unHandle_0; }
	inline uint32_t* get_address_of_unHandle_0() { return &___unHandle_0; }
	inline void set_unHandle_0(uint32_t value)
	{
		___unHandle_0 = value;
	}
};


// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};


// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};


// Valve.VR.VREvent_WebConsole_t
struct  VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 
{
public:
	// System.UInt64 Valve.VR.VREvent_WebConsole_t::webConsoleHandle
	uint64_t ___webConsoleHandle_0;

public:
	inline static int32_t get_offset_of_webConsoleHandle_0() { return static_cast<int32_t>(offsetof(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75, ___webConsoleHandle_0)); }
	inline uint64_t get_webConsoleHandle_0() const { return ___webConsoleHandle_0; }
	inline uint64_t* get_address_of_webConsoleHandle_0() { return &___webConsoleHandle_0; }
	inline void set_webConsoleHandle_0(uint64_t value)
	{
		___webConsoleHandle_0 = value;
	}
};


// Valve.VR.VRSkeletalSummaryData_t
struct  VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 
{
public:
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl0
	float ___flFingerCurl0_0;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl1
	float ___flFingerCurl1_1;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl2
	float ___flFingerCurl2_2;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl3
	float ___flFingerCurl3_3;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl4
	float ___flFingerCurl4_4;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay0
	float ___flFingerSplay0_5;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay1
	float ___flFingerSplay1_6;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay2
	float ___flFingerSplay2_7;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay3
	float ___flFingerSplay3_8;

public:
	inline static int32_t get_offset_of_flFingerCurl0_0() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl0_0)); }
	inline float get_flFingerCurl0_0() const { return ___flFingerCurl0_0; }
	inline float* get_address_of_flFingerCurl0_0() { return &___flFingerCurl0_0; }
	inline void set_flFingerCurl0_0(float value)
	{
		___flFingerCurl0_0 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl1_1() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl1_1)); }
	inline float get_flFingerCurl1_1() const { return ___flFingerCurl1_1; }
	inline float* get_address_of_flFingerCurl1_1() { return &___flFingerCurl1_1; }
	inline void set_flFingerCurl1_1(float value)
	{
		___flFingerCurl1_1 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl2_2() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl2_2)); }
	inline float get_flFingerCurl2_2() const { return ___flFingerCurl2_2; }
	inline float* get_address_of_flFingerCurl2_2() { return &___flFingerCurl2_2; }
	inline void set_flFingerCurl2_2(float value)
	{
		___flFingerCurl2_2 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl3_3() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl3_3)); }
	inline float get_flFingerCurl3_3() const { return ___flFingerCurl3_3; }
	inline float* get_address_of_flFingerCurl3_3() { return &___flFingerCurl3_3; }
	inline void set_flFingerCurl3_3(float value)
	{
		___flFingerCurl3_3 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl4_4() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerCurl4_4)); }
	inline float get_flFingerCurl4_4() const { return ___flFingerCurl4_4; }
	inline float* get_address_of_flFingerCurl4_4() { return &___flFingerCurl4_4; }
	inline void set_flFingerCurl4_4(float value)
	{
		___flFingerCurl4_4 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay0_5() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay0_5)); }
	inline float get_flFingerSplay0_5() const { return ___flFingerSplay0_5; }
	inline float* get_address_of_flFingerSplay0_5() { return &___flFingerSplay0_5; }
	inline void set_flFingerSplay0_5(float value)
	{
		___flFingerSplay0_5 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay1_6() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay1_6)); }
	inline float get_flFingerSplay1_6() const { return ___flFingerSplay1_6; }
	inline float* get_address_of_flFingerSplay1_6() { return &___flFingerSplay1_6; }
	inline void set_flFingerSplay1_6(float value)
	{
		___flFingerSplay1_6 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay2_7() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay2_7)); }
	inline float get_flFingerSplay2_7() const { return ___flFingerSplay2_7; }
	inline float* get_address_of_flFingerSplay2_7() { return &___flFingerSplay2_7; }
	inline void set_flFingerSplay2_7(float value)
	{
		___flFingerSplay2_7 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay3_8() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831, ___flFingerSplay3_8)); }
	inline float get_flFingerSplay3_8() const { return ___flFingerSplay3_8; }
	inline float* get_address_of_flFingerSplay3_8() { return &___flFingerSplay3_8; }
	inline void set_flFingerSplay3_8(float value)
	{
		___flFingerSplay3_8 = value;
	}
};


// SteamVR_Utils_RigidTransform
struct  RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 
{
public:
	// UnityEngine.Vector3 SteamVR_Utils_RigidTransform::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_0;
	// UnityEngine.Quaternion SteamVR_Utils_RigidTransform::rot
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot_1;

public:
	inline static int32_t get_offset_of_pos_0() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___pos_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_0() const { return ___pos_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_0() { return &___pos_0; }
	inline void set_pos_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_0 = value;
	}

	inline static int32_t get_offset_of_rot_1() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___rot_1)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rot_1() const { return ___rot_1; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rot_1() { return &___rot_1; }
	inline void set_rot_1(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rot_1 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct  Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Int32Enum
struct  Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Reflection.BindingFlags
struct  BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct  RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// UnityEngine.Coroutine
struct  Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.IntPtr UnityEngine.Coroutine::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Coroutine
struct Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.Object
struct  Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.SendMessageOptions
struct  SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250 
{
public:
	// System.Int32 UnityEngine.SendMessageOptions::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SendMessageOptions_t4EA4645A7D0C4E0186BD7A984CDF4EE2C8F26250, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.CVRInput
struct  CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B  : public RuntimeObject
{
public:
	// Valve.VR.IVRInput Valve.VR.CVRInput::FnTable
	IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B, ___FnTable_0)); }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetActionManifestPath_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionSetHandle_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionHandle_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetInputSourceHandle_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UpdateActionState_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDigitalActionData_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetAnalogActionData_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataRelativeToNow_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataForNextFrame_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalActionData_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneCount_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneHierarchy_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneName_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalReferenceTransforms_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalTrackingLevel_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneData_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalSummaryData_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneDataCompressed_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___DecompressSkeletalBoneData_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___TriggerHapticVibrationAction_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionOrigins_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginLocalizedName_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginTrackedDeviceInfo_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionBindingInfo_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowActionOrigins_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowBindingsForActionSet_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsUsingLegacyInput_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___OpenBindingUI_27), (void*)NULL);
		#endif
	}
};


// Valve.VR.EDualAnalogWhich
struct  EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8 
{
public:
	// System.Int32 Valve.VR.EDualAnalogWhich::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EHDCPError
struct  EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F 
{
public:
	// System.Int32 Valve.VR.EHDCPError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EShowUIType
struct  EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF 
{
public:
	// System.Int32 Valve.VR.EShowUIType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingResult
struct  ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREventType
struct  EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3 
{
public:
	// System.Int32 Valve.VR.EVREventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREventType_t9A248608EB346C24D3EC6F3C1DF3FA4C6A207BC3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVREye
struct  EVREye_t7C413729402C81A69293253E13D4496F15B2F68A 
{
public:
	// System.Int32 Valve.VR.EVREye::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREye_t7C413729402C81A69293253E13D4496F15B2F68A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputError
struct  EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F 
{
public:
	// System.Int32 Valve.VR.EVRInputError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputStringBits
struct  EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60 
{
public:
	// System.Int32 Valve.VR.EVRInputStringBits::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalMotionRange
struct  EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalMotionRange::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalMotionRange_t7B3CF169090271D1030B7DBCB36A9F6B9B5833F5, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalReferencePose
struct  EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalReferencePose::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalReferencePose_t9735ED60A5D110A7B9569A57B78D9B212143077F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTrackingLevel
struct  EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTrackingLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTrackingLevel_tDFEFEB2A62597359105A66DDF2A00CC5B7B8F1AD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTransformSpace
struct  EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTransformSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTransformSpace_t42634E33BB67FB63D23667D5C12E7DCC6C4B90BB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSummaryType
struct  EVRSummaryType_t3633B56EEC68A4E79555876B8E7B5C0CE387BF09 
{
public:
	// System.Int32 Valve.VR.EVRSummaryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSummaryType_t3633B56EEC68A4E79555876B8E7B5C0CE387BF09, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_ActionDirections
struct  SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1 
{
public:
	// System.Int32 Valve.VR.SteamVR_ActionDirections::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9  : public SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199  : public SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02  : public SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6  : public SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C  : public SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2  : public SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902
{
public:

public:
};


// Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0  : public SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_BooleanEvent
struct  SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4  : public UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_PoseEvent
struct  SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87  : public UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent
struct  SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9  : public UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent
struct  SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9  : public UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent
struct  SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E  : public UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_SingleEvent
struct  SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4  : public UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7
{
public:

public:
};


// Valve.VR.SteamVR_Events_Event`1<Valve.VR.VREvent_t>
struct  Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262  : public UnityEvent_1_t7E9560B75945B332DA5807C6061708BBAF5F7307
{
public:

public:
};


// Valve.VR.SteamVR_Input_Sources
struct  SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7 
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Sources::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexEnum
struct  SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum
struct  SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VRBoneTransform_t
struct  VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 
{
public:
	// Valve.VR.HmdVector4_t Valve.VR.VRBoneTransform_t::position
	HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  ___position_0;
	// Valve.VR.HmdQuaternionf_t Valve.VR.VRBoneTransform_t::orientation
	HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  ___orientation_1;

public:
	inline static int32_t get_offset_of_position_0() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9, ___position_0)); }
	inline HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  get_position_0() const { return ___position_0; }
	inline HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * get_address_of_position_0() { return &___position_0; }
	inline void set_position_0(HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9  value)
	{
		___position_0 = value;
	}

	inline static int32_t get_offset_of_orientation_1() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9, ___orientation_1)); }
	inline HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  get_orientation_1() const { return ___orientation_1; }
	inline HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * get_address_of_orientation_1() { return &___orientation_1; }
	inline void set_orientation_1(HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11  value)
	{
		___orientation_1 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.SystemException
struct  SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct  Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct  Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean
struct  SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20  : public SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A  : public SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2  : public SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single
struct  SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81  : public SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source
struct  SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::<inputSource>k__BackingField
	int32_t ___U3CinputSourceU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source::inputSourceHandle
	uint64_t ___inputSourceHandle_1;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_2;

public:
	inline static int32_t get_offset_of_U3CinputSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___U3CinputSourceU3Ek__BackingField_0)); }
	inline int32_t get_U3CinputSourceU3Ek__BackingField_0() const { return ___U3CinputSourceU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CinputSourceU3Ek__BackingField_0() { return &___U3CinputSourceU3Ek__BackingField_0; }
	inline void set_U3CinputSourceU3Ek__BackingField_0(int32_t value)
	{
		___U3CinputSourceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandle_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___inputSourceHandle_1)); }
	inline uint64_t get_inputSourceHandle_1() const { return ___inputSourceHandle_1; }
	inline uint64_t* get_address_of_inputSourceHandle_1() { return &___inputSourceHandle_1; }
	inline void set_inputSourceHandle_1(uint64_t value)
	{
		___inputSourceHandle_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___action_2)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_2() const { return ___action_2; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_2), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map
struct  SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_1;
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::<actionSet>k__BackingField
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___U3CactionSetU3Ek__BackingField_2;
	// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::<direction>k__BackingField
	int32_t ___U3CdirectionU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source_Map::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_4;

public:
	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CfullPathU3Ek__BackingField_0)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_0() const { return ___U3CfullPathU3Ek__BackingField_0; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_0() { return &___U3CfullPathU3Ek__BackingField_0; }
	inline void set_U3CfullPathU3Ek__BackingField_0(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3ChandleU3Ek__BackingField_1)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_1() const { return ___U3ChandleU3Ek__BackingField_1; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_1() { return &___U3ChandleU3Ek__BackingField_1; }
	inline void set_U3ChandleU3Ek__BackingField_1(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CactionSetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CactionSetU3Ek__BackingField_2)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_U3CactionSetU3Ek__BackingField_2() const { return ___U3CactionSetU3Ek__BackingField_2; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_U3CactionSetU3Ek__BackingField_2() { return &___U3CactionSetU3Ek__BackingField_2; }
	inline void set_U3CactionSetU3Ek__BackingField_2(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___U3CactionSetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CactionSetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdirectionU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CdirectionU3Ek__BackingField_3)); }
	inline int32_t get_U3CdirectionU3Ek__BackingField_3() const { return ___U3CdirectionU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CdirectionU3Ek__BackingField_3() { return &___U3CdirectionU3Ek__BackingField_3; }
	inline void set_U3CdirectionU3Ek__BackingField_3(int32_t value)
	{
		___U3CdirectionU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___action_4)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_4() const { return ___action_4; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_4), (void*)value);
	}
};

struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::inLowered
	String_t* ___inLowered_5;
	// System.String Valve.VR.SteamVR_Action_Source_Map::outLowered
	String_t* ___outLowered_6;

public:
	inline static int32_t get_offset_of_inLowered_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___inLowered_5)); }
	inline String_t* get_inLowered_5() const { return ___inLowered_5; }
	inline String_t** get_address_of_inLowered_5() { return &___inLowered_5; }
	inline void set_inLowered_5(String_t* value)
	{
		___inLowered_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inLowered_5), (void*)value);
	}

	inline static int32_t get_offset_of_outLowered_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___outLowered_6)); }
	inline String_t* get_outLowered_6() const { return ___outLowered_6; }
	inline String_t** get_address_of_outLowered_6() { return &___outLowered_6; }
	inline void set_outLowered_6(String_t* value)
	{
		___outLowered_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___outLowered_6), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2
struct  SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37  : public SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3
struct  SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9  : public SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration
struct  SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB  : public SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0
{
public:

public:
};


// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vVelocity_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};


// Valve.VR.VREvent_DualAnalog_t
struct  VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 
{
public:
	// System.Single Valve.VR.VREvent_DualAnalog_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_DualAnalog_t::y
	float ___y_1;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedX
	float ___transformedX_2;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedY
	float ___transformedY_3;
	// Valve.VR.EDualAnalogWhich Valve.VR.VREvent_DualAnalog_t::which
	int32_t ___which_4;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_transformedX_2() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedX_2)); }
	inline float get_transformedX_2() const { return ___transformedX_2; }
	inline float* get_address_of_transformedX_2() { return &___transformedX_2; }
	inline void set_transformedX_2(float value)
	{
		___transformedX_2 = value;
	}

	inline static int32_t get_offset_of_transformedY_3() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedY_3)); }
	inline float get_transformedY_3() const { return ___transformedY_3; }
	inline float* get_address_of_transformedY_3() { return &___transformedY_3; }
	inline void set_transformedY_3(float value)
	{
		___transformedY_3 = value;
	}

	inline static int32_t get_offset_of_which_4() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___which_4)); }
	inline int32_t get_which_4() const { return ___which_4; }
	inline int32_t* get_address_of_which_4() { return &___which_4; }
	inline void set_which_4(int32_t value)
	{
		___which_4 = value;
	}
};


// Valve.VR.VREvent_HDCPError_t
struct  VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E 
{
public:
	// Valve.VR.EHDCPError Valve.VR.VREvent_HDCPError_t::eCode
	int32_t ___eCode_0;

public:
	inline static int32_t get_offset_of_eCode_0() { return static_cast<int32_t>(offsetof(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E, ___eCode_0)); }
	inline int32_t get_eCode_0() const { return ___eCode_0; }
	inline int32_t* get_address_of_eCode_0() { return &___eCode_0; }
	inline void set_eCode_0(int32_t value)
	{
		___eCode_0 = value;
	}
};


// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};


// Valve.VR.VREvent_ShowUI_t
struct  VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 
{
public:
	// Valve.VR.EShowUIType Valve.VR.VREvent_ShowUI_t::eType
	int32_t ___eType_0;

public:
	inline static int32_t get_offset_of_eType_0() { return static_cast<int32_t>(offsetof(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997, ___eType_0)); }
	inline int32_t get_eType_0() const { return ___eType_0; }
	inline int32_t* get_address_of_eType_0() { return &___eType_0; }
	inline void set_eType_0(int32_t value)
	{
		___eType_0 = value;
	}
};


// System.Action`1<System.String>
struct  Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0  : public MulticastDelegate_t
{
public:

public:
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// System.NotSupportedException
struct  NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct  Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Events.UnityAction
struct  UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Transform
struct  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Valve.VR.InputPoseActionData_t
struct  InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 
{
public:
	// System.Boolean Valve.VR.InputPoseActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputPoseActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// Valve.VR.TrackedDevicePose_t Valve.VR.InputPoseActionData_t::pose
	TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  ___pose_2;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_pose_2() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___pose_2)); }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  get_pose_2() const { return ___pose_2; }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * get_address_of_pose_2() { return &___pose_2; }
	inline void set_pose_2(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  value)
	{
		___pose_2 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_ChangeHandler
struct  ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateDownHandler
struct  StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateHandler
struct  StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateUpHandler
struct  StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_UpdateHandler
struct  UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_In_Source
struct  SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:
	// System.Boolean Valve.VR.SteamVR_Action_In_Source::<isUpdating>k__BackingField
	bool ___U3CisUpdatingU3Ek__BackingField_4;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<updateTime>k__BackingField
	float ___U3CupdateTimeU3Ek__BackingField_5;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<changedTime>k__BackingField
	float ___U3CchangedTimeU3Ek__BackingField_6;
	// System.Int32 Valve.VR.SteamVR_Action_In_Source::<lastOriginGetFrame>k__BackingField
	int32_t ___U3ClastOriginGetFrameU3Ek__BackingField_7;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::inputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___inputOriginInfo_8;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::lastInputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___lastInputOriginInfo_9;

public:
	inline static int32_t get_offset_of_U3CisUpdatingU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CisUpdatingU3Ek__BackingField_4)); }
	inline bool get_U3CisUpdatingU3Ek__BackingField_4() const { return ___U3CisUpdatingU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CisUpdatingU3Ek__BackingField_4() { return &___U3CisUpdatingU3Ek__BackingField_4; }
	inline void set_U3CisUpdatingU3Ek__BackingField_4(bool value)
	{
		___U3CisUpdatingU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CupdateTimeU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CupdateTimeU3Ek__BackingField_5)); }
	inline float get_U3CupdateTimeU3Ek__BackingField_5() const { return ___U3CupdateTimeU3Ek__BackingField_5; }
	inline float* get_address_of_U3CupdateTimeU3Ek__BackingField_5() { return &___U3CupdateTimeU3Ek__BackingField_5; }
	inline void set_U3CupdateTimeU3Ek__BackingField_5(float value)
	{
		___U3CupdateTimeU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CchangedTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CchangedTimeU3Ek__BackingField_6)); }
	inline float get_U3CchangedTimeU3Ek__BackingField_6() const { return ___U3CchangedTimeU3Ek__BackingField_6; }
	inline float* get_address_of_U3CchangedTimeU3Ek__BackingField_6() { return &___U3CchangedTimeU3Ek__BackingField_6; }
	inline void set_U3CchangedTimeU3Ek__BackingField_6(float value)
	{
		___U3CchangedTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3ClastOriginGetFrameU3Ek__BackingField_7)); }
	inline int32_t get_U3ClastOriginGetFrameU3Ek__BackingField_7() const { return ___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return &___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline void set_U3ClastOriginGetFrameU3Ek__BackingField_7(int32_t value)
	{
		___U3ClastOriginGetFrameU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_inputOriginInfo_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___inputOriginInfo_8)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_inputOriginInfo_8() const { return ___inputOriginInfo_8; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_inputOriginInfo_8() { return &___inputOriginInfo_8; }
	inline void set_inputOriginInfo_8(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___inputOriginInfo_8 = value;
	}

	inline static int32_t get_offset_of_lastInputOriginInfo_9() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___lastInputOriginInfo_9)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_lastInputOriginInfo_9() const { return ___lastInputOriginInfo_9; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_lastInputOriginInfo_9() { return &___lastInputOriginInfo_9; }
	inline void set_lastInputOriginInfo_9(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___lastInputOriginInfo_9 = value;
	}
};

struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_In_Source::inputOriginInfo_size
	uint32_t ___inputOriginInfo_size_3;

public:
	inline static int32_t get_offset_of_inputOriginInfo_size_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields, ___inputOriginInfo_size_3)); }
	inline uint32_t get_inputOriginInfo_size_3() const { return ___inputOriginInfo_size_3; }
	inline uint32_t* get_address_of_inputOriginInfo_size_3() { return &___inputOriginInfo_size_3; }
	inline void set_inputOriginInfo_size_3(uint32_t value)
	{
		___inputOriginInfo_size_3 = value;
	}
};


// Valve.VR.SteamVR_Action_Out_Source
struct  SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose
struct  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C  : public SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ChangeHandler
struct  ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_UpdateHandler
struct  UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_AxisHandler
struct  AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_ChangeHandler
struct  ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_UpdateHandler
struct  UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton
struct  SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504  : public SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2
{
public:

public:
};

struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::steamVRFixUpRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___steamVRFixUpRotation_7;

public:
	inline static int32_t get_offset_of_steamVRFixUpRotation_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields, ___steamVRFixUpRotation_7)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_steamVRFixUpRotation_7() const { return ___steamVRFixUpRotation_7; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_steamVRFixUpRotation_7() { return &___steamVRFixUpRotation_7; }
	inline void set_steamVRFixUpRotation_7(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___steamVRFixUpRotation_7 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler
struct  ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_ChangeHandler
struct  ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler
struct  TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_UpdateHandler
struct  UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1, ___sources_7)); }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1, ___sources_7)); }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899, ___sources_7)); }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F, ___sources_7)); }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector3_SourceU5BU5D_t3786953EC7D2DDE18FE5D1A5C158FE06D1C3E8BF* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>
struct  SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7, ___sources_7)); }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler
struct  ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_AxisHandler
struct  AxisHandler_t97FB692AF5465040A2929AB663941933E3567689  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_ChangeHandler
struct  ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2_UpdateHandler
struct  UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler
struct  ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_AxisHandler
struct  AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_ChangeHandler
struct  ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_UpdateHandler
struct  UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler
struct  ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler
struct  ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler
struct  ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler
struct  ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler
struct  StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler
struct  StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler
struct  StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler
struct  UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler
struct  ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler
struct  ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler
struct  DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler
struct  UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_AxisHandler
struct  AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler
struct  ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler
struct  UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_DualAnalog_t Valve.VR.VREvent_Data_t::dualAnalog
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_WebConsole_t Valve.VR.VREvent_Data_t::webConsole
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputBindingLoad_t Valve.VR.VREvent_Data_t::inputBinding
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SpatialAnchor_t Valve.VR.VREvent_Data_t::spatialAnchor
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputActionManifestLoad_t Valve.VR.VREvent_Data_t::actionManifest
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ProgressUpdate_t Valve.VR.VREvent_Data_t::progressUpdate
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowUI_t Valve.VR.VREvent_Data_t::showUi
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowDevTools_t Valve.VR.VREvent_Data_t::showDevTools
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HDCPError_t Valve.VR.VREvent_Data_t::hdcpError
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___reserved_0)); }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___controller_1)); }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___mouse_2)); }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___scroll_3)); }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___process_4)); }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___notification_5)); }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___overlay_6)); }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___status_7)); }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___ipd_8)); }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___chaperone_9)); }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshot_13)); }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___property_18)); }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_dualAnalog_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___dualAnalog_19)); }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  get_dualAnalog_19() const { return ___dualAnalog_19; }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 * get_address_of_dualAnalog_19() { return &___dualAnalog_19; }
	inline void set_dualAnalog_19(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  value)
	{
		___dualAnalog_19 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hapticVibration_20)); }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  get_hapticVibration_20() const { return ___hapticVibration_20; }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F * get_address_of_hapticVibration_20() { return &___hapticVibration_20; }
	inline void set_hapticVibration_20(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  value)
	{
		___hapticVibration_20 = value;
	}

	inline static int32_t get_offset_of_webConsole_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___webConsole_21)); }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  get_webConsole_21() const { return ___webConsole_21; }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 * get_address_of_webConsole_21() { return &___webConsole_21; }
	inline void set_webConsole_21(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  value)
	{
		___webConsole_21 = value;
	}

	inline static int32_t get_offset_of_inputBinding_22() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___inputBinding_22)); }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  get_inputBinding_22() const { return ___inputBinding_22; }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED * get_address_of_inputBinding_22() { return &___inputBinding_22; }
	inline void set_inputBinding_22(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  value)
	{
		___inputBinding_22 = value;
	}

	inline static int32_t get_offset_of_spatialAnchor_23() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___spatialAnchor_23)); }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  get_spatialAnchor_23() const { return ___spatialAnchor_23; }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 * get_address_of_spatialAnchor_23() { return &___spatialAnchor_23; }
	inline void set_spatialAnchor_23(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  value)
	{
		___spatialAnchor_23 = value;
	}

	inline static int32_t get_offset_of_actionManifest_24() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___actionManifest_24)); }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  get_actionManifest_24() const { return ___actionManifest_24; }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 * get_address_of_actionManifest_24() { return &___actionManifest_24; }
	inline void set_actionManifest_24(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  value)
	{
		___actionManifest_24 = value;
	}

	inline static int32_t get_offset_of_progressUpdate_25() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___progressUpdate_25)); }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  get_progressUpdate_25() const { return ___progressUpdate_25; }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE * get_address_of_progressUpdate_25() { return &___progressUpdate_25; }
	inline void set_progressUpdate_25(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  value)
	{
		___progressUpdate_25 = value;
	}

	inline static int32_t get_offset_of_showUi_26() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showUi_26)); }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  get_showUi_26() const { return ___showUi_26; }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 * get_address_of_showUi_26() { return &___showUi_26; }
	inline void set_showUi_26(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  value)
	{
		___showUi_26 = value;
	}

	inline static int32_t get_offset_of_showDevTools_27() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showDevTools_27)); }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  get_showDevTools_27() const { return ___showDevTools_27; }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 * get_address_of_showDevTools_27() { return &___showDevTools_27; }
	inline void set_showDevTools_27(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  value)
	{
		___showDevTools_27 = value;
	}

	inline static int32_t get_offset_of_hdcpError_28() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hdcpError_28)); }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  get_hdcpError_28() const { return ___hdcpError_28; }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E * get_address_of_hdcpError_28() { return &___hdcpError_28; }
	inline void set_hdcpError_28(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  value)
	{
		___hdcpError_28 = value;
	}

	inline static int32_t get_offset_of_keyboard_29() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___keyboard_29)); }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  get_keyboard_29() const { return ___keyboard_29; }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 * get_address_of_keyboard_29() { return &___keyboard_29; }
	inline void set_keyboard_29(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  value)
	{
		___keyboard_29 = value;
	}
};


// UnityEngine.MonoBehaviour
struct  MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_Source
struct  SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.SteamVR_Action_Boolean_StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateDown
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___onStateDown_11;
	// Valve.VR.SteamVR_Action_Boolean_StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateUp
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___onStateUp_12;
	// Valve.VR.SteamVR_Action_Boolean_StateHandler Valve.VR.SteamVR_Action_Boolean_Source::onState
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___onState_13;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveChange_14;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveBindingChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveBindingChange_15;
	// Valve.VR.SteamVR_Action_Boolean_ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onChange
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___onChange_16;
	// Valve.VR.SteamVR_Action_Boolean_UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source::onUpdate
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___onUpdate_17;
	// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_18;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::actionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___actionData_19;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::lastActionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___lastActionData_20;
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_21;

public:
	inline static int32_t get_offset_of_onStateDown_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateDown_11)); }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * get_onStateDown_11() const { return ___onStateDown_11; }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** get_address_of_onStateDown_11() { return &___onStateDown_11; }
	inline void set_onStateDown_11(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * value)
	{
		___onStateDown_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateDown_11), (void*)value);
	}

	inline static int32_t get_offset_of_onStateUp_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateUp_12)); }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * get_onStateUp_12() const { return ___onStateUp_12; }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** get_address_of_onStateUp_12() { return &___onStateUp_12; }
	inline void set_onStateUp_12(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * value)
	{
		___onStateUp_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateUp_12), (void*)value);
	}

	inline static int32_t get_offset_of_onState_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onState_13)); }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * get_onState_13() const { return ___onState_13; }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** get_address_of_onState_13() { return &___onState_13; }
	inline void set_onState_13(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * value)
	{
		___onState_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onState_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveChange_14)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveChange_14() const { return ___onActiveChange_14; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveChange_14() { return &___onActiveChange_14; }
	inline void set_onActiveChange_14(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveBindingChange_15)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveBindingChange_15() const { return ___onActiveBindingChange_15; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveBindingChange_15() { return &___onActiveBindingChange_15; }
	inline void set_onActiveBindingChange_15(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveBindingChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onChange_16)); }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * get_onChange_16() const { return ___onChange_16; }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** get_address_of_onChange_16() { return &___onChange_16; }
	inline void set_onChange_16(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * value)
	{
		___onChange_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_16), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onUpdate_17)); }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * get_onUpdate_17() const { return ___onUpdate_17; }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** get_address_of_onUpdate_17() { return &___onUpdate_17; }
	inline void set_onUpdate_17(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * value)
	{
		___onUpdate_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___U3ClastActiveU3Ek__BackingField_18)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_18() const { return ___U3ClastActiveU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_18() { return &___U3ClastActiveU3Ek__BackingField_18; }
	inline void set_U3ClastActiveU3Ek__BackingField_18(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_actionData_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___actionData_19)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_actionData_19() const { return ___actionData_19; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_actionData_19() { return &___actionData_19; }
	inline void set_actionData_19(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___actionData_19 = value;
	}

	inline static int32_t get_offset_of_lastActionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___lastActionData_20)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_lastActionData_20() const { return ___lastActionData_20; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_lastActionData_20() { return &___lastActionData_20; }
	inline void set_lastActionData_20(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___lastActionData_20 = value;
	}

	inline static int32_t get_offset_of_booleanAction_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___booleanAction_21)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_21() const { return ___booleanAction_21; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_21() { return &___booleanAction_21; }
	inline void set_booleanAction_21(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_21), (void*)value);
	}
};

struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Boolean_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741  : public SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4  : public SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct  SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D  : public SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>
struct  SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253  : public SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Pose_Source
struct  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source::universeOrigin
	int32_t ___universeOrigin_10;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::changeTolerance
	float ___changeTolerance_12;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveBindingChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Pose_ChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onChange
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___onChange_15;
	// Valve.VR.SteamVR_Action_Pose_UpdateHandler Valve.VR.SteamVR_Action_Pose_Source::onUpdate
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___onUpdate_16;
	// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onTrackingChanged
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___onTrackingChanged_17;
	// Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onValidPoseChanged
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___onValidPoseChanged_18;
	// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___onDeviceConnectedChanged_19;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_22;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<localPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClocalPositionU3Ek__BackingField_23;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<localRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClocalRotationU3Ek__BackingField_24;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastLocalPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastLocalPositionU3Ek__BackingField_25;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<lastLocalRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClastLocalRotationU3Ek__BackingField_26;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CvelocityU3Ek__BackingField_27;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastVelocityU3Ek__BackingField_28;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<angularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CangularVelocityU3Ek__BackingField_29;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAngularVelocityU3Ek__BackingField_30;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::poseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___poseActionData_31;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::lastPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___lastPoseActionData_32;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::tempPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___tempPoseActionData_33;
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_34;

public:
	inline static int32_t get_offset_of_universeOrigin_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___universeOrigin_10)); }
	inline int32_t get_universeOrigin_10() const { return ___universeOrigin_10; }
	inline int32_t* get_address_of_universeOrigin_10() { return &___universeOrigin_10; }
	inline void set_universeOrigin_10(int32_t value)
	{
		___universeOrigin_10 = value;
	}

	inline static int32_t get_offset_of_changeTolerance_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___changeTolerance_12)); }
	inline float get_changeTolerance_12() const { return ___changeTolerance_12; }
	inline float* get_address_of_changeTolerance_12() { return &___changeTolerance_12; }
	inline void set_changeTolerance_12(float value)
	{
		___changeTolerance_12 = value;
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onChange_15)); }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onUpdate_16)); }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onTrackingChanged_17)); }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * get_onTrackingChanged_17() const { return ___onTrackingChanged_17; }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** get_address_of_onTrackingChanged_17() { return &___onTrackingChanged_17; }
	inline void set_onTrackingChanged_17(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * value)
	{
		___onTrackingChanged_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_17), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onValidPoseChanged_18)); }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * get_onValidPoseChanged_18() const { return ___onValidPoseChanged_18; }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** get_address_of_onValidPoseChanged_18() { return &___onValidPoseChanged_18; }
	inline void set_onValidPoseChanged_18(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * value)
	{
		___onValidPoseChanged_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_18), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onDeviceConnectedChanged_19)); }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * get_onDeviceConnectedChanged_19() const { return ___onDeviceConnectedChanged_19; }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** get_address_of_onDeviceConnectedChanged_19() { return &___onDeviceConnectedChanged_19; }
	inline void set_onDeviceConnectedChanged_19(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * value)
	{
		___onDeviceConnectedChanged_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CchangedU3Ek__BackingField_20)); }
	inline bool get_U3CchangedU3Ek__BackingField_20() const { return ___U3CchangedU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_20() { return &___U3CchangedU3Ek__BackingField_20; }
	inline void set_U3CchangedU3Ek__BackingField_20(bool value)
	{
		___U3CchangedU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastChangedU3Ek__BackingField_21)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_21() const { return ___U3ClastChangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_21() { return &___U3ClastChangedU3Ek__BackingField_21; }
	inline void set_U3ClastChangedU3Ek__BackingField_21(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastActiveU3Ek__BackingField_22)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_22() const { return ___U3ClastActiveU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_22() { return &___U3ClastActiveU3Ek__BackingField_22; }
	inline void set_U3ClastActiveU3Ek__BackingField_22(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClocalPositionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalPositionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClocalPositionU3Ek__BackingField_23() const { return ___U3ClocalPositionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClocalPositionU3Ek__BackingField_23() { return &___U3ClocalPositionU3Ek__BackingField_23; }
	inline void set_U3ClocalPositionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClocalPositionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_U3ClocalRotationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalRotationU3Ek__BackingField_24)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClocalRotationU3Ek__BackingField_24() const { return ___U3ClocalRotationU3Ek__BackingField_24; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClocalRotationU3Ek__BackingField_24() { return &___U3ClocalRotationU3Ek__BackingField_24; }
	inline void set_U3ClocalRotationU3Ek__BackingField_24(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClocalRotationU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalPositionU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalPositionU3Ek__BackingField_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastLocalPositionU3Ek__BackingField_25() const { return ___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastLocalPositionU3Ek__BackingField_25() { return &___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline void set_U3ClastLocalPositionU3Ek__BackingField_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastLocalPositionU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalRotationU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalRotationU3Ek__BackingField_26)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClastLocalRotationU3Ek__BackingField_26() const { return ___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClastLocalRotationU3Ek__BackingField_26() { return &___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline void set_U3ClastLocalRotationU3Ek__BackingField_26(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClastLocalRotationU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CvelocityU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CvelocityU3Ek__BackingField_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CvelocityU3Ek__BackingField_27() const { return ___U3CvelocityU3Ek__BackingField_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CvelocityU3Ek__BackingField_27() { return &___U3CvelocityU3Ek__BackingField_27; }
	inline void set_U3CvelocityU3Ek__BackingField_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CvelocityU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3ClastVelocityU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastVelocityU3Ek__BackingField_28)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastVelocityU3Ek__BackingField_28() const { return ___U3ClastVelocityU3Ek__BackingField_28; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastVelocityU3Ek__BackingField_28() { return &___U3ClastVelocityU3Ek__BackingField_28; }
	inline void set_U3ClastVelocityU3Ek__BackingField_28(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastVelocityU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_U3CangularVelocityU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CangularVelocityU3Ek__BackingField_29)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CangularVelocityU3Ek__BackingField_29() const { return ___U3CangularVelocityU3Ek__BackingField_29; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CangularVelocityU3Ek__BackingField_29() { return &___U3CangularVelocityU3Ek__BackingField_29; }
	inline void set_U3CangularVelocityU3Ek__BackingField_29(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CangularVelocityU3Ek__BackingField_29 = value;
	}

	inline static int32_t get_offset_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastAngularVelocityU3Ek__BackingField_30)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAngularVelocityU3Ek__BackingField_30() const { return ___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return &___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline void set_U3ClastAngularVelocityU3Ek__BackingField_30(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAngularVelocityU3Ek__BackingField_30 = value;
	}

	inline static int32_t get_offset_of_poseActionData_31() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseActionData_31)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_poseActionData_31() const { return ___poseActionData_31; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_poseActionData_31() { return &___poseActionData_31; }
	inline void set_poseActionData_31(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___poseActionData_31 = value;
	}

	inline static int32_t get_offset_of_lastPoseActionData_32() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___lastPoseActionData_32)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_lastPoseActionData_32() const { return ___lastPoseActionData_32; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_lastPoseActionData_32() { return &___lastPoseActionData_32; }
	inline void set_lastPoseActionData_32(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___lastPoseActionData_32 = value;
	}

	inline static int32_t get_offset_of_tempPoseActionData_33() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___tempPoseActionData_33)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_tempPoseActionData_33() const { return ___tempPoseActionData_33; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_tempPoseActionData_33() { return &___tempPoseActionData_33; }
	inline void set_tempPoseActionData_33(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___tempPoseActionData_33 = value;
	}

	inline static int32_t get_offset_of_poseAction_34() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseAction_34)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_34() const { return ___poseAction_34; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_34() { return &___poseAction_34; }
	inline void set_poseAction_34(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_34), (void*)value);
	}
};

struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Pose_Source::poseActionData_size
	uint32_t ___poseActionData_size_11;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::framesAhead
	float ___framesAhead_35;

public:
	inline static int32_t get_offset_of_poseActionData_size_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___poseActionData_size_11)); }
	inline uint32_t get_poseActionData_size_11() const { return ___poseActionData_size_11; }
	inline uint32_t* get_address_of_poseActionData_size_11() { return &___poseActionData_size_11; }
	inline void set_poseActionData_size_11(uint32_t value)
	{
		___poseActionData_size_11 = value;
	}

	inline static int32_t get_offset_of_framesAhead_35() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___framesAhead_35)); }
	inline float get_framesAhead_35() const { return ___framesAhead_35; }
	inline float* get_address_of_framesAhead_35() { return &___framesAhead_35; }
	inline void set_framesAhead_35(float value)
	{
		___framesAhead_35 = value;
	}
};


// Valve.VR.SteamVR_Action_Single_Source
struct  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Single_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Single_AxisHandler Valve.VR.SteamVR_Action_Single_Source::onAxis
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveBindingChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Single_ChangeHandler Valve.VR.SteamVR_Action_Single_Source::onChange
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___onChange_15;
	// Valve.VR.SteamVR_Action_Single_UpdateHandler Valve.VR.SteamVR_Action_Single_Source::onUpdate
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___onUpdate_16;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_17;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_18;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_19;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_20;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_21;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Action_Single_Source::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_22;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onAxis_12)); }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onChange_15)); }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onUpdate_16)); }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3CchangedU3Ek__BackingField_17)); }
	inline bool get_U3CchangedU3Ek__BackingField_17() const { return ___U3CchangedU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_17() { return &___U3CchangedU3Ek__BackingField_17; }
	inline void set_U3CchangedU3Ek__BackingField_17(bool value)
	{
		___U3CchangedU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastChangedU3Ek__BackingField_18)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_18() const { return ___U3ClastChangedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_18() { return &___U3ClastChangedU3Ek__BackingField_18; }
	inline void set_U3ClastChangedU3Ek__BackingField_18(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastActiveU3Ek__BackingField_19)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_19() const { return ___U3ClastActiveU3Ek__BackingField_19; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_19() { return &___U3ClastActiveU3Ek__BackingField_19; }
	inline void set_U3ClastActiveU3Ek__BackingField_19(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_actionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___actionData_20)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_20() const { return ___actionData_20; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_20() { return &___actionData_20; }
	inline void set_actionData_20(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_20 = value;
	}

	inline static int32_t get_offset_of_lastActionData_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___lastActionData_21)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_21() const { return ___lastActionData_21; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_21() { return &___lastActionData_21; }
	inline void set_lastActionData_21(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_21 = value;
	}

	inline static int32_t get_offset_of_singleAction_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___singleAction_22)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_22() const { return ___singleAction_22; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_22() { return &___singleAction_22; }
	inline void set_singleAction_22(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_22), (void*)value);
	}
};

struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Single_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source
struct  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector2_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector2_AxisHandler Valve.VR.SteamVR_Action_Vector2_Source::onAxis
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveBindingChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector2_ChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onChange
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector2_UpdateHandler Valve.VR.SteamVR_Action_Vector2_Source::onUpdate
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___onUpdate_16;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<axis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastAxis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<delta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastDelta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector2 Valve.VR.SteamVR_Action_Vector2_Source::vector2Action
	SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___vector2Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onAxis_12)); }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveChange_13)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onChange_15)); }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onUpdate_16)); }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___actionData_24)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector2Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___vector2Action_26)); }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * get_vector2Action_26() const { return ___vector2Action_26; }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 ** get_address_of_vector2Action_26() { return &___vector2Action_26; }
	inline void set_vector2Action_26(SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * value)
	{
		___vector2Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector2Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector2_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector3_Source
struct  SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector3_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector3_AxisHandler Valve.VR.SteamVR_Action_Vector3_Source::onAxis
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onActiveChange
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onActiveBindingChange
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector3_ChangeHandler Valve.VR.SteamVR_Action_Vector3_Source::onChange
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector3_UpdateHandler Valve.VR.SteamVR_Action_Vector3_Source::onUpdate
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___onUpdate_16;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<axis>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<lastAxis>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<delta>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::<lastDelta>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector3_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector3_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector3 Valve.VR.SteamVR_Action_Vector3_Source::vector3Action
	SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___vector3Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onAxis_12)); }
	inline AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onChange_15)); }
	inline ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___onUpdate_16)); }
	inline UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___actionData_24)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector3Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90, ___vector3Action_26)); }
	inline SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * get_vector3Action_26() const { return ___vector3Action_26; }
	inline SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 ** get_address_of_vector3Action_26() { return &___vector3Action_26; }
	inline void set_vector3Action_26(SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * value)
	{
		___vector3Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector3Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector3_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source
struct  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151  : public SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6
{
public:
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveChange_3;
	// Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler Valve.VR.SteamVR_Action_Vibration_Source::onActiveBindingChange
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___onActiveBindingChange_4;
	// Valve.VR.SteamVR_Action_Vibration_ExecuteHandler Valve.VR.SteamVR_Action_Vibration_Source::onExecute
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___onExecute_5;
	// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_6;
	// System.Single Valve.VR.SteamVR_Action_Vibration_Source::<timeLastExecuted>k__BackingField
	float ___U3CtimeLastExecutedU3Ek__BackingField_7;
	// Valve.VR.SteamVR_Action_Vibration Valve.VR.SteamVR_Action_Vibration_Source::vibrationAction
	SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___vibrationAction_8;

public:
	inline static int32_t get_offset_of_onActiveChange_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveChange_3)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveChange_3() const { return ___onActiveChange_3; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveChange_3() { return &___onActiveChange_3; }
	inline void set_onActiveChange_3(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveChange_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_3), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onActiveBindingChange_4)); }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * get_onActiveBindingChange_4() const { return ___onActiveBindingChange_4; }
	inline ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** get_address_of_onActiveBindingChange_4() { return &___onActiveBindingChange_4; }
	inline void set_onActiveBindingChange_4(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * value)
	{
		___onActiveBindingChange_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_4), (void*)value);
	}

	inline static int32_t get_offset_of_onExecute_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___onExecute_5)); }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * get_onExecute_5() const { return ___onExecute_5; }
	inline ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** get_address_of_onExecute_5() { return &___onExecute_5; }
	inline void set_onExecute_5(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * value)
	{
		___onExecute_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onExecute_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3ClastActiveU3Ek__BackingField_6)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_6() const { return ___U3ClastActiveU3Ek__BackingField_6; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_6() { return &___U3ClastActiveU3Ek__BackingField_6; }
	inline void set_U3ClastActiveU3Ek__BackingField_6(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___U3CtimeLastExecutedU3Ek__BackingField_7)); }
	inline float get_U3CtimeLastExecutedU3Ek__BackingField_7() const { return ___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline float* get_address_of_U3CtimeLastExecutedU3Ek__BackingField_7() { return &___U3CtimeLastExecutedU3Ek__BackingField_7; }
	inline void set_U3CtimeLastExecutedU3Ek__BackingField_7(float value)
	{
		___U3CtimeLastExecutedU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_vibrationAction_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151, ___vibrationAction_8)); }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * get_vibrationAction_8() const { return ___vibrationAction_8; }
	inline SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB ** get_address_of_vibrationAction_8() { return &___vibrationAction_8; }
	inline void set_vibrationAction_8(SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * value)
	{
		___vibrationAction_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vibrationAction_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vibration_Source_Map
struct  SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A  : public SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7
{
public:

public:
};


// Valve.VR.VREvent_t
struct  VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___data_3)); }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  value)
	{
		___data_3 = value;
	}
};


// UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>
struct  UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125  : public SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_Source_Map
struct  SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37  : public SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_Source
struct  SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72  : public SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27
{
public:
	// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveChange_37;
	// Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveBindingChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveBindingChange_38;
	// Valve.VR.SteamVR_Action_Skeleton_ChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onChange
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___onChange_39;
	// Valve.VR.SteamVR_Action_Skeleton_UpdateHandler Valve.VR.SteamVR_Action_Skeleton_Source::onUpdate
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___onUpdate_40;
	// Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onTrackingChanged
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___onTrackingChanged_41;
	// Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onValidPoseChanged
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___onValidPoseChanged_42;
	// Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___onDeviceConnectedChanged_43;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<bonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CbonePositionsU3Ek__BackingField_44;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<boneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3CboneRotationsU3Ek__BackingField_45;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3ClastBonePositionsU3Ek__BackingField_46;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBoneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3ClastBoneRotationsU3Ek__BackingField_47;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::<rangeOfMotion>k__BackingField
	int32_t ___U3CrangeOfMotionU3Ek__BackingField_48;
	// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::<skeletalTransformSpace>k__BackingField
	int32_t ___U3CskeletalTransformSpaceU3Ek__BackingField_49;
	// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::<summaryDataType>k__BackingField
	int32_t ___U3CsummaryDataTypeU3Ek__BackingField_50;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerCurlsU3Ek__BackingField_51;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerSplaysU3Ek__BackingField_52;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerCurlsU3Ek__BackingField_53;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerSplaysU3Ek__BackingField_54;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<poseChanged>k__BackingField
	bool ___U3CposeChangedU3Ek__BackingField_55;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<onlyUpdateSummaryData>k__BackingField
	bool ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletalSummaryData
	VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  ___skeletalSummaryData_57;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletalSummaryData
	VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  ___lastSkeletalSummaryData_58;
	// Valve.VR.SteamVR_Action_Skeleton Valve.VR.SteamVR_Action_Skeleton_Source::skeletonAction
	SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___skeletonAction_59;
	// Valve.VR.VRBoneTransform_t[] Valve.VR.SteamVR_Action_Skeleton_Source::tempBoneTransforms
	VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___tempBoneTransforms_60;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___skeletonActionData_61;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___lastSkeletonActionData_62;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::tempSkeletonActionData
	InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  ___tempSkeletonActionData_63;

public:
	inline static int32_t get_offset_of_onActiveChange_37() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveChange_37)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveChange_37() const { return ___onActiveChange_37; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveChange_37() { return &___onActiveChange_37; }
	inline void set_onActiveChange_37(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveChange_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_37), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_38() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveBindingChange_38)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveBindingChange_38() const { return ___onActiveBindingChange_38; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveBindingChange_38() { return &___onActiveBindingChange_38; }
	inline void set_onActiveBindingChange_38(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveBindingChange_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_38), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_39() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onChange_39)); }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * get_onChange_39() const { return ___onChange_39; }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** get_address_of_onChange_39() { return &___onChange_39; }
	inline void set_onChange_39(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * value)
	{
		___onChange_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_39), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_40() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onUpdate_40)); }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * get_onUpdate_40() const { return ___onUpdate_40; }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** get_address_of_onUpdate_40() { return &___onUpdate_40; }
	inline void set_onUpdate_40(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * value)
	{
		___onUpdate_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_40), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_41() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onTrackingChanged_41)); }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * get_onTrackingChanged_41() const { return ___onTrackingChanged_41; }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** get_address_of_onTrackingChanged_41() { return &___onTrackingChanged_41; }
	inline void set_onTrackingChanged_41(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * value)
	{
		___onTrackingChanged_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_41), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_42() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onValidPoseChanged_42)); }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * get_onValidPoseChanged_42() const { return ___onValidPoseChanged_42; }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** get_address_of_onValidPoseChanged_42() { return &___onValidPoseChanged_42; }
	inline void set_onValidPoseChanged_42(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * value)
	{
		___onValidPoseChanged_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_42), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_43() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onDeviceConnectedChanged_43)); }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * get_onDeviceConnectedChanged_43() const { return ___onDeviceConnectedChanged_43; }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** get_address_of_onDeviceConnectedChanged_43() { return &___onDeviceConnectedChanged_43; }
	inline void set_onDeviceConnectedChanged_43(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * value)
	{
		___onDeviceConnectedChanged_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CbonePositionsU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CbonePositionsU3Ek__BackingField_44)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CbonePositionsU3Ek__BackingField_44() const { return ___U3CbonePositionsU3Ek__BackingField_44; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CbonePositionsU3Ek__BackingField_44() { return &___U3CbonePositionsU3Ek__BackingField_44; }
	inline void set_U3CbonePositionsU3Ek__BackingField_44(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CbonePositionsU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CbonePositionsU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CboneRotationsU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CboneRotationsU3Ek__BackingField_45)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3CboneRotationsU3Ek__BackingField_45() const { return ___U3CboneRotationsU3Ek__BackingField_45; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3CboneRotationsU3Ek__BackingField_45() { return &___U3CboneRotationsU3Ek__BackingField_45; }
	inline void set_U3CboneRotationsU3Ek__BackingField_45(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3CboneRotationsU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CboneRotationsU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBonePositionsU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBonePositionsU3Ek__BackingField_46)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3ClastBonePositionsU3Ek__BackingField_46() const { return ___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3ClastBonePositionsU3Ek__BackingField_46() { return &___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline void set_U3ClastBonePositionsU3Ek__BackingField_46(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3ClastBonePositionsU3Ek__BackingField_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBonePositionsU3Ek__BackingField_46), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBoneRotationsU3Ek__BackingField_47)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3ClastBoneRotationsU3Ek__BackingField_47() const { return ___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return &___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline void set_U3ClastBoneRotationsU3Ek__BackingField_47(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3ClastBoneRotationsU3Ek__BackingField_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBoneRotationsU3Ek__BackingField_47), (void*)value);
	}

	inline static int32_t get_offset_of_U3CrangeOfMotionU3Ek__BackingField_48() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CrangeOfMotionU3Ek__BackingField_48)); }
	inline int32_t get_U3CrangeOfMotionU3Ek__BackingField_48() const { return ___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline int32_t* get_address_of_U3CrangeOfMotionU3Ek__BackingField_48() { return &___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline void set_U3CrangeOfMotionU3Ek__BackingField_48(int32_t value)
	{
		___U3CrangeOfMotionU3Ek__BackingField_48 = value;
	}

	inline static int32_t get_offset_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CskeletalTransformSpaceU3Ek__BackingField_49)); }
	inline int32_t get_U3CskeletalTransformSpaceU3Ek__BackingField_49() const { return ___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline int32_t* get_address_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return &___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline void set_U3CskeletalTransformSpaceU3Ek__BackingField_49(int32_t value)
	{
		___U3CskeletalTransformSpaceU3Ek__BackingField_49 = value;
	}

	inline static int32_t get_offset_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CsummaryDataTypeU3Ek__BackingField_50)); }
	inline int32_t get_U3CsummaryDataTypeU3Ek__BackingField_50() const { return ___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline int32_t* get_address_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return &___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline void set_U3CsummaryDataTypeU3Ek__BackingField_50(int32_t value)
	{
		___U3CsummaryDataTypeU3Ek__BackingField_50 = value;
	}

	inline static int32_t get_offset_of_U3CfingerCurlsU3Ek__BackingField_51() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerCurlsU3Ek__BackingField_51)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerCurlsU3Ek__BackingField_51() const { return ___U3CfingerCurlsU3Ek__BackingField_51; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerCurlsU3Ek__BackingField_51() { return &___U3CfingerCurlsU3Ek__BackingField_51; }
	inline void set_U3CfingerCurlsU3Ek__BackingField_51(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerCurlsU3Ek__BackingField_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerCurlsU3Ek__BackingField_51), (void*)value);
	}

	inline static int32_t get_offset_of_U3CfingerSplaysU3Ek__BackingField_52() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerSplaysU3Ek__BackingField_52)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerSplaysU3Ek__BackingField_52() const { return ___U3CfingerSplaysU3Ek__BackingField_52; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerSplaysU3Ek__BackingField_52() { return &___U3CfingerSplaysU3Ek__BackingField_52; }
	inline void set_U3CfingerSplaysU3Ek__BackingField_52(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerSplaysU3Ek__BackingField_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerSplaysU3Ek__BackingField_52), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerCurlsU3Ek__BackingField_53)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerCurlsU3Ek__BackingField_53() const { return ___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return &___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline void set_U3ClastFingerCurlsU3Ek__BackingField_53(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerCurlsU3Ek__BackingField_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerCurlsU3Ek__BackingField_53), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerSplaysU3Ek__BackingField_54)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerSplaysU3Ek__BackingField_54() const { return ___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return &___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline void set_U3ClastFingerSplaysU3Ek__BackingField_54(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerSplaysU3Ek__BackingField_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerSplaysU3Ek__BackingField_54), (void*)value);
	}

	inline static int32_t get_offset_of_U3CposeChangedU3Ek__BackingField_55() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CposeChangedU3Ek__BackingField_55)); }
	inline bool get_U3CposeChangedU3Ek__BackingField_55() const { return ___U3CposeChangedU3Ek__BackingField_55; }
	inline bool* get_address_of_U3CposeChangedU3Ek__BackingField_55() { return &___U3CposeChangedU3Ek__BackingField_55; }
	inline void set_U3CposeChangedU3Ek__BackingField_55(bool value)
	{
		___U3CposeChangedU3Ek__BackingField_55 = value;
	}

	inline static int32_t get_offset_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56)); }
	inline bool get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() const { return ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline bool* get_address_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return &___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline void set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(bool value)
	{
		___U3ConlyUpdateSummaryDataU3Ek__BackingField_56 = value;
	}

	inline static int32_t get_offset_of_skeletalSummaryData_57() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletalSummaryData_57)); }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  get_skeletalSummaryData_57() const { return ___skeletalSummaryData_57; }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * get_address_of_skeletalSummaryData_57() { return &___skeletalSummaryData_57; }
	inline void set_skeletalSummaryData_57(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  value)
	{
		___skeletalSummaryData_57 = value;
	}

	inline static int32_t get_offset_of_lastSkeletalSummaryData_58() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletalSummaryData_58)); }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  get_lastSkeletalSummaryData_58() const { return ___lastSkeletalSummaryData_58; }
	inline VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * get_address_of_lastSkeletalSummaryData_58() { return &___lastSkeletalSummaryData_58; }
	inline void set_lastSkeletalSummaryData_58(VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  value)
	{
		___lastSkeletalSummaryData_58 = value;
	}

	inline static int32_t get_offset_of_skeletonAction_59() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonAction_59)); }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * get_skeletonAction_59() const { return ___skeletonAction_59; }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** get_address_of_skeletonAction_59() { return &___skeletonAction_59; }
	inline void set_skeletonAction_59(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		___skeletonAction_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonAction_59), (void*)value);
	}

	inline static int32_t get_offset_of_tempBoneTransforms_60() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempBoneTransforms_60)); }
	inline VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* get_tempBoneTransforms_60() const { return ___tempBoneTransforms_60; }
	inline VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B** get_address_of_tempBoneTransforms_60() { return &___tempBoneTransforms_60; }
	inline void set_tempBoneTransforms_60(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* value)
	{
		___tempBoneTransforms_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tempBoneTransforms_60), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonActionData_61() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonActionData_61)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_skeletonActionData_61() const { return ___skeletonActionData_61; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_skeletonActionData_61() { return &___skeletonActionData_61; }
	inline void set_skeletonActionData_61(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___skeletonActionData_61 = value;
	}

	inline static int32_t get_offset_of_lastSkeletonActionData_62() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletonActionData_62)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_lastSkeletonActionData_62() const { return ___lastSkeletonActionData_62; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_lastSkeletonActionData_62() { return &___lastSkeletonActionData_62; }
	inline void set_lastSkeletonActionData_62(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___lastSkeletonActionData_62 = value;
	}

	inline static int32_t get_offset_of_tempSkeletonActionData_63() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempSkeletonActionData_63)); }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  get_tempSkeletonActionData_63() const { return ___tempSkeletonActionData_63; }
	inline InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * get_address_of_tempSkeletonActionData_63() { return &___tempSkeletonActionData_63; }
	inline void set_tempSkeletonActionData_63(InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  value)
	{
		___tempSkeletonActionData_63 = value;
	}
};

struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData_size
	uint32_t ___skeletonActionData_size_36;

public:
	inline static int32_t get_offset_of_skeletonActionData_size_36() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields, ___skeletonActionData_size_36)); }
	inline uint32_t get_skeletonActionData_size_36() const { return ___skeletonActionData_size_36; }
	inline uint32_t* get_address_of_skeletonActionData_size_36() { return &___skeletonActionData_size_36; }
	inline void set_skeletonActionData_size_36(uint32_t value)
	{
		___skeletonActionData_size_36 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct  SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3  : public SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector3_Source_Map
struct  SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95  : public SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253
{
public:

public:
};


// Valve.VR.SteamVR_ActivateActionSetOnLoad
struct  SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_ActivateActionSetOnLoad::actionSet
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___actionSet_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_ActivateActionSetOnLoad::forSources
	int32_t ___forSources_5;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::disableAllOtherActionSets
	bool ___disableAllOtherActionSets_6;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::activateOnStart
	bool ___activateOnStart_7;
	// System.Boolean Valve.VR.SteamVR_ActivateActionSetOnLoad::deactivateOnDestroy
	bool ___deactivateOnDestroy_8;

public:
	inline static int32_t get_offset_of_actionSet_4() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___actionSet_4)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_actionSet_4() const { return ___actionSet_4; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_actionSet_4() { return &___actionSet_4; }
	inline void set_actionSet_4(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___actionSet_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSet_4), (void*)value);
	}

	inline static int32_t get_offset_of_forSources_5() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___forSources_5)); }
	inline int32_t get_forSources_5() const { return ___forSources_5; }
	inline int32_t* get_address_of_forSources_5() { return &___forSources_5; }
	inline void set_forSources_5(int32_t value)
	{
		___forSources_5 = value;
	}

	inline static int32_t get_offset_of_disableAllOtherActionSets_6() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___disableAllOtherActionSets_6)); }
	inline bool get_disableAllOtherActionSets_6() const { return ___disableAllOtherActionSets_6; }
	inline bool* get_address_of_disableAllOtherActionSets_6() { return &___disableAllOtherActionSets_6; }
	inline void set_disableAllOtherActionSets_6(bool value)
	{
		___disableAllOtherActionSets_6 = value;
	}

	inline static int32_t get_offset_of_activateOnStart_7() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___activateOnStart_7)); }
	inline bool get_activateOnStart_7() const { return ___activateOnStart_7; }
	inline bool* get_address_of_activateOnStart_7() { return &___activateOnStart_7; }
	inline void set_activateOnStart_7(bool value)
	{
		___activateOnStart_7 = value;
	}

	inline static int32_t get_offset_of_deactivateOnDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7, ___deactivateOnDestroy_8)); }
	inline bool get_deactivateOnDestroy_8() const { return ___deactivateOnDestroy_8; }
	inline bool* get_address_of_deactivateOnDestroy_8() { return &___deactivateOnDestroy_8; }
	inline void set_deactivateOnDestroy_8(bool value)
	{
		___deactivateOnDestroy_8 = value;
	}
};


// Valve.VR.SteamVR_Behaviour
struct  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializeSteamVROnAwake
	bool ___initializeSteamVROnAwake_7;
	// System.Boolean Valve.VR.SteamVR_Behaviour::doNotDestroy
	bool ___doNotDestroy_8;
	// Valve.VR.SteamVR_Render Valve.VR.SteamVR_Behaviour::steamvr_render
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * ___steamvr_render_9;
	// UnityEngine.Coroutine Valve.VR.SteamVR_Behaviour::initializeCoroutine
	Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___initializeCoroutine_12;
	// System.Boolean Valve.VR.SteamVR_Behaviour::loadedOpenVRDeviceSuccess
	bool ___loadedOpenVRDeviceSuccess_13;

public:
	inline static int32_t get_offset_of_initializeSteamVROnAwake_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeSteamVROnAwake_7)); }
	inline bool get_initializeSteamVROnAwake_7() const { return ___initializeSteamVROnAwake_7; }
	inline bool* get_address_of_initializeSteamVROnAwake_7() { return &___initializeSteamVROnAwake_7; }
	inline void set_initializeSteamVROnAwake_7(bool value)
	{
		___initializeSteamVROnAwake_7 = value;
	}

	inline static int32_t get_offset_of_doNotDestroy_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___doNotDestroy_8)); }
	inline bool get_doNotDestroy_8() const { return ___doNotDestroy_8; }
	inline bool* get_address_of_doNotDestroy_8() { return &___doNotDestroy_8; }
	inline void set_doNotDestroy_8(bool value)
	{
		___doNotDestroy_8 = value;
	}

	inline static int32_t get_offset_of_steamvr_render_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___steamvr_render_9)); }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * get_steamvr_render_9() const { return ___steamvr_render_9; }
	inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 ** get_address_of_steamvr_render_9() { return &___steamvr_render_9; }
	inline void set_steamvr_render_9(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * value)
	{
		___steamvr_render_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___steamvr_render_9), (void*)value);
	}

	inline static int32_t get_offset_of_initializeCoroutine_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___initializeCoroutine_12)); }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * get_initializeCoroutine_12() const { return ___initializeCoroutine_12; }
	inline Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC ** get_address_of_initializeCoroutine_12() { return &___initializeCoroutine_12; }
	inline void set_initializeCoroutine_12(Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * value)
	{
		___initializeCoroutine_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___initializeCoroutine_12), (void*)value);
	}

	inline static int32_t get_offset_of_loadedOpenVRDeviceSuccess_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586, ___loadedOpenVRDeviceSuccess_13)); }
	inline bool get_loadedOpenVRDeviceSuccess_13() const { return ___loadedOpenVRDeviceSuccess_13; }
	inline bool* get_address_of_loadedOpenVRDeviceSuccess_13() { return &___loadedOpenVRDeviceSuccess_13; }
	inline void set_loadedOpenVRDeviceSuccess_13(bool value)
	{
		___loadedOpenVRDeviceSuccess_13 = value;
	}
};

struct SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Behaviour::forcingInitialization
	bool ___forcingInitialization_5;
	// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::_instance
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * ____instance_6;
	// System.Boolean Valve.VR.SteamVR_Behaviour::isPlaying
	bool ___isPlaying_10;
	// System.Boolean Valve.VR.SteamVR_Behaviour::initializing
	bool ___initializing_11;
	// System.Int32 Valve.VR.SteamVR_Behaviour::lastFrameCount
	int32_t ___lastFrameCount_14;

public:
	inline static int32_t get_offset_of_forcingInitialization_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___forcingInitialization_5)); }
	inline bool get_forcingInitialization_5() const { return ___forcingInitialization_5; }
	inline bool* get_address_of_forcingInitialization_5() { return &___forcingInitialization_5; }
	inline void set_forcingInitialization_5(bool value)
	{
		___forcingInitialization_5 = value;
	}

	inline static int32_t get_offset_of__instance_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ____instance_6)); }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * get__instance_6() const { return ____instance_6; }
	inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 ** get_address_of__instance_6() { return &____instance_6; }
	inline void set__instance_6(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * value)
	{
		____instance_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____instance_6), (void*)value);
	}

	inline static int32_t get_offset_of_isPlaying_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___isPlaying_10)); }
	inline bool get_isPlaying_10() const { return ___isPlaying_10; }
	inline bool* get_address_of_isPlaying_10() { return &___isPlaying_10; }
	inline void set_isPlaying_10(bool value)
	{
		___isPlaying_10 = value;
	}

	inline static int32_t get_offset_of_initializing_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___initializing_11)); }
	inline bool get_initializing_11() const { return ___initializing_11; }
	inline bool* get_address_of_initializing_11() { return &___initializing_11; }
	inline void set_initializing_11(bool value)
	{
		___initializing_11 = value;
	}

	inline static int32_t get_offset_of_lastFrameCount_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields, ___lastFrameCount_14)); }
	inline int32_t get_lastFrameCount_14() const { return ___lastFrameCount_14; }
	inline int32_t* get_address_of_lastFrameCount_14() { return &___lastFrameCount_14; }
	inline void set_lastFrameCount_14(int32_t value)
	{
		___lastFrameCount_14 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Boolean
struct  SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Behaviour_Boolean::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Boolean::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onChange
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler Valve.VR.SteamVR_Behaviour_Boolean::onChangeEvent
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___onChangeEvent_7;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onUpdate
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onUpdate_8;
	// Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler Valve.VR.SteamVR_Behaviour_Boolean::onUpdateEvent
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___onUpdateEvent_9;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPress
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPress_10;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressEvent
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___onPressEvent_11;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressDown
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressDown_12;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressDownEvent
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___onPressDownEvent_13;
	// Valve.VR.SteamVR_Behaviour_BooleanEvent Valve.VR.SteamVR_Behaviour_Boolean::onPressUp
	SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * ___onPressUp_14;
	// Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler Valve.VR.SteamVR_Behaviour_Boolean::onPressUpEvent
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___onPressUpEvent_15;

public:
	inline static int32_t get_offset_of_booleanAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___booleanAction_4)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_4() const { return ___booleanAction_4; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_4() { return &___booleanAction_4; }
	inline void set_booleanAction_4(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChange_6)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onChangeEvent_7)); }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * get_onChangeEvent_7() const { return ___onChangeEvent_7; }
	inline ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** get_address_of_onChangeEvent_7() { return &___onChangeEvent_7; }
	inline void set_onChangeEvent_7(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * value)
	{
		___onChangeEvent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_7), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdate_8)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onUpdate_8() const { return ___onUpdate_8; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onUpdate_8() { return &___onUpdate_8; }
	inline void set_onUpdate_8(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onUpdate_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_8), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onUpdateEvent_9)); }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * get_onUpdateEvent_9() const { return ___onUpdateEvent_9; }
	inline UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** get_address_of_onUpdateEvent_9() { return &___onUpdateEvent_9; }
	inline void set_onUpdateEvent_9(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * value)
	{
		___onUpdateEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onPress_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPress_10)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPress_10() const { return ___onPress_10; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPress_10() { return &___onPress_10; }
	inline void set_onPress_10(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPress_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPress_10), (void*)value);
	}

	inline static int32_t get_offset_of_onPressEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressEvent_11)); }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * get_onPressEvent_11() const { return ___onPressEvent_11; }
	inline StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** get_address_of_onPressEvent_11() { return &___onPressEvent_11; }
	inline void set_onPressEvent_11(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * value)
	{
		___onPressEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressEvent_11), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDown_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDown_12)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressDown_12() const { return ___onPressDown_12; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressDown_12() { return &___onPressDown_12; }
	inline void set_onPressDown_12(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressDown_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDown_12), (void*)value);
	}

	inline static int32_t get_offset_of_onPressDownEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressDownEvent_13)); }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * get_onPressDownEvent_13() const { return ___onPressDownEvent_13; }
	inline StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** get_address_of_onPressDownEvent_13() { return &___onPressDownEvent_13; }
	inline void set_onPressDownEvent_13(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * value)
	{
		___onPressDownEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressDownEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUp_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUp_14)); }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * get_onPressUp_14() const { return ___onPressUp_14; }
	inline SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 ** get_address_of_onPressUp_14() { return &___onPressUp_14; }
	inline void set_onPressUp_14(SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * value)
	{
		___onPressUp_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUp_14), (void*)value);
	}

	inline static int32_t get_offset_of_onPressUpEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00, ___onPressUpEvent_15)); }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * get_onPressUpEvent_15() const { return ___onPressUpEvent_15; }
	inline StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** get_address_of_onPressUpEvent_15() { return &___onPressUpEvent_15; }
	inline void set_onPressUpEvent_15(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * value)
	{
		___onPressUpEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPressUpEvent_15), (void*)value);
	}
};


// Valve.VR.SteamVR_Behaviour_Pose
struct  SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Behaviour_Pose::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Pose::inputSource
	int32_t ___inputSource_5;
	// UnityEngine.Transform Valve.VR.SteamVR_Behaviour_Pose::origin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___origin_6;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdated
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformUpdated_7;
	// Valve.VR.SteamVR_Behaviour_PoseEvent Valve.VR.SteamVR_Behaviour_Pose::onTransformChanged
	SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * ___onTransformChanged_8;
	// Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onConnectedChanged
	SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * ___onConnectedChanged_9;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onTrackingChanged
	SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * ___onTrackingChanged_10;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChanged
	SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * ___onDeviceIndexChanged_11;
	// Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformUpdatedEvent
	UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * ___onTransformUpdatedEvent_12;
	// Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTransformChangedEvent
	ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * ___onTransformChangedEvent_13;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onConnectedChangedEvent
	DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * ___onConnectedChangedEvent_14;
	// Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler Valve.VR.SteamVR_Behaviour_Pose::onTrackingChangedEvent
	TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * ___onTrackingChangedEvent_15;
	// Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler Valve.VR.SteamVR_Behaviour_Pose::onDeviceIndexChangedEvent
	DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * ___onDeviceIndexChangedEvent_16;
	// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::broadcastDeviceChanges
	bool ___broadcastDeviceChanges_17;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::deviceIndex
	int32_t ___deviceIndex_18;
	// Valve.VR.SteamVR_HistoryBuffer Valve.VR.SteamVR_Behaviour_Pose::historyBuffer
	SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * ___historyBuffer_19;
	// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::lastFrameUpdated
	int32_t ___lastFrameUpdated_20;

public:
	inline static int32_t get_offset_of_poseAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___poseAction_4)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_4() const { return ___poseAction_4; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_4() { return &___poseAction_4; }
	inline void set_poseAction_4(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_origin_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___origin_6)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_origin_6() const { return ___origin_6; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_origin_6() { return &___origin_6; }
	inline void set_origin_6(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___origin_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___origin_6), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdated_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdated_7)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformUpdated_7() const { return ___onTransformUpdated_7; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformUpdated_7() { return &___onTransformUpdated_7; }
	inline void set_onTransformUpdated_7(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformUpdated_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdated_7), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChanged_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChanged_8)); }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * get_onTransformChanged_8() const { return ___onTransformChanged_8; }
	inline SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 ** get_address_of_onTransformChanged_8() { return &___onTransformChanged_8; }
	inline void set_onTransformChanged_8(SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * value)
	{
		___onTransformChanged_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChanged_8), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChanged_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChanged_9)); }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * get_onConnectedChanged_9() const { return ___onConnectedChanged_9; }
	inline SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 ** get_address_of_onConnectedChanged_9() { return &___onConnectedChanged_9; }
	inline void set_onConnectedChanged_9(SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * value)
	{
		___onConnectedChanged_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChanged_9), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChanged_10)); }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * get_onTrackingChanged_10() const { return ___onTrackingChanged_10; }
	inline SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E ** get_address_of_onTrackingChanged_10() { return &___onTrackingChanged_10; }
	inline void set_onTrackingChanged_10(SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * value)
	{
		___onTrackingChanged_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_10), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChanged_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChanged_11)); }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * get_onDeviceIndexChanged_11() const { return ___onDeviceIndexChanged_11; }
	inline SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 ** get_address_of_onDeviceIndexChanged_11() { return &___onDeviceIndexChanged_11; }
	inline void set_onDeviceIndexChanged_11(SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * value)
	{
		___onDeviceIndexChanged_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChanged_11), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformUpdatedEvent_12() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformUpdatedEvent_12)); }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * get_onTransformUpdatedEvent_12() const { return ___onTransformUpdatedEvent_12; }
	inline UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D ** get_address_of_onTransformUpdatedEvent_12() { return &___onTransformUpdatedEvent_12; }
	inline void set_onTransformUpdatedEvent_12(UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * value)
	{
		___onTransformUpdatedEvent_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformUpdatedEvent_12), (void*)value);
	}

	inline static int32_t get_offset_of_onTransformChangedEvent_13() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTransformChangedEvent_13)); }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * get_onTransformChangedEvent_13() const { return ___onTransformChangedEvent_13; }
	inline ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 ** get_address_of_onTransformChangedEvent_13() { return &___onTransformChangedEvent_13; }
	inline void set_onTransformChangedEvent_13(ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * value)
	{
		___onTransformChangedEvent_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTransformChangedEvent_13), (void*)value);
	}

	inline static int32_t get_offset_of_onConnectedChangedEvent_14() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onConnectedChangedEvent_14)); }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * get_onConnectedChangedEvent_14() const { return ___onConnectedChangedEvent_14; }
	inline DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB ** get_address_of_onConnectedChangedEvent_14() { return &___onConnectedChangedEvent_14; }
	inline void set_onConnectedChangedEvent_14(DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * value)
	{
		___onConnectedChangedEvent_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onConnectedChangedEvent_14), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChangedEvent_15() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onTrackingChangedEvent_15)); }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * get_onTrackingChangedEvent_15() const { return ___onTrackingChangedEvent_15; }
	inline TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 ** get_address_of_onTrackingChangedEvent_15() { return &___onTrackingChangedEvent_15; }
	inline void set_onTrackingChangedEvent_15(TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * value)
	{
		___onTrackingChangedEvent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChangedEvent_15), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceIndexChangedEvent_16() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___onDeviceIndexChangedEvent_16)); }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * get_onDeviceIndexChangedEvent_16() const { return ___onDeviceIndexChangedEvent_16; }
	inline DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 ** get_address_of_onDeviceIndexChangedEvent_16() { return &___onDeviceIndexChangedEvent_16; }
	inline void set_onDeviceIndexChangedEvent_16(DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * value)
	{
		___onDeviceIndexChangedEvent_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceIndexChangedEvent_16), (void*)value);
	}

	inline static int32_t get_offset_of_broadcastDeviceChanges_17() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___broadcastDeviceChanges_17)); }
	inline bool get_broadcastDeviceChanges_17() const { return ___broadcastDeviceChanges_17; }
	inline bool* get_address_of_broadcastDeviceChanges_17() { return &___broadcastDeviceChanges_17; }
	inline void set_broadcastDeviceChanges_17(bool value)
	{
		___broadcastDeviceChanges_17 = value;
	}

	inline static int32_t get_offset_of_deviceIndex_18() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___deviceIndex_18)); }
	inline int32_t get_deviceIndex_18() const { return ___deviceIndex_18; }
	inline int32_t* get_address_of_deviceIndex_18() { return &___deviceIndex_18; }
	inline void set_deviceIndex_18(int32_t value)
	{
		___deviceIndex_18 = value;
	}

	inline static int32_t get_offset_of_historyBuffer_19() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___historyBuffer_19)); }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * get_historyBuffer_19() const { return ___historyBuffer_19; }
	inline SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 ** get_address_of_historyBuffer_19() { return &___historyBuffer_19; }
	inline void set_historyBuffer_19(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * value)
	{
		___historyBuffer_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___historyBuffer_19), (void*)value);
	}

	inline static int32_t get_offset_of_lastFrameUpdated_20() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787, ___lastFrameUpdated_20)); }
	inline int32_t get_lastFrameUpdated_20() const { return ___lastFrameUpdated_20; }
	inline int32_t* get_address_of_lastFrameUpdated_20() { return &___lastFrameUpdated_20; }
	inline void set_lastFrameUpdated_20(int32_t value)
	{
		___lastFrameUpdated_20 = value;
	}
};


// Valve.VR.SteamVR_Behaviour_Single
struct  SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Behaviour_Single::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_4;
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Behaviour_Single::inputSource
	int32_t ___inputSource_5;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onChange
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onChange_6;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onUpdate
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onUpdate_7;
	// Valve.VR.SteamVR_Behaviour_SingleEvent Valve.VR.SteamVR_Behaviour_Single::onAxis
	SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * ___onAxis_8;
	// Valve.VR.SteamVR_Behaviour_Single_ChangeHandler Valve.VR.SteamVR_Behaviour_Single::onChangeEvent
	ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * ___onChangeEvent_9;
	// Valve.VR.SteamVR_Behaviour_Single_UpdateHandler Valve.VR.SteamVR_Behaviour_Single::onUpdateEvent
	UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * ___onUpdateEvent_10;
	// Valve.VR.SteamVR_Behaviour_Single_AxisHandler Valve.VR.SteamVR_Behaviour_Single::onAxisEvent
	AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * ___onAxisEvent_11;

public:
	inline static int32_t get_offset_of_singleAction_4() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___singleAction_4)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_4() const { return ___singleAction_4; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_4() { return &___singleAction_4; }
	inline void set_singleAction_4(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_4), (void*)value);
	}

	inline static int32_t get_offset_of_inputSource_5() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___inputSource_5)); }
	inline int32_t get_inputSource_5() const { return ___inputSource_5; }
	inline int32_t* get_address_of_inputSource_5() { return &___inputSource_5; }
	inline void set_inputSource_5(int32_t value)
	{
		___inputSource_5 = value;
	}

	inline static int32_t get_offset_of_onChange_6() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChange_6)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onChange_6() const { return ___onChange_6; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onChange_6() { return &___onChange_6; }
	inline void set_onChange_6(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onChange_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_6), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_7() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdate_7)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onUpdate_7() const { return ___onUpdate_7; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onUpdate_7() { return &___onUpdate_7; }
	inline void set_onUpdate_7(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onUpdate_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_7), (void*)value);
	}

	inline static int32_t get_offset_of_onAxis_8() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxis_8)); }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * get_onAxis_8() const { return ___onAxis_8; }
	inline SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 ** get_address_of_onAxis_8() { return &___onAxis_8; }
	inline void set_onAxis_8(SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * value)
	{
		___onAxis_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_8), (void*)value);
	}

	inline static int32_t get_offset_of_onChangeEvent_9() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onChangeEvent_9)); }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * get_onChangeEvent_9() const { return ___onChangeEvent_9; }
	inline ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 ** get_address_of_onChangeEvent_9() { return &___onChangeEvent_9; }
	inline void set_onChangeEvent_9(ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * value)
	{
		___onChangeEvent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChangeEvent_9), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdateEvent_10() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onUpdateEvent_10)); }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * get_onUpdateEvent_10() const { return ___onUpdateEvent_10; }
	inline UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 ** get_address_of_onUpdateEvent_10() { return &___onUpdateEvent_10; }
	inline void set_onUpdateEvent_10(UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * value)
	{
		___onUpdateEvent_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdateEvent_10), (void*)value);
	}

	inline static int32_t get_offset_of_onAxisEvent_11() { return static_cast<int32_t>(offsetof(SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562, ___onAxisEvent_11)); }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * get_onAxisEvent_11() const { return ___onAxisEvent_11; }
	inline AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C ** get_address_of_onAxisEvent_11() { return &___onAxisEvent_11; }
	inline void set_onAxisEvent_11(AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * value)
	{
		___onAxisEvent_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxisEvent_11), (void*)value);
	}
};


// Valve.VR.SteamVR_Render
struct  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Valve.VR.SteamVR_ExternalCamera Valve.VR.SteamVR_Render::externalCamera
	SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * ___externalCamera_4;
	// System.String Valve.VR.SteamVR_Render::externalCameraConfigPath
	String_t* ___externalCameraConfigPath_5;
	// Valve.VR.SteamVR_Camera[] Valve.VR.SteamVR_Render::cameras
	SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* ___cameras_8;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::poses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___poses_9;
	// Valve.VR.TrackedDevicePose_t[] Valve.VR.SteamVR_Render::gamePoses
	TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* ___gamePoses_10;
	// UnityEngine.WaitForEndOfFrame Valve.VR.SteamVR_Render::waitForEndOfFrame
	WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * ___waitForEndOfFrame_12;
	// System.Nullable`1<System.Boolean> Valve.VR.SteamVR_Render::doesPathExist
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___doesPathExist_13;
	// System.Single Valve.VR.SteamVR_Render::sceneResolutionScale
	float ___sceneResolutionScale_14;
	// System.Single Valve.VR.SteamVR_Render::timeScale
	float ___timeScale_15;
	// Valve.VR.EVRScreenshotType[] Valve.VR.SteamVR_Render::screenshotTypes
	EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___screenshotTypes_16;

public:
	inline static int32_t get_offset_of_externalCamera_4() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCamera_4)); }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * get_externalCamera_4() const { return ___externalCamera_4; }
	inline SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D ** get_address_of_externalCamera_4() { return &___externalCamera_4; }
	inline void set_externalCamera_4(SteamVR_ExternalCamera_t249B349C10D9088DD9D5D9E76A6CC9A32449C53D * value)
	{
		___externalCamera_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCamera_4), (void*)value);
	}

	inline static int32_t get_offset_of_externalCameraConfigPath_5() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___externalCameraConfigPath_5)); }
	inline String_t* get_externalCameraConfigPath_5() const { return ___externalCameraConfigPath_5; }
	inline String_t** get_address_of_externalCameraConfigPath_5() { return &___externalCameraConfigPath_5; }
	inline void set_externalCameraConfigPath_5(String_t* value)
	{
		___externalCameraConfigPath_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___externalCameraConfigPath_5), (void*)value);
	}

	inline static int32_t get_offset_of_cameras_8() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___cameras_8)); }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* get_cameras_8() const { return ___cameras_8; }
	inline SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3** get_address_of_cameras_8() { return &___cameras_8; }
	inline void set_cameras_8(SteamVR_CameraU5BU5D_tBBE78FA1F1681E27DDA1D64FF5A36D81E5927DA3* value)
	{
		___cameras_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cameras_8), (void*)value);
	}

	inline static int32_t get_offset_of_poses_9() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___poses_9)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_poses_9() const { return ___poses_9; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_poses_9() { return &___poses_9; }
	inline void set_poses_9(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___poses_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poses_9), (void*)value);
	}

	inline static int32_t get_offset_of_gamePoses_10() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___gamePoses_10)); }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* get_gamePoses_10() const { return ___gamePoses_10; }
	inline TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196** get_address_of_gamePoses_10() { return &___gamePoses_10; }
	inline void set_gamePoses_10(TrackedDevicePose_tU5BU5D_tF02F8D07A99963B656F6262B11E24ECF9747D196* value)
	{
		___gamePoses_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gamePoses_10), (void*)value);
	}

	inline static int32_t get_offset_of_waitForEndOfFrame_12() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___waitForEndOfFrame_12)); }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * get_waitForEndOfFrame_12() const { return ___waitForEndOfFrame_12; }
	inline WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA ** get_address_of_waitForEndOfFrame_12() { return &___waitForEndOfFrame_12; }
	inline void set_waitForEndOfFrame_12(WaitForEndOfFrame_t75980FB3F246D6AD36A85CA2BFDF8474E5EEBCCA * value)
	{
		___waitForEndOfFrame_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___waitForEndOfFrame_12), (void*)value);
	}

	inline static int32_t get_offset_of_doesPathExist_13() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___doesPathExist_13)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_doesPathExist_13() const { return ___doesPathExist_13; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_doesPathExist_13() { return &___doesPathExist_13; }
	inline void set_doesPathExist_13(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___doesPathExist_13 = value;
	}

	inline static int32_t get_offset_of_sceneResolutionScale_14() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___sceneResolutionScale_14)); }
	inline float get_sceneResolutionScale_14() const { return ___sceneResolutionScale_14; }
	inline float* get_address_of_sceneResolutionScale_14() { return &___sceneResolutionScale_14; }
	inline void set_sceneResolutionScale_14(float value)
	{
		___sceneResolutionScale_14 = value;
	}

	inline static int32_t get_offset_of_timeScale_15() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___timeScale_15)); }
	inline float get_timeScale_15() const { return ___timeScale_15; }
	inline float* get_address_of_timeScale_15() { return &___timeScale_15; }
	inline void set_timeScale_15(float value)
	{
		___timeScale_15 = value;
	}

	inline static int32_t get_offset_of_screenshotTypes_16() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665, ___screenshotTypes_16)); }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* get_screenshotTypes_16() const { return ___screenshotTypes_16; }
	inline EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E** get_address_of_screenshotTypes_16() { return &___screenshotTypes_16; }
	inline void set_screenshotTypes_16(EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* value)
	{
		___screenshotTypes_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___screenshotTypes_16), (void*)value);
	}
};

struct SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields
{
public:
	// Valve.VR.EVREye Valve.VR.SteamVR_Render::<eye>k__BackingField
	int32_t ___U3CeyeU3Ek__BackingField_6;
	// System.Boolean Valve.VR.SteamVR_Render::isQuitting
	bool ___isQuitting_7;
	// System.Boolean Valve.VR.SteamVR_Render::_pauseRendering
	bool ____pauseRendering_11;

public:
	inline static int32_t get_offset_of_U3CeyeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___U3CeyeU3Ek__BackingField_6)); }
	inline int32_t get_U3CeyeU3Ek__BackingField_6() const { return ___U3CeyeU3Ek__BackingField_6; }
	inline int32_t* get_address_of_U3CeyeU3Ek__BackingField_6() { return &___U3CeyeU3Ek__BackingField_6; }
	inline void set_U3CeyeU3Ek__BackingField_6(int32_t value)
	{
		___U3CeyeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_isQuitting_7() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ___isQuitting_7)); }
	inline bool get_isQuitting_7() const { return ___isQuitting_7; }
	inline bool* get_address_of_isQuitting_7() { return &___isQuitting_7; }
	inline void set_isQuitting_7(bool value)
	{
		___isQuitting_7 = value;
	}

	inline static int32_t get_offset_of__pauseRendering_11() { return static_cast<int32_t>(offsetof(SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_StaticFields, ____pauseRendering_11)); }
	inline bool get__pauseRendering_11() const { return ____pauseRendering_11; }
	inline bool* get_address_of__pauseRendering_11() { return &____pauseRendering_11; }
	inline void set__pauseRendering_11(bool value)
	{
		____pauseRendering_11 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct  SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB  : public SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  m_Items[1];

public:
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// SteamVR_Utils_RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  m_Items[1];

public:
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  m_Items[1];

public:
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, VRBoneTransform_t_t27C47AE5EA1D078A6DAC070DD9155EEC35F95AD9  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * m_Items[1];

public:
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Action_Vibration_Source[]
struct SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * m_Items[1];

public:
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared (SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::get_Item(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared (SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2__ctor_m15192F31C4B54121755BF28201D51E0616710270_gshared (SteamVR_Action_Pose_Base_2_tE4721EEBBC945BAAF6FF57A49BF6EB4ACDB13900 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2_UpdateTransform_mE9D3E5DFD2370F00E7287783C9B240C1796C6071_gshared (SteamVR_Action_Pose_Base_2_tE4721EEBBC945BAAF6FF57A49BF6EB4ACDB13900 * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<System.Object,System.Object>::InitAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared (SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Map_1__ctor_mBB8E245C3E0BAADAA79082AA6FC40445EBC7C41E_gshared (SteamVR_Action_Pose_Source_Map_1_t8D737DFC58E320B9252D6AC46CC512D3AA443163 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared (SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_2__ctor_m57D7973945ED4670545ED47E0BB47329C1939FFF_gshared (SteamVR_Action_Out_2_tBFC90712829F4A53DB24EF908459C469ADC749B7 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_1__ctor_mE8EB35AF2F507C1EA04DB21FFAE722DFE57C6B25_gshared (SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared (const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_gshared (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_gshared (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method);
// System.Void System.Action`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared (Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared (UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5 * __this, RuntimeObject * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared (SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Boolean>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared (UnityEvent_3_t4DB54CE335910AFA0DAA4CDC4D3526D8245C94D5 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_RingBuffer_1_Clear_m97C5D575D1DA014FC1A4ED823619C2067088E96D_gshared (SteamVR_RingBuffer_1_tB6FE64DC340FF76D0FDC901B5FB739DA8458EE74 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::Invoke(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2_Invoke_m8E0E3910F551485BB28258D9379D14BFAA534A22_gshared (UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F * __this, RuntimeObject * ___arg00, int32_t ___arg11, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_m5C68F6A3763AEBC706B429DECC9B41FCD30511CB_gshared (UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::Invoke(!0,!1,!2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_Invoke_mDEFB782BBAAE531C8690EF7387FD1828C15F47F0_gshared (UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988 * __this, RuntimeObject * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method);
// T Valve.VR.SteamVR_Input::GetAction<System.Object>(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Input_GetAction_TisRuntimeObject_mE125D174FCDC6B1CAA20F418BC98C485C0B184A1_gshared (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<System.Object,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2__ctor_m90C3B8ED5DA3821DD3264EEAD585A64D22D376E8_gshared (UnityEvent_2_t805AE90FB19A3B2E903161B79BBB4F2DE5ADF91F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m3F5C9C71D01617BD938DF6FCCF22F407E2F34F27_gshared (UnityEvent_3_t703D19104F53A60C2167DF1AEA02C21EB9511988 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32Enum,System.Int32Enum>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3__ctor_m37296D71FE47604FC0A25A42D39C15545FAC2598_gshared (UnityEvent_3_tC1C064339F75149418E4C62873257F468D82018A * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<System.Object,System.Int32Enum,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_4_Invoke_m52DEE454F4AD386078577AAFFFC0E09851A5AF3D_gshared (UnityEvent_4_t1F826F09136C51BFD9170BD030317255794011D6 * __this, RuntimeObject * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method);

// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_m3CF6B3F7CC98C67885A2F7915311C360B9842389 (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2 (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * (*) (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_m4DC3513C7C9507997D9D34F1A514F152B2D38CFA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m8B778606DA02C1FB1A23C1A955951094E261F2AF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Base_2__ctor_mA24A37A7DD68461F1328F541DD825CDACBAC30C5 (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2__ctor_m15192F31C4B54121755BF28201D51E0616710270_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
inline void SteamVR_Action_Pose_Base_2_UpdateTransform_mDF91BEAC2D9487D14C5D1EB34996E2C2E4F275D0 (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2_UpdateTransform_mE9D3E5DFD2370F00E7287783C9B240C1796C6071_gshared)(__this, ___inputSource0, ___transformToUpdate1, method);
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m99B705C8282316AC52EBA3A718C998FE46329E1F_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m7C48F880AFC6164499E9E23B8D1F413B4AC9A98E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m06230658C52C5E441A49AD40313C608619196B5B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mE52CDCDA31A963E723E4BDCC3F3B618FC97CBBE8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_m779E5E61A32799167B43551CB36FE864A6413868 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_m0E983BD50EB9B7AEB30874395070AE5E86C66FBB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_mEA2624540878BDB6DA6344334535F817583A97B0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_mC5FC7F51CDCC049B987DB60C5686335125255583 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m3FCE7BEB2171ACEFCFD9A0E4169AB0BAD6BFEA62 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_mCAFFCF55E8363259B27670F7193D8B85AA934BC7 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_m55C39AD1FA31B45A7C19348451F25A0488D13241 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_m400F28379D6657033E67D29F2B6376654E71440F (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m32F8B6C010E5EDEFE25465EAFCCEE7CEBBEC8F36 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m79AD5ABC922A559F034B53F25848FCCB8F80C35D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m40495088AE01BE4B8AE90499CE0A5AEC0673EB13 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_m990D77456F84B5E00C2DD1A5BEC36B915213B1FA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_m328634EB394F9D2A6370F481BC35EF947462AB2E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_m33B09DF71ADF6FF1BA42C31E2ACD6D3E5C258845 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mFD509B1C21CF79C88833690ECDB237D307AAC531 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_m00A9DB3FFD0499D982FC39500D115B4968518988_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m49C580092D3CDFD2E8D1D98D06026C2FF6F73BCA_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___positionAtTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotationAtTime2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime4, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mB8D948288CCD3A7E432C9A28508CFF40C96F85A1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Object System.Array::Clone()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176 (RuntimeArray * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m67234F0D980501AD00E029B0B30415B8F18856F9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method);
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC1F50D0ECE4C5553E8E25A7C06668558D2742620 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m6A6A69B1D61A8EB56C024FBE87D50C11A155ACE0 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_m39488C73FCFCA0C9586171A54C06F3336F9EA563 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_m3EE8FC2ECE44A16A6F103E19A42AF8A10780C9B2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOriginPart(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m18C23160315F8414CA38CA01EB2E95529802281C (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m6E2F4BC8D0DB6C17A44D1DD390933B195C8F0BE7_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m7B9C3EC1294D432EBF5834AA2FD1518F398C771B_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m04DF922F78BEB4B48C610E5263CB5A56723BFE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mAF79C76574CD9C644F280B1E5DCBF068D84C0C71_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m8A5B299B1D9CA30852BCFDF4439985C7C67607D5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mEC48DADE504DBFF9AB6B0D16ED35C39CE97F2EBD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_m87DEB2959B20AD607470B75C837EE42754040CFF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_mA14C6FC07879D8ED956F931D74A2DF14526476E9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130 (Type_t * ___t0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m91451416B46D3849E217C7FBAAA96F28364E94B0_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// Valve.VR.CVRInput Valve.VR.OpenVR::get_Input()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414 (const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalActionData(System.UInt64,Valve.VR.InputSkeletalActionData_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalActionData_m89A0A431E11AD9772CA2724D8F45583146BB9C66 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * ___pActionData1, uint32_t ___unActionDataSize2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.String System.UInt64::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672 (uint64_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalBoneData(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalMotionRange,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalBoneData_mAE9C9E6EA4EBA38EF94D4849A702F5519E343CF7 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eMotionRange2, VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___pTransformArray3, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Quaternion::Angle(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneCount(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneCount_m2D8616427315CB0D0C2C46CA302B10E51E5CB43E (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, uint32_t* ___pBoneCount1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneHierarchy(System.UInt64,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneHierarchy_mC4643B8296FB4397833F6BB337B93B21D69312F2 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___pParentIndices1, const RuntimeMethod* method);
// System.Void System.Text.StringBuilder::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956 (StringBuilder_t * __this, int32_t ___capacity0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneName(System.UInt64,System.Int32,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneName_m8A4CA5E250538DBE77B7B80D9D3F8EA438AB2063 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___nBoneIndex1, StringBuilder_t * ___pchBoneName2, uint32_t ___unNameBufferSize3, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalReferenceTransforms(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalReferenceTransforms_m917C75E8B7E3378FE568EBFD4B594C9731FA0B9B (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eReferencePose2, VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* ___pTransformArray3, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void UnityEngine.Quaternion::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, float ___x0, float ___y1, float ___z2, float ___w3, const RuntimeMethod* method);
// System.Void SteamVR_Utils/RigidTransform::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RigidTransform__ctor_m8A80800C27705F4AF5CA6D008A8B6A74AFCCA1F2 (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalTrackingLevel(System.UInt64,Valve.VR.EVRSkeletalTrackingLevel&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalTrackingLevel_m7A1E94ED9540ABE0D8A58936E3FDDD6F5558B219 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t* ___pSkeletalTrackingLevel1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalSummaryData(System.UInt64,Valve.VR.EVRSummaryType,Valve.VR.VRSkeletalSummaryData_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalSummaryData_mCF15CA558E142D63A09747514588928C6D7152F0 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eSummaryType1, VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * ___pSkeletalSummaryData2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m1F5CBD749F6D72B0368116228975ED75A322FAF9 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_mD8DAEE4D2F6111ED348DE9E66E194F66E2E89024 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mFCAC042EA7E128B43D041E89C436CFAF4C340032 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m68EBE17205B49F58CC18575D9407E20E163CBE66 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m91B4ED8236F4EDF7B0D28988B02B1D9AC6C3A86A (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mF1980FE6994D9662F4BAC4C3FB5DB38A1DD1FF29 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Source_Map_1__ctor_m46CC8AADAF802355D940EB7B8E1F27836A7B4476 (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 *, const RuntimeMethod*))SteamVR_Action_Pose_Source_Map_1__ctor_mBB8E245C3E0BAADAA79082AA6FC40445EBC7C41E_gshared)(__this, method);
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_mCA804B7275EED0C19F247767BCC22B7F639A3175_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Input_Source::GetHandle(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185 (int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_mBB40F4301664B3074825255DA6E51B5E02F93463_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_mA1707CA47C4282036468F3EA4603C7B25963D834 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSetFromPath(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSetFromPath_mC36B5370364DAB9D5FFC55AB768FBC926B509306 (String_t* ___path0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_m8D8A292258A3B69B920DED592F2BD44A259EBAA9_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m4E65637F7F50E116169B2CFB6EBF5A2583D902F2_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources[] Valve.VR.SteamVR_Input_Source::GetAllSources()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352 (const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.String System.String::ToLowerInvariant()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E (String_t* __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetActionHandle(System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetActionHandle_mCF28476FA77FA4AA30EFE57818D83C4F8492828F (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, String_t* ___pchActionName0, uint64_t* ___pHandle1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mB5B6B8E56BCC552963E91E2748DF8CC04BDC979A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64 (String_t* ___str00, String_t* ___str11, String_t* ___str22, String_t* ___str33, const RuntimeMethod* method);
// System.Int32 System.String::IndexOf(System.Char,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D (String_t* __this, Il2CppChar ___value0, int32_t ___startIndex1, const RuntimeMethod* method);
// System.String System.String::Substring(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB (String_t* __this, int32_t ___startIndex0, int32_t ___length1, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Globalization.CultureInfo System.Globalization.CultureInfo::get_CurrentCulture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831 (const RuntimeMethod* method);
// System.String System.String::ToLower(System.Globalization.CultureInfo)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5 (String_t* __this, CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___culture0, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573 (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * (*) (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_mD999F898F7EC32F7FF2A4DE8A4FC77CB7012CC2F (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mF4DC388BA98BF545E220E94BC0C4DBF458090EB7 (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m77FAC4A378FA78CC827A871984258A60FA83CAE2_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1943C66837BE7929D58A91A9DFBAB4BBC2A1DB12_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetAnalogActionData(System.UInt64,Valve.VR.InputAnalogActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetAnalogActionData_m363EF49EA0485B0A4FF93C37842AC2CF8D21041A (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m2252BBEBC8C6D4A676ABF0EE270D181EBFB823BB_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_m8D0A6407047BB76299057CF382CD612137A600F3_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector2::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mD9CA3B62E4D42C612CFE1F900C127EB2E178869C (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector2::op_Inequality(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lhs0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_mFB29C3120DB4B338D9465DADD73FD30E158E05AB (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mDAB942B37EFE85A16B58B2E6300770D04437F2C1 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m6F9573537B1F39ADF5C93AA6452D108C664CC943 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_m1C7CDFB82FBD6E95D7AF23AB9320BCCD68C5CA92 (SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A (SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * (*) (SteamVR_Action_Source_Map_1_tAA298402BDA6A553A0C30790E7129D18A7682C1F *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onChange(Valve.VR.SteamVR_Action_Vector3/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector3/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector3/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector3/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector3/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_axis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_delta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastDelta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_mF9E126AD1A57CA13943CDE8404A98C0DA8FF8225 (SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_tFC1FB3FBCB26CEB814D8547C997DDFD01A8A0FB2 *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector3_Source_Map,Valve.VR.SteamVR_Action_Vector3_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mEE7832ED7C1B03D8FEB093F34B2B63974C3B5A04 (SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastAxis(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m2DA773CD84278414BB2D77495722E7E288C2727C_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastDelta(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_mD5A541A52EC64B8BF321E3B9778E37647A968DD1_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_axis(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_m8D6C550660D5D6EF3AFC2376B964204B4B26C0DF_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_delta(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m425C84C1DE5AD8F12F9F04C1E4C78452C580FE2B_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m1BD4D5E5DD81C63A9C020AE470617259DBAF62EE (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m4898437260780A1DE7497E17A30140E7081E3891 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m7B6641AC506F248A3301DE33BD7518AFE35A6A59 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector3/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m67A19739D2E43FC88B0EA8081E3DACEE816EF2AD (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector3_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t462A1CF8307E7E62DA57F8FA49B7405C51117253 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82 (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration/ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496 (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Out_2_tA45864F69B273963D043D8A2A878B60DC5995BD0 *, const RuntimeMethod*))SteamVR_Action_Out_2__ctor_m57D7973945ED4670545ED47E0BB47329C1939FFF_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vibration_Source_Map,Valve.VR.SteamVR_Action_Vibration_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700 (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_m4E3E3DD854D4B7384E415E8BD0F66E880BB97A3E (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Input::get_isStartupFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Input_get_isStartupFrame_mD1CC14482229680D1CF35F90798A2374A3B8CFE6 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::TriggerHapticVibrationAction(System.UInt64,System.Single,System.Single,System.Single,System.Single,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_TriggerHapticVibrationAction_m8F3D63EF48CE25235CE48A5460B1BB40BB28CB22 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, float ___fStartSecondsFromNow1, float ___fDurationSeconds2, float ___fFrequency3, float ___fAmplitude4, uint64_t ___ulRestrictToDevice5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vibration/ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Out_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218 (SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vibration_Source>::.ctor()
inline void SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3 (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *, const RuntimeMethod*))SteamVR_Action_Source_Map_1__ctor_mE8EB35AF2F507C1EA04DB21FFAE722DFE57C6B25_gshared)(__this, method);
}
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Inequality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___forSource0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSet(System.String,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSet_m53C53A57B6E0BEAA81C90D18B541694392B9BB23 (String_t* ___actionSetName0, bool ___caseSensitive1, bool ___returnsNulls2, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1 (const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared)(method);
}
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::FindObjectOfType<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034 (const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (const RuntimeMethod*))Object_FindObjectOfType_TisRuntimeObject_m251F203B12669585A5E663F529F6DF09F931B5DA_gshared)(method);
}
// System.Void UnityEngine.GameObject::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___name0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::AddComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_mE053F7A95F30AFF07D69F0DED3DA13AE2EC25E03_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Behaviour>()
inline SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// !!0 UnityEngine.GameObject::GetComponent<Valve.VR.SteamVR_Render>()
inline SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_root()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::DontDestroyOnLoad(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___target0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::StopCoroutine(UnityEngine.Coroutine)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * ___routine0, const RuntimeMethod* method);
// System.String UnityEngine.XR.XRSettings::get_loadedDeviceName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method);
// UnityEngine.Coroutine UnityEngine.MonoBehaviour::StartCoroutine(System.Collections.IEnumerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, RuntimeObject* ___routine0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C (bool ___forceUnityVRMode0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour/<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51 (RuntimeObject * ___message0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___context1, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B (bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void UnityEngine.Application::add_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723 (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t> Valve.VR.SteamVR_Events::System(Valve.VR.EVREventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B (int32_t ___eventType0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityAction`1<Valve.VR.VREvent_t>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199 (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, RuntimeObject *, intptr_t, const RuntimeMethod*))UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_gshared)(__this, ___object0, ___method1, method);
}
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Listen(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0 (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_gshared)(__this, ___action0, method);
}
// System.Void UnityEngine.Application::remove_onBeforeRender(UnityEngine.Events.UnityAction)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Events/Event`1<Valve.VR.VREvent_t>::Remove(UnityEngine.Events.UnityAction`1<T>)
inline void Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * __this, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * ___action0, const RuntimeMethod* method)
{
	((  void (*) (Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 *, UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *, const RuntimeMethod*))Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_gshared)(__this, ___action0, method);
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Time::get_frameCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::OnPreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_OnPreCull_m8257BD45734433B2FEFAAE3EEA450AA206B1A6E2 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_FixedUpdate_m148E3DD8EB5A5A307C2B787F8D17F81CA2985A92 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_LateUpdate_mF5DB9D90A59D0E2CEEC149CEC2B809524B739B6D (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Input::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Input_Update_m3E5F1FD8644044C051FFDAB30E6F43099D9AA3DD (const RuntimeMethod* method);
// System.Void UnityEngine.Application::Quit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95 (const RuntimeMethod* method);
// System.Void System.Action`1<System.String>::.ctor(System.Object,System.IntPtr)
inline void Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3 (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *, RuntimeObject *, intptr_t, const RuntimeMethod*))Action_1__ctor_mAFC7442D9D3CEC6701C3C5599F8CF12476095510_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.XR.XRDevice::add_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRSettings::LoadDeviceByName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095 (String_t* ___deviceName0, const RuntimeMethod* method);
// System.Void UnityEngine.XR.XRDevice::remove_deviceLoaded(System.Action`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * ___value0, const RuntimeMethod* method);
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33 (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Inequality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action::op_Equality(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Action)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2 (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action10, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action21, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285 (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993 (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 *, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Boolean/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2 (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t6AB15570399D42C6377741DA4B8F5FD3CEED0539 *, const RuntimeMethod*))UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared)(__this, method);
}
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_RingBuffer`1<Valve.VR.SteamVR_HistoryStep>::Clear()
inline void SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6 (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_RingBuffer_1_t57851A70FC812E73F42BD0FCB349E7612005C7A4 *, const RuntimeMethod*))SteamVR_RingBuffer_1_Clear_m97C5D575D1DA014FC1A4ED823619C2067088E96D_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::Invoke(!0,!1)
inline void UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*))UnityEvent_2_Invoke_m8E0E3910F551485BB28258D9379D14BFAA534A22_gshared)(__this, ___arg00, ___arg11, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9 (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, bool ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*))UnityEvent_3_Invoke_mCCCB26A54DDDE4C45AB75841D6EC25543250237E_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4 (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_m5C68F6A3763AEBC706B429DECC9B41FCD30511CB_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_In_Source::get_trackedDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, String_t* ___methodName0, RuntimeObject * ___parameter1, int32_t ___options2, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::Invoke(!0,!1,!2)
inline void UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615 (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___arg00, int32_t ___arg11, int32_t ___arg22, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 *, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*))UnityEvent_3_Invoke_mDEFB782BBAAE531C8690EF7387FD1828C15F47F0_gshared)(__this, ___arg00, ___arg11, ___arg22, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose/DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_HistoryBuffer::GetTopVelocity(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_HistoryBuffer_GetTopVelocity_m5535E2C2A7901787B4389A2A4DEF684242BED659 (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___forFrames0, int32_t ___addFrames1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::GetAverageVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_GetAverageVelocities_mE13684826F9D7B93A242BFB733653CAB1EB5B2AE (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, int32_t ___forFrames2, int32_t ___startFrame3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_HistoryBuffer::Update(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer_Update_mB5AE66DC0E520253A10D559BB42199E8A6F4DE7B (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocity2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___angularVelocity3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4 (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
// T Valve.VR.SteamVR_Input::GetAction<Valve.VR.SteamVR_Action_Pose>(System.String,System.Boolean)
inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40 (String_t* ___actionName0, bool ___caseSensitive1, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * (*) (String_t*, bool, const RuntimeMethod*))SteamVR_Input_GetAction_TisRuntimeObject_mE125D174FCDC6B1CAA20F418BC98C485C0B184A1_gshared)(___actionName0, ___caseSensitive1, method);
}
// System.Void Valve.VR.SteamVR_HistoryBuffer::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_HistoryBuffer__ctor_mF1CDA69BC169476E9636EC6159D2C8FBA8634CDF (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * __this, int32_t ___size0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`2<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources>::.ctor()
inline void UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2 (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tA05085E47587B6E451DA7BFE1C3551696049307E *, const RuntimeMethod*))UnityEvent_2__ctor_m90C3B8ED5DA3821DD3264EEAD585A64D22D376E8_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean>::.ctor()
inline void UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_tBBC56B079516E009B4B82F815EA628510B08FB2B *, const RuntimeMethod*))UnityEvent_3__ctor_mFE485CA18703786ADB69D0B88DE90791DCACE4C0_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32>::.ctor()
inline void UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t9F7FBE764B10ACE18D72DD1C3A0FD02372F2FDE4 *, const RuntimeMethod*))UnityEvent_3__ctor_m3F5C9C71D01617BD938DF6FCCF22F407E2F34F27_gshared)(__this, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult>::.ctor()
inline void UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8 (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t391F2DDF36FA264C778F53EB8FDCE5A95F5064BE *, const RuntimeMethod*))UnityEvent_3__ctor_m37296D71FE47604FC0A25A42D39C15545FAC2598_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`4<Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single>::Invoke(!0,!1,!2,!3)
inline void UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85 (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___arg00, int32_t ___arg11, float ___arg22, float ___arg33, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_4_t3A547C01CD6A63A594A6C4E837E12268349BF0C7 *, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 *, int32_t, float, float, const RuntimeMethod*))UnityEvent_4_Invoke_m52DEE454F4AD386078577AAFFFC0E09851A5AF3D_gshared)(__this, ___arg00, ___arg11, ___arg22, ___arg33, method);
}
// System.Void Valve.VR.SteamVR_Behaviour_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m84942E8C81D99B00E49FC64BFD74F6A0B123A2DD (UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m13F669E97E3EA368C92C64F0172CD01CBC42B931 (ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Behaviour_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Behaviour_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m8E9BFB173CCA66F9303D7EE7B256B8C16D7033BA (AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * __this, SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::GetLocalizedOriginPart(Valve.VR.SteamVR_Input_Sources,Valve.VR.EVRInputStringBits[])
inline String_t* SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57 (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 * __this, int32_t ___inputSource0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method)
{
	return ((  String_t* (*) (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 *, int32_t, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*, const RuntimeMethod*))SteamVR_Action_In_2_GetLocalizedOriginPart_mEA178543F658F3C193F0ADAECE592F66F35D6A83_gshared)(__this, ___inputSource0, ___localizedParts1, method);
}
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Map__ctor_mBEEDF89DB49EE998BFEFAC3FB1DF7665B3FE4AE9 (SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Map__ctor_mBEEDF89DB49EE998BFEFAC3FB1DF7665B3FE4AE9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_m3CF6B3F7CC98C67885A2F7915311C360B9842389(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_m3CF6B3F7CC98C67885A2F7915311C360B9842389_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveChange_m49322B1046AB4F7F652CFC7F8F5354697CFC419E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveChange_m49322B1046AB4F7F652CFC7F8F5354697CFC419E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveChange_mB45B49699E0BA70E2CE347A6E9F96018F3FA7BB4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveChange_mB45B49699E0BA70E2CE347A6E9F96018F3FA7BB4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveBindingChange_m07DF54383907362AF8846A96EC486DE4ADF4CDA1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveBindingChange_m07DF54383907362AF8846A96EC486DE4ADF4CDA1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_m4DC3513C7C9507997D9D34F1A514F152B2D38CFA(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveBindingChange_mF4DF38A823FEA14CBCBEBAD5B07048564772FF42 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveBindingChange_mF4DF38A823FEA14CBCBEBAD5B07048564772FF42_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m8B778606DA02C1FB1A23C1A955951094E261F2AF(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onChange_mD39BD96DEA8F826BAB9975C7960E0FCC34DD2949 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onChange_mD39BD96DEA8F826BAB9975C7960E0FCC34DD2949_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onChange_mE3314F2A6094E48BA418013DBEB83064A7F853B0 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onChange_mE3314F2A6094E48BA418013DBEB83064A7F853B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onUpdate_mB35B29D83BC5DBA077A734822B1E78F0D921A6E9 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onUpdate_mB35B29D83BC5DBA077A734822B1E78F0D921A6E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onUpdate_m8558F015C56A6191114E396FBFA440F47580D79C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onUpdate_m8558F015C56A6191114E396FBFA440F47580D79C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onTrackingChanged_m27D7D512A8B28F439D5462462C58725039CB823B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onTrackingChanged_m27D7D512A8B28F439D5462462C58725039CB823B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onTrackingChanged_mE5229135F65372F6DDA222F462565A6D0E66DA6D (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onTrackingChanged_mE5229135F65372F6DDA222F462565A6D0E66DA6D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onValidPoseChanged_m16EEF660B28D51B84173746D48C7CA5E4AFDF384 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onValidPoseChanged_m16EEF660B28D51B84173746D48C7CA5E4AFDF384_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onValidPoseChanged_m36DAF4159892070D6853F24DD8D8DB701CA0F706 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onValidPoseChanged_m36DAF4159892070D6853F24DD8D8DB701CA0F706_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m92354268E04EC26BEA381884B6642CFBB1E08CC1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m92354268E04EC26BEA381884B6642CFBB1E08CC1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_mCC1CD5EF82563E7FE898D2BAE0DEDC59C9AFA8C9 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_mCC1CD5EF82563E7FE898D2BAE0DEDC59C9AFA8C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__ctor_mC5935E4BA141DDF7A90EC1593B0AB235ED4A150E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__ctor_mC5935E4BA141DDF7A90EC1593B0AB235ED4A150E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Skeleton() { }
		SteamVR_Action_Pose_Base_2__ctor_mA24A37A7DD68461F1328F541DD825CDACBAC30C5(__this, /*hidden argument*/SteamVR_Action_Pose_Base_2__ctor_mA24A37A7DD68461F1328F541DD825CDACBAC30C5_RuntimeMethod_var);
		// public SteamVR_Action_Skeleton() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValue_mA4FFC2C42D19F3EBD6E63E0F10D43754E49E238F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValue_mA4FFC2C42D19F3EBD6E63E0F10D43754E49E238F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(skipStateAndEventUpdates);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___skipStateAndEventUpdates0;
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, L_2);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValueWithoutEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValueWithoutEvents_mDEFBA29DA9DD73B2577B692E21B71CAE9650735C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(true);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, (bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateTransform_m6F79643A24833641C748F3088E112AF52E478BF2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateTransform_m6F79643A24833641C748F3088E112AF52E478BF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.UpdateTransform(SteamVR_Input_Sources.Any, transformToUpdate);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___transformToUpdate0;
		SteamVR_Action_Pose_Base_2_UpdateTransform_mDF91BEAC2D9487D14C5D1EB34996E2C2E4F275D0(__this, 0, L_0, /*hidden argument*/SteamVR_Action_Pose_Base_2_UpdateTransform_mDF91BEAC2D9487D14C5D1EB34996E2C2E4F275D0_RuntimeMethod_var);
		// }
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3[] bonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].bonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Quaternion[] boneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].boneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3[] lastBonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Quaternion[] lastBoneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_rangeOfMotion_m67729E8AE1AA6F85CB507D08500E43B64DF76785_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_rangeOfMotion_mB389010B0C01970B95C278A809545561A1BA4D58 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_rangeOfMotion_mB389010B0C01970B95C278A809545561A1BA4D58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTransformSpace_mD90A3FC93A8F0BEF500E54EBE0AC67E323950B35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_skeletalTransformSpace_mA307660C0D7CC13E16AEF9D45B7B87D6B90634F3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_skeletalTransformSpace_mA307660C0D7CC13E16AEF9D45B7B87D6B90634F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_summaryDataType_mD93DEF103A25384272D6EC1915F2B794806F4519_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].summaryDataType; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_summaryDataType_m71DB13F92B26A5E85B0E03386E49397066869B27 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_summaryDataType_m71DB13F92B26A5E85B0E03386E49397066869B27_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_summaryDataType_m99B705C8282316AC52EBA3A718C998FE46329E1F_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTrackingLevel_m42CDC3C3C98C91065325A4C71510B9B8B6FBAA14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTrackingLevel; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbCurl_m78B436FFB2D7C6B0FE83FBA4BA11123C3B06EF28 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbCurl_m78B436FFB2D7C6B0FE83FBA4BA11123C3B06EF28_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float thumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].thumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbCurl_m7C48F880AFC6164499E9E23B8D1F413B4AC9A98E(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexCurl_mEB1F41479BDBBEF2E93E1268C0947AA789242C41 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexCurl_mEB1F41479BDBBEF2E93E1268C0947AA789242C41_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float indexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].indexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexCurl_m06230658C52C5E441A49AD40313C608619196B5B(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleCurl_mB7653A8B23ED58306E8EB31E707229BFAE1FA9B8 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleCurl_mB7653A8B23ED58306E8EB31E707229BFAE1FA9B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float middleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].middleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleCurl_mE52CDCDA31A963E723E4BDCC3F3B618FC97CBBE8(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringCurl_mC657F338C93FBF39891F77C5B58DFD063B82D9E2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringCurl_mC657F338C93FBF39891F77C5B58DFD063B82D9E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float ringCurl { get { return sourceMap[SteamVR_Input_Sources.Any].ringCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringCurl_m779E5E61A32799167B43551CB36FE864A6413868(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_pinkyCurl_mFB7270C1D7CCD0346630B7FD9537DF2859241C32 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_pinkyCurl_mFB7270C1D7CCD0346630B7FD9537DF2859241C32_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float pinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].pinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_pinkyCurl_m0E983BD50EB9B7AEB30874395070AE5E86C66FBB(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbIndexSplay_mE662DBD9173578066DAC6EA4537A9609A89ED735 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbIndexSplay_mE662DBD9173578066DAC6EA4537A9609A89ED735_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float thumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].thumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_mEA2624540878BDB6DA6344334535F817583A97B0(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexMiddleSplay_m546A2A3E6E1449CA4C6A482D4138EAD63206C7D5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexMiddleSplay_m546A2A3E6E1449CA4C6A482D4138EAD63206C7D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float indexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].indexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_mC5FC7F51CDCC049B987DB60C5686335125255583(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleRingSplay_mC6A6DC9021549480656FD3EFABD14D6D304D555C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleRingSplay_mC6A6DC9021549480656FD3EFABD14D6D304D555C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float middleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].middleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleRingSplay_m3FCE7BEB2171ACEFCFD9A0E4169AB0BAD6BFEA62(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringPinkySplay_mA246643EFA211CB2B0ACC8BF02C70B386D86420E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringPinkySplay_mA246643EFA211CB2B0ACC8BF02C70B386D86420E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float ringPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].ringPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringPinkySplay_mCAFFCF55E8363259B27670F7193D8B85AA934BC7(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbCurl_m8EF585CBDF71173BBE7A3FFDCADDA14B9DF133DE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbCurl_m8EF585CBDF71173BBE7A3FFDCADDA14B9DF133DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastThumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbCurl_m55C39AD1FA31B45A7C19348451F25A0488D13241(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexCurl_m8CF537005F0FB51208329280711F0A8408BDBAC9 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexCurl_m8CF537005F0FB51208329280711F0A8408BDBAC9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastIndexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexCurl_m400F28379D6657033E67D29F2B6376654E71440F(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleCurl_m6D5135ECD058B820D04982DC4077E2E14AA03BAC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleCurl_m6D5135ECD058B820D04982DC4077E2E14AA03BAC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastMiddleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m32F8B6C010E5EDEFE25465EAFCCEE7CEBBEC8F36(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingCurl_m6D22D1042A5D05F28D363BE71CA94318FDEF683F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingCurl_m6D22D1042A5D05F28D363BE71CA94318FDEF683F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastRingCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingCurl_m79AD5ABC922A559F034B53F25848FCCB8F80C35D(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastPinkyCurl_mBFB42992D9E09ADD2B6ED7BC5782C5C6986D3D69 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastPinkyCurl_mBFB42992D9E09ADD2B6ED7BC5782C5C6986D3D69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastPinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastPinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m40495088AE01BE4B8AE90499CE0A5AEC0673EB13(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mA28395123EDD33FE080B5BBDD9B83A5A25E80948 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mA28395123EDD33FE080B5BBDD9B83A5A25E80948_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastThumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_m990D77456F84B5E00C2DD1A5BEC36B915213B1FA(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m30ED9E7BD9BA8E840D1F80AC165E7074B050F1B8 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m30ED9E7BD9BA8E840D1F80AC165E7074B050F1B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastIndexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_m328634EB394F9D2A6370F481BC35EF947462AB2E(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mD8B7B998BDCE4FEE0FD4D60A6EF589F85A7CE40C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mD8B7B998BDCE4FEE0FD4D60A6EF589F85A7CE40C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastMiddleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_m33B09DF71ADF6FF1BA42C31E2ACD6D3E5C258845(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingPinkySplay_m4AA30BABB66CAD75BD36C1B957A439F308AD694B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingPinkySplay_m4AA30BABB66CAD75BD36C1B957A439F308AD694B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float lastRingPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mFD509B1C21CF79C88833690ECDB237D307AAC531(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerCurls_m4A263447B22178919E09D1E97E8C3BDEA0736BAD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerCurls_m4A263447B22178919E09D1E97E8C3BDEA0736BAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] fingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].fingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerSplays_m7B088FB1B70AD3B51A16353085AA0A50AF77EDBD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerSplays_m7B088FB1B70AD3B51A16353085AA0A50AF77EDBD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] fingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].fingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerCurls_m3739004D70486E65E29BC117CE7D03A7F42A334F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerCurls_m3739004D70486E65E29BC117CE7D03A7F42A334F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] lastFingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerSplays_m8D682F035CBCDC7D71503C78433E061096D3D5FE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerSplays_m8D682F035CBCDC7D71503C78433E061096D3D5FE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float[] lastFingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_poseChanged_m248D619571236D9D7833B76A03BA70B033516FFA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_poseChanged_m248D619571236D9D7833B76A03BA70B033516FFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool poseChanged { get { return sourceMap[SteamVR_Input_Sources.Any].poseChanged; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_poseChanged_m00A9DB3FFD0499D982FC39500D115B4968518988_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m34F8E2E3DFF90BC3E25A4DE8F90C6E717AF3D5BE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m34F8E2E3DFF90BC3E25A4DE8F90C6E717AF3D5BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mFB1077C0BE8DD592764267D71E922C34CF11DB09 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mFB1077C0BE8DD592764267D71E922C34CF11DB09_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m49C580092D3CDFD2E8D1D98D06026C2FF6F73BCA_inline(L_1, L_2, /*hidden argument*/NULL);
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetActive_m6E06AD31889D5E0E0431CA1766F874759FE3216F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetActive_m6E06AD31889D5E0E0431CA1766F874759FE3216F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].active;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_1);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetSetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetSetActive_mF56700F6043B0FBDC749DFCEC673AB1CC7CC010E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// return actionSet.IsActive(SteamVR_Input_Sources.Any);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, __this);
		NullCheck(L_0);
		bool L_1 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_0, 0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_m188E942824BC8328FF62524D8AC7121B41214E8C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_m188E942824BC8328FF62524D8AC7121B41214E8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity2;
		NullCheck(L_1);
		bool L_5 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, /*hidden argument*/NULL);
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseAtTimeOffset_mBCC36205E479616B506EFA081120EDA9E3269202 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseAtTimeOffset_mBCC36205E479616B506EFA081120EDA9E3269202_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetPoseAtTimeOffset(secondsFromNow, out position, out rotation, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___position1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_4 = ___rotation2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___velocity3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_6 = ___angularVelocity4;
		NullCheck(L_1);
		bool L_7 = SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].velocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].angularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetDeviceIsConnected_m5A76303DB4261016DAEBD30B735BED3259855734 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetDeviceIsConnected_m5A76303DB4261016DAEBD30B735BED3259855734_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].deviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseIsValid_m940EF6B8834E5EE883FB69081F7A8CF115F7090D (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseIsValid_m940EF6B8834E5EE883FB69081F7A8CF115F7090D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].poseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetTrackingResult_mC2E4F3F2683D8B4AAB82B16F36D49F3FD81B5BE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].trackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLastLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastAngularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mD15EE41DB5743A4DD42DB692B56470A75297D7B4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mD15EE41DB5743A4DD42DB692B56470A75297D7B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastDeviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastPoseIsValid_mB18ED4BF91977E89C1BE821A473AAAD5C2AD9AAB (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastPoseIsValid_mB18ED4BF91977E89C1BE821A473AAAD5C2AD9AAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastPoseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetLastTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastTrackingResult_m37C8D9BEA0568AA117E7F4A9A6C25E36D08D628F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastTrackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_boneCount_m03FEFB972B25D05F07C7AEB4D61B2349C75DE864 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_GetBoneCount_mB8D948288CCD3A7E432C9A28508CFF40C96F85A1(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetBonePositions_mB8ED80319622D467201E3562AEDCE36C6601D531 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBonePositions_mB8ED80319622D467201E3562AEDCE36C6601D531_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].bonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_4, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].bonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetBoneRotations_m7239E024A6D2E783C25D633A0476CA9428D465C4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneRotations_m7239E024A6D2E783C25D633A0476CA9428D465C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].boneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_4, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].boneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_7 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetLastBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetLastBonePositions_mD5C9D7939B6693865BFC89D4CFF3A29E8273E5EA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBonePositions_mD5C9D7939B6693865BFC89D4CFF3A29E8273E5EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].lastBonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_4, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetLastBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetLastBoneRotations_m6828376AA97DD3A7A78FE2F9E0EE038CA96D39ED (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBoneRotations_m6828376AA97DD3A7A78FE2F9E0EE038CA96D39ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_4, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_7 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetRangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___range0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetRangeOfMotion_mF9A18F8B97BE27E61EF44516E381801FA301FC11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = range;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___range0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetSkeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m18728D948D1B46D284FBEBFEDA47FB97BBB1B68D (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___space0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m18728D948D1B46D284FBEBFEDA47FB97BBB1B68D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = space;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___space0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mB8D948288CCD3A7E432C9A28508CFF40C96F85A1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneCount_mB8D948288CCD3A7E432C9A28508CFF40C96F85A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneCount();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		uint32_t L_2 = SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_GetBoneHierarchy_mE6046CC9827A1DDF795FB53696BA8A0119FCBD54 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneHierarchy_mE6046CC9827A1DDF795FB53696BA8A0119FCBD54_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneHierarchy();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetBoneName_m3664883EBE49B71E83B8C4A2D3D6CA5648D896A1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneName_m3664883EBE49B71E83B8C4A2D3D6CA5648D896A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneName(boneIndex);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___boneIndex0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_Skeleton_Source_GetBoneName_m67234F0D980501AD00E029B0B30415B8F18856F9(L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// SteamVR_Utils_RigidTransform[] Valve.VR.SteamVR_Action_Skeleton::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetReferenceTransforms_m003738CB3D282D68A3B67970CDF7F508117FD296_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetReferenceTransforms(transformSpace, referencePose);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___transformSpace0;
		int32_t L_3 = ___referencePose1;
		NullCheck(L_1);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_4 = SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92(L_1, L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m6C574D1BBEA110C4DF8A5CEEF03E4987709F73E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetSkeletalTrackingLevel();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerCurls_mB05B99839838D84A19A639120BC6DD7FB2395A29 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurls_mB05B99839838D84A19A639120BC6DD7FB2395A29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerCurls_m6971403DF34683B96CB48F156A71C57C137AA5CA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurls_m6971403DF34683B96CB48F156A71C57C137AA5CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerSplays_m7CB3DAB877B3FE9EF6AD8A79FCFE6A80C0D1CD0E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerSplays_m7CB3DAB877B3FE9EF6AD8A79FCFE6A80C0D1CD0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerSplays_m8144088BE8AF0D0FDDF3F1D89711732D63C16EBB (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerSplays_m8144088BE8AF0D0FDDF3F1D89711732D63C16EBB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (copy)
		bool L_0 = ___copy0;
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_1 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_1, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(L_2, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_3);
		RuntimeObject * L_4 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_3, /*hidden argument*/NULL);
		return ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_4, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
	}

IL_001f:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_5 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_5);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_6 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_5, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_6);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_7 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC1F50D0ECE4C5553E8E25A7C06668558D2742620 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurl_mC1F50D0ECE4C5553E8E25A7C06668558D2742620_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m6A6A69B1D61A8EB56C024FBE87D50C11A155ACE0 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSplay_m6A6A69B1D61A8EB56C024FBE87D50C11A155ACE0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_m74152BBAF9EE89F9A8F186E462FFD0DDE1C9D420 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	{
		// return GetFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetFingerCurl_mC1F50D0ECE4C5553E8E25A7C06668558D2742620(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_mE67EEB0903CB5D257900AA9947BB259E83B2E953 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	{
		// return GetSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetSplay_m6A6A69B1D61A8EB56C024FBE87D50C11A155ACE0(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_m39488C73FCFCA0C9586171A54C06F3336F9EA563 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurl_m39488C73FCFCA0C9586171A54C06F3336F9EA563_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_m3EE8FC2ECE44A16A6F103E19A42AF8A10780C9B2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastSplay_m3EE8FC2ECE44A16A6F103E19A42AF8A10780C9B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_m8F00957C95BDA66CE16C133DF5408FC7472410A9 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	{
		// return GetLastFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetLastFingerCurl_m39488C73FCFCA0C9586171A54C06F3336F9EA563(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_m1C845AC46C2657DA0BE3D71578C195D5F7FFDA5D (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	{
		// return GetLastSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetLastSplay_m3EE8FC2ECE44A16A6F103E19A42AF8A10780C9B2(__this, L_0, /*hidden argument*/NULL);
		return L_1;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetLocalizedName_m6E5B2E0BB7BBB24B0C10D4178DEBD2452F21511B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalizedName_m6E5B2E0BB7BBB24B0C10D4178DEBD2452F21511B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetLocalizedOriginPart(localizedParts);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_2 = ___localizedParts0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938(L_1, L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_mCDC3AE4ECD7F52EBBF02BB5DC2E81A5F2F493915 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_mCDC3AE4ECD7F52EBBF02BB5DC2E81A5F2F493915_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA65B569EE113DD0F88233B2A720F57ACDBFFDA23 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA65B569EE113DD0F88233B2A720F57ACDBFFDA23_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnTrackingChanged_mFEFEF4A49A2F219DD9C6A2B315829772A140FAE0 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnTrackingChanged_mFEFEF4A49A2F219DD9C6A2B315829772A140FAE0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m50F6BBB2398BED51DAC0B5F444FFFB487C938D58 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m50F6BBB2398BED51DAC0B5F444FFFB487C938D58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnValidPoseChanged_m7C3267EC9F47669379DC41F6653B34BD70071A20 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnValidPoseChanged_m7C3267EC9F47669379DC41F6653B34BD70071A20_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mC3A2516F26566F6E2C9F01EA501C095E1978269C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mC3A2516F26566F6E2C9F01EA501C095E1978269C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnActiveChangeListener_m2D32E586E074A6211226E0B25A4BD7819BDD2331 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnActiveChangeListener_m2D32E586E074A6211226E0B25A4BD7819BDD2331_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_mDAA7E51AE61F9EFB56712D2BFC5C2481BE781D7C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_mDAA7E51AE61F9EFB56712D2BFC5C2481BE781D7C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnChangeListener(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnChangeListener_m6D171EBBE99E96449ED31256191F0B9B37660CA4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnChangeListener_m6D171EBBE99E96449ED31256191F0B9B37660CA4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnChangeListener_mAFAD8747C82109904BB2B6B5BF3387EA6DA970F3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnChangeListener_mAFAD8747C82109904BB2B6B5BF3387EA6DA970F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnUpdateListener_m4747980341F8DD2D9AB7068B6517CCB415635808 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnUpdateListener_m4747980341F8DD2D9AB7068B6517CCB415635808_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnUpdateListener_m123C6B0C9425E2C84DFDFA880047D7A6C6FDD3CF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnUpdateListener_m123C6B0C9425E2C84DFDFA880047D7A6C6FDD3CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m4CFD08AACF800E504667C5F20A2636ED6CF50ED2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5CD84AEC49B84E110E6BF9277B9335A136ABAAA5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5CD84AEC49B84E110E6BF9277B9335A136ABAAA5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m18C23160315F8414CA38CA01EB2E95529802281C(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m18C23160315F8414CA38CA01EB2E95529802281C_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__cctor_m57066E5D93F7A7D6D735CE541E25BABAC7E5480A (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__cctor_m57066E5D93F7A7D6D735CE541E25BABAC7E5480A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static Quaternion steamVRFixUpRotation = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->set_steamVRFixUpRotation_7(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m9D87931B47DA909EBF27D42D4C66CDB11AE98F15 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m91B4ED8236F4EDF7B0D28988B02B1D9AC6C3A86A (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___active1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___active1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___active1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___active1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m20FA39B27B526812B1D6D1749788D3F1D884B2C8 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m20FA39B27B526812B1D6D1749788D3F1D884B2C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m33CA0B570D1604A4DD369AB26E52234F474F741A (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m3907CB57D39251E69163FEFCC54C399705C76C24 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m68EBE17205B49F58CC18575D9407E20E163CBE66 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m885E71779C31CDA17A452CD52ABB284C3F8FCF46 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m5EBBDFE3BB0D3217421CDEDBA9227386C2354545 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m8F5774FBC2C0DEA2AE17138C7D67D6FAD3385D8C (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mFCAC042EA7E128B43D041E89C436CFAF4C340032 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___deviceConnected1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___deviceConnected1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m822DAC3B254223500E283102B983C97D78333D10 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m822DAC3B254223500E283102B983C97D78333D10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m9C8C7CB352AF10873059A2BA7F289B5E85030F00 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m6669C85631291CBFDD37E8F72F923C1BB4EFBDA5 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m1F5CBD749F6D72B0368116228975ED75A322FAF9 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___trackingState1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___trackingState1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m9817EC8D7AAF0FA43430700B83DD1F976D5C8242 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m9817EC8D7AAF0FA43430700B83DD1F976D5C8242_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m1763C922FC594B7127DD40E8D303C471BF267EEC (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m3E83F7021640EAC0B1E5CFAF739959D3695FF5B1 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mF1980FE6994D9662F4BAC4C3FB5DB38A1DD1FF29 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m054D14B07491450FF3F0DFE6EE15A121F850C695 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m296DE353BFA3A2D8B88177315D3095A388729149 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_mD7B232F12363616301CEA8FDBB39A363C755DB55 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_mD8DAEE4D2F6111ED348DE9E66E194F66E2E89024 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___validPose1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___validPose1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___validPose1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___validPose1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m3BEFCC52268F783010319929B644B5D756E0D1C6 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m3BEFCC52268F783010319929B644B5D756E0D1C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mB220001C63CE909A46115EE79CB9E9468E1E95B8 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveChange_mE0FC38C5C6749C482B67CA8FC2017969A0BE37F6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveChange_m02B106748649E99F649EC24789D36D5DB0577965_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_m4DC3513C7C9507997D9D34F1A514F152B2D38CFA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_m4DC3513C7C9507997D9D34F1A514F152B2D38CFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m8B778606DA02C1FB1A23C1A955951094E261F2AF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m8B778606DA02C1FB1A23C1A955951094E261F2AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onChange_m36F08DE1097970DE49B839792F1935A218E92ADA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onChange_m9AE202076C862455102381B3DD4AA5E98D8E7DB0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onUpdate_m7E46F0BA1CFA58A2B4CD7E9937AF913E21B597E4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onUpdate_m3DAC62A7DE38AF1BA67D76654BDC0CECB0296FAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onTrackingChanged_m1214E513861191327AAAF65D11DDA8E978F2EAD0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_mD1990275D9A505E92742B063863D9F1BE96BFDB0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m2A4D3F3E5FEFDD0ACBBCA7018AD94DF8EDA37A24_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mA00A29139A1727456784ECF81C9009BAD9B2D8D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m65E5DE81AF451EF0B00E214FA8E5034E29FA3EC7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_mB24005D6459F7B8D170E3445BF5B95405871AF13_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_activeBinding_m541AE099F07A8283CC85D9CDBAB6C52DF84935C6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return skeletonActionData.bActive; } }
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_0 = __this->get_address_of_skeletonActionData_61();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_lastActiveBinding_mE814471BA5DA727D7AFC082907D4EA51AF0650C5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastSkeletonActionData.bActive; } }
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_0 = __this->get_address_of_lastSkeletonActionData_62();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m6E2F4BC8D0DB6C17A44D1DD390933B195C8F0BE7 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m04DF922F78BEB4B48C610E5263CB5A56723BFE11 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m7B9C3EC1294D432EBF5834AA2FD1518F398C771B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mAF79C76574CD9C644F280B1E5DCBF068D84C0C71 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m99B705C8282316AC52EBA3A718C998FE46329E1F (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m7C48F880AFC6164499E9E23B8D1F413B4AC9A98E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float thumbCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m06230658C52C5E441A49AD40313C608619196B5B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float indexCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mE52CDCDA31A963E723E4BDCC3F3B618FC97CBBE8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float middleCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_m779E5E61A32799167B43551CB36FE864A6413868 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float ringCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_m0E983BD50EB9B7AEB30874395070AE5E86C66FBB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float pinkyCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_mEA2624540878BDB6DA6344334535F817583A97B0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float thumbIndexSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_mC5FC7F51CDCC049B987DB60C5686335125255583 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float indexMiddleSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m3FCE7BEB2171ACEFCFD9A0E4169AB0BAD6BFEA62 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float middleRingSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_mCAFFCF55E8363259B27670F7193D8B85AA934BC7 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float ringPinkySplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_m55C39AD1FA31B45A7C19348451F25A0488D13241 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastThumbCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_m400F28379D6657033E67D29F2B6376654E71440F (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastIndexCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m32F8B6C010E5EDEFE25465EAFCCEE7CEBBEC8F36 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastMiddleCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m79AD5ABC922A559F034B53F25848FCCB8F80C35D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastRingCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m40495088AE01BE4B8AE90499CE0A5AEC0673EB13 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastPinkyCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_m990D77456F84B5E00C2DD1A5BEC36B915213B1FA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastThumbIndexSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_m328634EB394F9D2A6370F481BC35EF947462AB2E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastIndexMiddleSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_m33B09DF71ADF6FF1BA42C31E2ACD6D3E5C258845 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastMiddleRingSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mFD509B1C21CF79C88833690ECDB237D307AAC531 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float lastRingPinkySplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m8A5B299B1D9CA30852BCFDF4439985C7C67607D5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mEC48DADE504DBFF9AB6B0D16ED35C39CE97F2EBD (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_m87DEB2959B20AD607470B75C837EE42754040CFF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_mA14C6FC07879D8ED956F931D74A2DF14526476E9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_m00A9DB3FFD0499D982FC39500D115B4968518988 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m91451416B46D3849E217C7FBAAA96F28364E94B0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m49C580092D3CDFD2E8D1D98D06026C2FF6F73BCA (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Preinitialize_mC689B2C9BDC3CB56B8539484F3B370FA955C0A45 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Preinitialize_mC689B2C9BDC3CB56B8539484F3B370FA955C0A45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979(__this, L_0, L_1, /*hidden argument*/NULL);
		// skeletonAction = (SteamVR_Action_Skeleton)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_skeletonAction_59(((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var)));
		// bonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_bonePositions_m6E2F4BC8D0DB6C17A44D1DD390933B195C8F0BE7_inline(__this, L_3, /*hidden argument*/NULL);
		// lastBonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBonePositions_m7B9C3EC1294D432EBF5834AA2FD1518F398C771B_inline(__this, L_4, /*hidden argument*/NULL);
		// boneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_5 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_boneRotations_m04DF922F78BEB4B48C610E5263CB5A56723BFE11_inline(__this, L_5, /*hidden argument*/NULL);
		// lastBoneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_6 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mAF79C76574CD9C644F280B1E5DCBF068D84C0C71_inline(__this, L_6, /*hidden argument*/NULL);
		// rangeOfMotion = EVRSkeletalMotionRange.WithController;
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619_inline(__this, 0, /*hidden argument*/NULL);
		// skeletalTransformSpace = EVRSkeletalTransformSpace.Parent;
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8_inline(__this, 1, /*hidden argument*/NULL);
		// fingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_7 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_7)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerCurls_m8A5B299B1D9CA30852BCFDF4439985C7C67607D5_inline(__this, L_8, /*hidden argument*/NULL);
		// fingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_9 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_9);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_10 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_9)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerSplays_mEC48DADE504DBFF9AB6B0D16ED35C39CE97F2EBD_inline(__this, L_10, /*hidden argument*/NULL);
		// lastFingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_11 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_11);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_12 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerCurls_m87DEB2959B20AD607470B75C837EE42754040CFF_inline(__this, L_12, /*hidden argument*/NULL);
		// lastFingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_13 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_13);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_14 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerSplays_mA14C6FC07879D8ED956F931D74A2DF14526476E9_inline(__this, L_14, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Initialize_mAC7E24B466C1A3D77533F0A1C76F5E1F3C0D704A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Initialize_mAC7E24B466C1A3D77533F0A1C76F5E1F3C0D704A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43(__this, /*hidden argument*/NULL);
		// if (skeletonActionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// skeletonActionData_size = (uint)Marshal.SizeOf(typeof(InputSkeletalActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->set_skeletonActionData_size_36(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_mE924A6C6CFD9CD77209E2FE67B60B8D7D2FFA3A9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// UpdateValue(false);
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, __this, (bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_m973732FC7285143B7F0ABF27A4DD83041EA2FB82 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateValue_m973732FC7285143B7F0ABF27A4DD83041EA2FB82_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	uint64_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	{
		// lastActive = active;
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_0);
		// lastSkeletonActionData = skeletonActionData;
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430  L_1 = __this->get_skeletonActionData_61();
		__this->set_lastSkeletonActionData_62(L_1);
		// lastSkeletalSummaryData = skeletalSummaryData;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  L_2 = __this->get_skeletalSummaryData_57();
		__this->set_lastSkeletalSummaryData_58(L_2);
		// if (onlyUpdateSummaryData == false)
		bool L_3 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920_inline(__this, /*hidden argument*/NULL);
		if (L_3)
		{
			goto IL_0069;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		V_1 = 0;
		goto IL_0064;
	}

IL_0030:
	{
		// lastBonePositions[boneIndex] = bonePositions[boneIndex];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_5 = V_1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(L_5), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_9);
		// lastBoneRotations[boneIndex] = boneRotations[boneIndex];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_10 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_11 = V_1;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_12 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_13 = V_1;
		NullCheck(L_12);
		int32_t L_14 = L_13;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = (L_12)->GetAt(static_cast<il2cpp_array_size_t>(L_14));
		NullCheck(L_10);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(L_11), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_15);
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_16 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_16, (int32_t)1));
	}

IL_0064:
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_17 = V_1;
		if ((((int32_t)L_17) < ((int32_t)((int32_t)31))))
		{
			goto IL_0030;
		}
	}

IL_0069:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		V_2 = 0;
		goto IL_0081;
	}

IL_006d:
	{
		// lastFingerCurls[fingerIndex] = fingerCurls[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_18 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline(__this, /*hidden argument*/NULL);
		int32_t L_19 = V_2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_20 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		int32_t L_21 = V_2;
		NullCheck(L_20);
		int32_t L_22 = L_21;
		float L_23 = (L_20)->GetAt(static_cast<il2cpp_array_size_t>(L_22));
		NullCheck(L_18);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(L_19), (float)L_23);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_24 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_24, (int32_t)1));
	}

IL_0081:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_25 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_26 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_26);
		if ((((int32_t)L_25) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_26)->max_length)))))))
		{
			goto IL_006d;
		}
	}
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		V_3 = 0;
		goto IL_00a3;
	}

IL_008f:
	{
		// lastFingerSplays[fingerIndex] = fingerSplays[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_27 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline(__this, /*hidden argument*/NULL);
		int32_t L_28 = V_3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_29 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		int32_t L_30 = V_3;
		NullCheck(L_29);
		int32_t L_31 = L_30;
		float L_32 = (L_29)->GetAt(static_cast<il2cpp_array_size_t>(L_31));
		NullCheck(L_27);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(L_28), (float)L_32);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_33 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_33, (int32_t)1));
	}

IL_00a3:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_34 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_35 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_35);
		if ((((int32_t)L_34) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_35)->max_length)))))))
		{
			goto IL_008f;
		}
	}
	{
		// base.UpdateValue(true);
		SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447(__this, (bool)1, /*hidden argument*/NULL);
		// poseChanged = changed;
		bool L_36 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		SteamVR_Action_Skeleton_Source_set_poseChanged_m91451416B46D3849E217C7FBAAA96F28364E94B0_inline(__this, L_36, /*hidden argument*/NULL);
		// EVRInputError error = OpenVR.Input.GetSkeletalActionData(handle, ref skeletonActionData, skeletonActionData_size);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_37 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_38 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 * L_39 = __this->get_address_of_skeletonActionData_61();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_40 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		NullCheck(L_37);
		int32_t L_41 = CVRInput_GetSkeletalActionData_m89A0A431E11AD9772CA2724D8F45583146BB9C66(L_37, L_38, (InputSkeletalActionData_t_tA39C0A0FE4DBB8966D852B4FFC7D3A6D8F887430 *)L_39, L_40, /*hidden argument*/NULL);
		V_0 = L_41;
		// if (error != EVRInputError.None)
		int32_t L_42 = V_0;
		if (!L_42)
		{
			goto IL_0133;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalActionData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_43 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_44 = L_43;
		NullCheck(L_44);
		ArrayElementTypeCheck (L_44, _stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_45 = L_44;
		String_t* L_46 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_45);
		ArrayElementTypeCheck (L_45, L_46);
		(L_45)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_46);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_47 = L_45;
		NullCheck(L_47);
		ArrayElementTypeCheck (L_47, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_47)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_48 = L_47;
		RuntimeObject * L_49 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_49);
		String_t* L_50 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_49);
		V_0 = *(int32_t*)UnBox(L_49);
		NullCheck(L_48);
		ArrayElementTypeCheck (L_48, L_50);
		(L_48)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_50);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_51 = L_48;
		NullCheck(L_51);
		ArrayElementTypeCheck (L_51, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_51)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_52 = L_51;
		uint64_t L_53 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_4 = L_53;
		String_t* L_54 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_52);
		ArrayElementTypeCheck (L_52, L_54);
		(L_52)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_54);
		String_t* L_55 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_52, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_55, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_0133:
	{
		// if (active)
		bool L_56 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_56)
		{
			goto IL_0330;
		}
	}
	{
		// if (onlyUpdateSummaryData == false)
		bool L_57 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920_inline(__this, /*hidden argument*/NULL);
		if (L_57)
		{
			goto IL_0323;
		}
	}
	{
		// error = OpenVR.Input.GetSkeletalBoneData(handle, skeletalTransformSpace, rangeOfMotion, tempBoneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_58 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_59 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		int32_t L_60 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline(__this, /*hidden argument*/NULL);
		int32_t L_61 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline(__this, /*hidden argument*/NULL);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_62 = __this->get_tempBoneTransforms_60();
		NullCheck(L_58);
		int32_t L_63 = CVRInput_GetSkeletalBoneData_mAE9C9E6EA4EBA38EF94D4849A702F5519E343CF7(L_58, L_59, L_60, L_61, L_62, /*hidden argument*/NULL);
		V_0 = L_63;
		// if (error != EVRInputError.None)
		int32_t L_64 = V_0;
		if (!L_64)
		{
			goto IL_01c2;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalBoneData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_65 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_66 = L_65;
		NullCheck(L_66);
		ArrayElementTypeCheck (L_66, _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		(L_66)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_67 = L_66;
		String_t* L_68 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_67);
		ArrayElementTypeCheck (L_67, L_68);
		(L_67)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_68);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_69 = L_67;
		NullCheck(L_69);
		ArrayElementTypeCheck (L_69, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_69)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_70 = L_69;
		RuntimeObject * L_71 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_71);
		String_t* L_72 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_71);
		V_0 = *(int32_t*)UnBox(L_71);
		NullCheck(L_70);
		ArrayElementTypeCheck (L_70, L_72);
		(L_70)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_72);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_73 = L_70;
		NullCheck(L_73);
		ArrayElementTypeCheck (L_73, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_73)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_74 = L_73;
		uint64_t L_75 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_4 = L_75;
		String_t* L_76 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_74);
		ArrayElementTypeCheck (L_74, L_76);
		(L_74)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_76);
		String_t* L_77 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_74, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_77, /*hidden argument*/NULL);
	}

IL_01c2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_5 = 0;
		goto IL_02f2;
	}

IL_01ca:
	{
		// bonePositions[boneIndex].x = -tempBoneTransforms[boneIndex].position.v0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_78 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_79 = V_5;
		NullCheck(L_78);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_80 = __this->get_tempBoneTransforms_60();
		int32_t L_81 = V_5;
		NullCheck(L_80);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_82 = ((L_80)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_81)))->get_address_of_position_0();
		float L_83 = L_82->get_v0_0();
		((L_78)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_79)))->set_x_2(((-L_83)));
		// bonePositions[boneIndex].y = tempBoneTransforms[boneIndex].position.v1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_84 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_85 = V_5;
		NullCheck(L_84);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_86 = __this->get_tempBoneTransforms_60();
		int32_t L_87 = V_5;
		NullCheck(L_86);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_88 = ((L_86)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_87)))->get_address_of_position_0();
		float L_89 = L_88->get_v1_1();
		((L_84)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_85)))->set_y_3(L_89);
		// bonePositions[boneIndex].z = tempBoneTransforms[boneIndex].position.v2;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_90 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_91 = V_5;
		NullCheck(L_90);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_92 = __this->get_tempBoneTransforms_60();
		int32_t L_93 = V_5;
		NullCheck(L_92);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_94 = ((L_92)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_93)))->get_address_of_position_0();
		float L_95 = L_94->get_v2_2();
		((L_90)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_91)))->set_z_4(L_95);
		// boneRotations[boneIndex].x = tempBoneTransforms[boneIndex].orientation.x;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_96 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_97 = V_5;
		NullCheck(L_96);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_98 = __this->get_tempBoneTransforms_60();
		int32_t L_99 = V_5;
		NullCheck(L_98);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_100 = ((L_98)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_99)))->get_address_of_orientation_1();
		float L_101 = L_100->get_x_1();
		((L_96)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_97)))->set_x_0(L_101);
		// boneRotations[boneIndex].y = -tempBoneTransforms[boneIndex].orientation.y;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_102 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_103 = V_5;
		NullCheck(L_102);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_104 = __this->get_tempBoneTransforms_60();
		int32_t L_105 = V_5;
		NullCheck(L_104);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_106 = ((L_104)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_105)))->get_address_of_orientation_1();
		float L_107 = L_106->get_y_2();
		((L_102)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_103)))->set_y_1(((-L_107)));
		// boneRotations[boneIndex].z = -tempBoneTransforms[boneIndex].orientation.z;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_108 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_109 = V_5;
		NullCheck(L_108);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_110 = __this->get_tempBoneTransforms_60();
		int32_t L_111 = V_5;
		NullCheck(L_110);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_112 = ((L_110)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_111)))->get_address_of_orientation_1();
		float L_113 = L_112->get_z_3();
		((L_108)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_109)))->set_z_2(((-L_113)));
		// boneRotations[boneIndex].w = tempBoneTransforms[boneIndex].orientation.w;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_114 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_115 = V_5;
		NullCheck(L_114);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_116 = __this->get_tempBoneTransforms_60();
		int32_t L_117 = V_5;
		NullCheck(L_116);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_118 = ((L_116)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_117)))->get_address_of_orientation_1();
		float L_119 = L_118->get_w_0();
		((L_114)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_115)))->set_w_3(L_119);
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_120 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_120, (int32_t)1));
	}

IL_02f2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_121 = V_5;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_122 = __this->get_tempBoneTransforms_60();
		NullCheck(L_122);
		if ((((int32_t)L_121) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_122)->max_length)))))))
		{
			goto IL_01ca;
		}
	}
	{
		// boneRotations[0] = SteamVR_Action_Skeleton.steamVRFixUpRotation * boneRotations[0];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_123 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_124 = ((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->get_steamVRFixUpRotation_7();
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_125 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_125);
		int32_t L_126 = 0;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_127 = (L_125)->GetAt(static_cast<il2cpp_array_size_t>(L_126));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_128 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_124, L_127, /*hidden argument*/NULL);
		NullCheck(L_123);
		(L_123)->SetAt(static_cast<il2cpp_array_size_t>(0), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_128);
	}

IL_0323:
	{
		// UpdateSkeletalSummaryData(summaryDataType, true);
		int32_t L_129 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2(__this, L_129, (bool)1, /*hidden argument*/NULL);
	}

IL_0330:
	{
		// if (changed == false)
		bool L_130 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (L_130)
		{
			goto IL_03b4;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_6 = 0;
		goto IL_03a8;
	}

IL_033d:
	{
		// if (Vector3.Distance(lastBonePositions[boneIndex], bonePositions[boneIndex]) > changeTolerance)
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_131 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_132 = V_6;
		NullCheck(L_131);
		int32_t L_133 = L_132;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_134 = (L_131)->GetAt(static_cast<il2cpp_array_size_t>(L_133));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_135 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_136 = V_6;
		NullCheck(L_135);
		int32_t L_137 = L_136;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_138 = (L_135)->GetAt(static_cast<il2cpp_array_size_t>(L_137));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_139 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_134, L_138, /*hidden argument*/NULL);
		float L_140 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		if ((!(((float)L_139) > ((float)L_140))))
		{
			goto IL_036d;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_03b4;
	}

IL_036d:
	{
		// if (Mathf.Abs(Quaternion.Angle(lastBoneRotations[boneIndex], boneRotations[boneIndex])) > changeTolerance)
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_141 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_142 = V_6;
		NullCheck(L_141);
		int32_t L_143 = L_142;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_144 = (L_141)->GetAt(static_cast<il2cpp_array_size_t>(L_143));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_145 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_146 = V_6;
		NullCheck(L_145);
		int32_t L_147 = L_146;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_148 = (L_145)->GetAt(static_cast<il2cpp_array_size_t>(L_147));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		float L_149 = Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1(L_144, L_148, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_150 = fabsf(L_149);
		float L_151 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		if ((!(((float)L_150) > ((float)L_151))))
		{
			goto IL_03a2;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_03b4;
	}

IL_03a2:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_152 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_152, (int32_t)1));
	}

IL_03a8:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_153 = V_6;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_154 = __this->get_tempBoneTransforms_60();
		NullCheck(L_154);
		if ((((int32_t)L_153) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_154)->max_length)))))))
		{
			goto IL_033d;
		}
	}

IL_03b4:
	{
		// if (changed)
		bool L_155 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_155)
		{
			goto IL_03c7;
		}
	}
	{
		// changedTime = Time.realtimeSinceStartup;
		float L_156 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, L_156, /*hidden argument*/NULL);
	}

IL_03c7:
	{
		// if (skipStateAndEventUpdates == false)
		bool L_157 = ___skipStateAndEventUpdates0;
		if (L_157)
		{
			goto IL_03d0;
		}
	}
	{
		// CheckAndSendEvents();
		VirtActionInvoker0::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents() */, __this);
	}

IL_03d0:
	{
		// }
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton_Source::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_boneCount_m993C474DB459FA2B9A75B36F266729761AF99FFC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t V_0 = 0;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// uint boneCount = 0;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetBoneCount(handle, ref boneCount);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetBoneCount_m2D8616427315CB0D0C2C46CA302B10E51E5CB43E(L_0, L_1, (uint32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		if (!L_3)
		{
			goto IL_006a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneCount error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_4 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = L_4;
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		String_t* L_7 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_6;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		RuntimeObject * L_10 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_10);
		String_t* L_11 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_10);
		V_1 = *(int32_t*)UnBox(L_10);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_11);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_11);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_9;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		uint64_t L_14 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_2 = L_14;
		String_t* L_15 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_15);
		String_t* L_16 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_13, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_16, /*hidden argument*/NULL);
	}

IL_006a:
	{
		// return boneCount;
		uint32_t L_17 = V_0;
		return L_17;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_get_boneHierarchy_mEB8E9840922D07A185E20B6DC5BF23BABE6E36CE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public int[] boneHierarchy { get { return GetBoneHierarchy(); } }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_0 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneHierarchy_m87C2A7C088DCA2527B23F2054C62EB27234DFF78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// int boneCount = (int)GetBoneCount();
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C(__this, /*hidden argument*/NULL);
		// int[] parentIndicies = new int[boneCount];
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// EVRInputError error = OpenVR.Input.GetBoneHierarchy(handle, parentIndicies);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_3 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_4 = V_0;
		NullCheck(L_2);
		int32_t L_5 = CVRInput_GetBoneHierarchy_mC4643B8296FB4397833F6BB337B93B21D69312F2(L_2, L_3, L_4, /*hidden argument*/NULL);
		V_1 = L_5;
		// if (error != EVRInputError.None)
		int32_t L_6 = V_1;
		if (!L_6)
		{
			goto IL_0073;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneHierarchy error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_7;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		String_t* L_10 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_10);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_9;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		RuntimeObject * L_13 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_13);
		String_t* L_14 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_13);
		V_1 = *(int32_t*)UnBox(L_13);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_14);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_12;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		uint64_t L_17 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_2 = L_17;
		String_t* L_18 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_18);
		String_t* L_19 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_16, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_19, /*hidden argument*/NULL);
	}

IL_0073:
	{
		// return parentIndicies;
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_20 = V_0;
		return L_20;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m67234F0D980501AD00E029B0B30415B8F18856F9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneName_m67234F0D980501AD00E029B0B30415B8F18856F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t * V_0 = NULL;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// StringBuilder stringBuilder = new StringBuilder(255);
		StringBuilder_t * L_0 = (StringBuilder_t *)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956(L_0, ((int32_t)255), /*hidden argument*/NULL);
		V_0 = L_0;
		// EVRInputError error = OpenVR.Input.GetBoneName(handle, boneIndex, stringBuilder, 255);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_1 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_2 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		int32_t L_3 = ___boneIndex0;
		StringBuilder_t * L_4 = V_0;
		NullCheck(L_1);
		int32_t L_5 = CVRInput_GetBoneName_m8A4CA5E250538DBE77B7B80D9D3F8EA438AB2063(L_1, L_2, L_3, L_4, ((int32_t)255), /*hidden argument*/NULL);
		V_1 = L_5;
		// if (error != EVRInputError.None)
		int32_t L_6 = V_1;
		if (!L_6)
		{
			goto IL_0078;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneName error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_7;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		String_t* L_10 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_10);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_10);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_9;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		RuntimeObject * L_13 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_13);
		String_t* L_14 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_13);
		V_1 = *(int32_t*)UnBox(L_13);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_14);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_12;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		uint64_t L_17 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_2 = L_17;
		String_t* L_18 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_18);
		String_t* L_19 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_16, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_19, /*hidden argument*/NULL);
	}

IL_0078:
	{
		// return stringBuilder.ToString();
		StringBuilder_t * L_20 = V_0;
		NullCheck(L_20);
		String_t* L_21 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_20);
		return L_21;
	}
}
// SteamVR_Utils_RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetReferenceTransforms_mD97ED9032334370252095D9ABCED25D4D5533B92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_0 = NULL;
	VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* V_1 = NULL;
	int32_t V_2 = 0;
	uint64_t V_3 = 0;
	int32_t V_4 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	{
		// SteamVR_Utils.RigidTransform[] transforms = new SteamVR_Utils.RigidTransform[GetBoneCount()];
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m4EC7F17792380A78FF5B7699E35FB98ED5081E8C(__this, /*hidden argument*/NULL);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_1 = (RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)SZArrayNew(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// VRBoneTransform_t[] boneTransforms = new VRBoneTransform_t[transforms.Length];
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_2 = V_0;
		NullCheck(L_2);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_3 = (VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)SZArrayNew(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length)))));
		V_1 = L_3;
		// EVRInputError error = OpenVR.Input.GetSkeletalReferenceTransforms(handle, transformSpace, referencePose, boneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		int32_t L_6 = ___transformSpace0;
		int32_t L_7 = ___referencePose1;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_8 = V_1;
		NullCheck(L_4);
		int32_t L_9 = CVRInput_GetSkeletalReferenceTransforms_m917C75E8B7E3378FE568EBFD4B594C9731FA0B9B(L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		V_2 = L_9;
		// if (error != EVRInputError.None)
		int32_t L_10 = V_2;
		if (!L_10)
		{
			goto IL_007e;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalReferenceTransforms error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		RuntimeObject * L_17 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_2));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_2 = *(int32_t*)UnBox(L_17);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		uint64_t L_21 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_3 = L_21;
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
	}

IL_007e:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		V_4 = 0;
		goto IL_012c;
	}

IL_0086:
	{
		// Vector3 position = new Vector3(-boneTransforms[transformIndex].position.v0, boneTransforms[transformIndex].position.v1, boneTransforms[transformIndex].position.v2);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_24 = V_1;
		int32_t L_25 = V_4;
		NullCheck(L_24);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_26 = ((L_24)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_25)))->get_address_of_position_0();
		float L_27 = L_26->get_v0_0();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_28 = V_1;
		int32_t L_29 = V_4;
		NullCheck(L_28);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_30 = ((L_28)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_29)))->get_address_of_position_0();
		float L_31 = L_30->get_v1_1();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_32 = V_1;
		int32_t L_33 = V_4;
		NullCheck(L_32);
		HmdVector4_t_t97F0B9E146F0A0E38B243B3317E4B1095A8DD0C9 * L_34 = ((L_32)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_33)))->get_address_of_position_0();
		float L_35 = L_34->get_v2_2();
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_5), ((-L_27)), L_31, L_35, /*hidden argument*/NULL);
		// Quaternion rotation = new Quaternion(boneTransforms[transformIndex].orientation.x, -boneTransforms[transformIndex].orientation.y, -boneTransforms[transformIndex].orientation.z, boneTransforms[transformIndex].orientation.w);
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_36 = V_1;
		int32_t L_37 = V_4;
		NullCheck(L_36);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_38 = ((L_36)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_37)))->get_address_of_orientation_1();
		float L_39 = L_38->get_x_1();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_40 = V_1;
		int32_t L_41 = V_4;
		NullCheck(L_40);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_42 = ((L_40)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_41)))->get_address_of_orientation_1();
		float L_43 = L_42->get_y_2();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_44 = V_1;
		int32_t L_45 = V_4;
		NullCheck(L_44);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_46 = ((L_44)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_45)))->get_address_of_orientation_1();
		float L_47 = L_46->get_z_3();
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_48 = V_1;
		int32_t L_49 = V_4;
		NullCheck(L_48);
		HmdQuaternionf_t_t83752025A54692367798FA15BDC82F30F4D97C11 * L_50 = ((L_48)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_49)))->get_address_of_orientation_1();
		float L_51 = L_50->get_w_0();
		Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_6), L_39, ((-L_43)), ((-L_47)), L_51, /*hidden argument*/NULL);
		// transforms[transformIndex] = new SteamVR_Utils.RigidTransform(position, rotation);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_52 = V_0;
		int32_t L_53 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = V_5;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_55 = V_6;
		RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  L_56;
		memset((&L_56), 0, sizeof(L_56));
		RigidTransform__ctor_m8A80800C27705F4AF5CA6D008A8B6A74AFCCA1F2((&L_56), L_54, L_55, /*hidden argument*/NULL);
		NullCheck(L_52);
		(L_52)->SetAt(static_cast<il2cpp_array_size_t>(L_53), (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 )L_56);
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_57 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_57, (int32_t)1));
	}

IL_012c:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_58 = V_4;
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_59 = V_1;
		NullCheck(L_59);
		if ((((int32_t)L_58) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_59)->max_length)))))))
		{
			goto IL_0086;
		}
	}
	{
		// if (transforms.Length > 0)
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_60 = V_0;
		NullCheck(L_60);
		if (!(((RuntimeArray*)L_60)->max_length))
		{
			goto IL_016a;
		}
	}
	{
		// Quaternion qFixUpRot = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_62 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_61, /*hidden argument*/NULL);
		V_7 = L_62;
		// transforms[0].rot = qFixUpRot * transforms[0].rot;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_63 = V_0;
		NullCheck(L_63);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_64 = V_7;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_65 = V_0;
		NullCheck(L_65);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_66 = ((L_65)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->get_rot_1();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_67 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_64, L_66, /*hidden argument*/NULL);
		((L_63)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->set_rot_1(L_67);
	}

IL_016a:
	{
		// return transforms;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_68 = V_0;
		return L_68;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mD592F4C9B67DBFB75FD15DF4755E51FC24C32769 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTrackingLevel skeletalTrackingLevel { get { return GetSkeletalTrackingLevel(); } }
		int32_t L_0 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B(__this, /*hidden argument*/NULL);
		return L_0;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mE38D26E81AA2C43A3BECB3EBEE02C2C632104C3B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	uint64_t V_2 = 0;
	{
		// EVRSkeletalTrackingLevel skeletalTrackingLevel = EVRSkeletalTrackingLevel.VRSkeletalTracking_Estimated;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetSkeletalTrackingLevel(handle, ref skeletalTrackingLevel);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetSkeletalTrackingLevel_m7A1E94ED9540ABE0D8A58936E3FDDD6F5558B219(L_0, L_1, (int32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		if (!L_3)
		{
			goto IL_006a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalTrackingLevel error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_4 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = L_4;
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		String_t* L_7 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, L_7);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = L_6;
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		RuntimeObject * L_10 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_10);
		String_t* L_11 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_10);
		V_1 = *(int32_t*)UnBox(L_10);
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, L_11);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_11);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_9;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		uint64_t L_14 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_2 = L_14;
		String_t* L_15 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_15);
		String_t* L_16 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_13, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_16, /*hidden argument*/NULL);
	}

IL_006a:
	{
		// return skeletalTrackingLevel;
		int32_t L_17 = V_0;
		return L_17;
	}
}
// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  SteamVR_Action_Skeleton_Source_GetSkeletalSummaryData_m0DAFEAB1629AF85F54F616FF08013251AC1281CF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	{
		// UpdateSkeletalSummaryData(summaryType, force);
		int32_t L_0 = ___summaryType0;
		bool L_1 = ___force1;
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2(__this, L_0, L_1, /*hidden argument*/NULL);
		// return skeletalSummaryData;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831  L_2 = __this->get_skeletalSummaryData_57();
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m66FD26ED63C98F872AB1DB6810616785C96BE3A2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	{
		// if (force || this.summaryDataType != summaryDataType && active)
		bool L_0 = ___force1;
		if (L_0)
		{
			goto IL_001f;
		}
	}
	{
		int32_t L_1 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_1) == ((int32_t)L_2)))
		{
			goto IL_0137;
		}
	}
	{
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_3)
		{
			goto IL_0137;
		}
	}

IL_001f:
	{
		// EVRInputError error = OpenVR.Input.GetSkeletalSummaryData(handle, summaryType, ref skeletalSummaryData);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		int32_t L_6 = ___summaryType0;
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_7 = __this->get_address_of_skeletalSummaryData_57();
		NullCheck(L_4);
		int32_t L_8 = CVRInput_GetSkeletalSummaryData_mCF15CA558E142D63A09747514588928C6D7152F0(L_4, L_5, L_6, (VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 *)L_7, /*hidden argument*/NULL);
		V_0 = L_8;
		// if (error != EVRInputError.None)
		int32_t L_9 = V_0;
		if (!L_9)
		{
			goto IL_008c;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalSummaryData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		RuntimeObject * L_16 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		uint64_t L_20 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_1 = L_20;
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
	}

IL_008c:
	{
		// fingerCurls[0] = skeletalSummaryData.flFingerCurl0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_23 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_24 = __this->get_address_of_skeletalSummaryData_57();
		float L_25 = L_24->get_flFingerCurl0_0();
		NullCheck(L_23);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_25);
		// fingerCurls[1] = skeletalSummaryData.flFingerCurl1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_26 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_27 = __this->get_address_of_skeletalSummaryData_57();
		float L_28 = L_27->get_flFingerCurl1_1();
		NullCheck(L_26);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_28);
		// fingerCurls[2] = skeletalSummaryData.flFingerCurl2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_29 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_30 = __this->get_address_of_skeletalSummaryData_57();
		float L_31 = L_30->get_flFingerCurl2_2();
		NullCheck(L_29);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_31);
		// fingerCurls[3] = skeletalSummaryData.flFingerCurl3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_32 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_33 = __this->get_address_of_skeletalSummaryData_57();
		float L_34 = L_33->get_flFingerCurl3_3();
		NullCheck(L_32);
		(L_32)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_34);
		// fingerCurls[4] = skeletalSummaryData.flFingerCurl4;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_35 = SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_36 = __this->get_address_of_skeletalSummaryData_57();
		float L_37 = L_36->get_flFingerCurl4_4();
		NullCheck(L_35);
		(L_35)->SetAt(static_cast<il2cpp_array_size_t>(4), (float)L_37);
		// fingerSplays[0] = skeletalSummaryData.flFingerSplay0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_38 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_39 = __this->get_address_of_skeletalSummaryData_57();
		float L_40 = L_39->get_flFingerSplay0_5();
		NullCheck(L_38);
		(L_38)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_40);
		// fingerSplays[1] = skeletalSummaryData.flFingerSplay1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_41 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_42 = __this->get_address_of_skeletalSummaryData_57();
		float L_43 = L_42->get_flFingerSplay1_6();
		NullCheck(L_41);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_43);
		// fingerSplays[2] = skeletalSummaryData.flFingerSplay2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_44 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_45 = __this->get_address_of_skeletalSummaryData_57();
		float L_46 = L_45->get_flFingerSplay2_7();
		NullCheck(L_44);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_46);
		// fingerSplays[3] = skeletalSummaryData.flFingerSplay3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_47 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t87AC6F4E8AF2425D2C62EF21012A818A8120B831 * L_48 = __this->get_address_of_skeletalSummaryData_57();
		float L_49 = L_48->get_flFingerSplay3_8();
		NullCheck(L_47);
		(L_47)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_49);
	}

IL_0137:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::CheckAndSendEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_CheckAndSendEvents_mA17AE6BAD4218E6BA1D54DF842DD117B20F8F115 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// if (trackingState != lastTrackingState && onTrackingChanged != null)
		int32_t L_0 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_002d;
		}
	}
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = __this->get_onTrackingChanged_41();
		if (!L_2)
		{
			goto IL_002d;
		}
	}
	{
		// onTrackingChanged.Invoke(skeletonAction, trackingState);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = __this->get_onTrackingChanged_41();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_4 = __this->get_skeletonAction_59();
		int32_t L_5 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		NullCheck(L_3);
		TrackingChangeHandler_Invoke_m1F5CBD749F6D72B0368116228975ED75A322FAF9(L_3, L_4, L_5, /*hidden argument*/NULL);
	}

IL_002d:
	{
		// if (poseIsValid != lastPoseIsValid && onValidPoseChanged != null)
		bool L_6 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(__this, /*hidden argument*/NULL);
		bool L_7 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_6) == ((int32_t)L_7)))
		{
			goto IL_005a;
		}
	}
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = __this->get_onValidPoseChanged_42();
		if (!L_8)
		{
			goto IL_005a;
		}
	}
	{
		// onValidPoseChanged.Invoke(skeletonAction, poseIsValid);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = __this->get_onValidPoseChanged_42();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_10 = __this->get_skeletonAction_59();
		bool L_11 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(__this, /*hidden argument*/NULL);
		NullCheck(L_9);
		ValidPoseChangeHandler_Invoke_mD8DAEE4D2F6111ED348DE9E66E194F66E2E89024(L_9, L_10, L_11, /*hidden argument*/NULL);
	}

IL_005a:
	{
		// if (deviceIsConnected != lastDeviceIsConnected && onDeviceConnectedChanged != null)
		bool L_12 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(__this, /*hidden argument*/NULL);
		bool L_13 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_12) == ((int32_t)L_13)))
		{
			goto IL_0087;
		}
	}
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_14 = __this->get_onDeviceConnectedChanged_43();
		if (!L_14)
		{
			goto IL_0087;
		}
	}
	{
		// onDeviceConnectedChanged.Invoke(skeletonAction, deviceIsConnected);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_15 = __this->get_onDeviceConnectedChanged_43();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_16 = __this->get_skeletonAction_59();
		bool L_17 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(__this, /*hidden argument*/NULL);
		NullCheck(L_15);
		DeviceConnectedChangeHandler_Invoke_mFCAC042EA7E128B43D041E89C436CFAF4C340032(L_15, L_16, L_17, /*hidden argument*/NULL);
	}

IL_0087:
	{
		// if (changed && onChange != null)
		bool L_18 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_18)
		{
			goto IL_00a8;
		}
	}
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_19 = __this->get_onChange_39();
		if (!L_19)
		{
			goto IL_00a8;
		}
	}
	{
		// onChange.Invoke(skeletonAction);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_20 = __this->get_onChange_39();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_21 = __this->get_skeletonAction_59();
		NullCheck(L_20);
		ChangeHandler_Invoke_m68EBE17205B49F58CC18575D9407E20E163CBE66(L_20, L_21, /*hidden argument*/NULL);
	}

IL_00a8:
	{
		// if (active != lastActive && onActiveChange != null)
		bool L_22 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		bool L_23 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		if ((((int32_t)L_22) == ((int32_t)L_23)))
		{
			goto IL_00d5;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_24 = __this->get_onActiveChange_37();
		if (!L_24)
		{
			goto IL_00d5;
		}
	}
	{
		// onActiveChange.Invoke(skeletonAction, active);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_25 = __this->get_onActiveChange_37();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_26 = __this->get_skeletonAction_59();
		bool L_27 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		NullCheck(L_25);
		ActiveChangeHandler_Invoke_m91B4ED8236F4EDF7B0D28988B02B1D9AC6C3A86A(L_25, L_26, L_27, /*hidden argument*/NULL);
	}

IL_00d5:
	{
		// if (activeBinding != lastActiveBinding && onActiveBindingChange != null)
		bool L_28 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		bool L_29 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		if ((((int32_t)L_28) == ((int32_t)L_29)))
		{
			goto IL_0102;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_30 = __this->get_onActiveBindingChange_38();
		if (!L_30)
		{
			goto IL_0102;
		}
	}
	{
		// onActiveBindingChange.Invoke(skeletonAction, activeBinding);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_31 = __this->get_onActiveBindingChange_38();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_32 = __this->get_skeletonAction_59();
		bool L_33 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_31);
		ActiveChangeHandler_Invoke_m91B4ED8236F4EDF7B0D28988B02B1D9AC6C3A86A(L_31, L_32, L_33, /*hidden argument*/NULL);
	}

IL_0102:
	{
		// if (onUpdate != null)
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_34 = __this->get_onUpdate_40();
		if (!L_34)
		{
			goto IL_011b;
		}
	}
	{
		// onUpdate.Invoke(skeletonAction);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_35 = __this->get_onUpdate_40();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_36 = __this->get_skeletonAction_59();
		NullCheck(L_35);
		UpdateHandler_Invoke_mF1980FE6994D9662F4BAC4C3FB5DB38A1DD1FF29(L_35, L_36, /*hidden argument*/NULL);
	}

IL_011b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__ctor_mFC568147EA2C28081C0956D1830836B71530D0B3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source__ctor_mFC568147EA2C28081C0956D1830836B71530D0B3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected VRBoneTransform_t[] tempBoneTransforms = new VRBoneTransform_t[SteamVR_Action_Skeleton.numBones];
		VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B* L_0 = (VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B*)SZArrayNew(VRBoneTransform_tU5BU5D_tF1B282BA15929E716F8A18D4793B83AC01C1C88B_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		__this->set_tempBoneTransforms_60(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__cctor_m2A8E4EEA53B06E906C8F0A76AE53800CDBBD9B5D (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Action_Skeleton_Source Valve.VR.SteamVR_Action_Skeleton_Source_Map::GetSourceElementForIndexer(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Skeleton_Source_Map_GetSourceElementForIndexer_mFB38E3EBD97606F62D6A3960F54D1C320CCEBD4E (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	{
		// return sources[0]; //just in case somebody tries to access a different element, redirect them to the correct one.
		SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* L_0 = ((SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *)__this)->get_sources_7();
		NullCheck(L_0);
		int32_t L_1 = 0;
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Map__ctor_m69133E0B86EA755338F18B76A09F13A18570204A (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Map__ctor_m69133E0B86EA755338F18B76A09F13A18570204A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Pose_Source_Map_1__ctor_m46CC8AADAF802355D940EB7B8E1F27836A7B4476(__this, /*hidden argument*/SteamVR_Action_Pose_Source_Map_1__ctor_m46CC8AADAF802355D940EB7B8E1F27836A7B4476_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get { return action.fullPath; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		String_t* L_1 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_0);
		return L_1;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public ulong handle { get { return action.handle; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		uint64_t L_1 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get { return action.actionSet; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_direction_mDB8ACACE7D1530509D256AD658745A03218C0572 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get { return action.direction; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		int32_t L_1 = VirtFuncInvoker0< int32_t >::Invoke(20 /* Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action::get_direction() */, L_0);
		return L_1;
	}
}
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_mCA804B7275EED0C19F247767BCC22B7F639A3175 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_m4E3E3DD854D4B7384E415E8BD0F66E880BB97A3E (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public bool setActive { get { return actionSet.IsActive(inputSource); } }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		bool L_2 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	{
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		__this->set_action_2(L_0);
		// inputSource = forInputSource;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_set_inputSource_mCA804B7275EED0C19F247767BCC22B7F639A3175_inline(__this, L_1, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source__ctor_m50ABEE6BD7F519AB9E0296103A69073EEA2D6576 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Action_Source() { }
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		// public SteamVR_Action_Source() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// inputSourceHandle = SteamVR_Input_Source.GetHandle(inputSource);
		int32_t L_0 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_1 = SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185(L_0, /*hidden argument*/NULL);
		__this->set_inputSourceHandle_1(L_1);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_mBB40F4301664B3074825255DA6E51B5E02F93463 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_Map_get_handle_mDD116BA67A37900EC7D7FBB831D8C6FD1BA2903D (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = __this->get_U3ChandleU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mB5B6B8E56BCC552963E91E2748DF8CC04BDC979A (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_Map_get_actionSet_mE10477F66D710B36A4DB0BDEF9DC7788CD86D893 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_U3CactionSetU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_m8D8A292258A3B69B920DED592F2BD44A259EBAA9 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_get_direction_m57FCD20566320667DDD47CCF0743E7AF33971413 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = __this->get_U3CdirectionU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m4E65637F7F50E116169B2CFB6EBF5A2583D902F2 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::PreInitialize(Valve.VR.SteamVR_Action,System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_PreInitialize_m39C648952C2AFF5056406BD4D62DCC94D5D15CF8 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, String_t* ___actionPath1, bool ___throwErrors2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_PreInitialize_m39C648952C2AFF5056406BD4D62DCC94D5D15CF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* V_0 = NULL;
	int32_t V_1 = 0;
	{
		// fullPath = actionPath;
		String_t* L_0 = ___actionPath1;
		SteamVR_Action_Source_Map_set_fullPath_mBB40F4301664B3074825255DA6E51B5E02F93463_inline(__this, L_0, /*hidden argument*/NULL);
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ___wrappingAction0;
		__this->set_action_4(L_1);
		// actionSet = SteamVR_Input.GetActionSetFromPath(GetActionSetPath());
		String_t* L_2 = SteamVR_Action_Source_Map_GetActionSetPath_mA1707CA47C4282036468F3EA4603C7B25963D834(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = SteamVR_Input_GetActionSetFromPath_mC36B5370364DAB9D5FFC55AB768FBC926B509306(L_2, (bool)0, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_actionSet_m8D8A292258A3B69B920DED592F2BD44A259EBAA9_inline(__this, L_3, /*hidden argument*/NULL);
		// direction = GetActionDirection();
		int32_t L_4 = SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119(__this, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_direction_m4E65637F7F50E116169B2CFB6EBF5A2583D902F2_inline(__this, L_4, /*hidden argument*/NULL);
		// SteamVR_Input_Sources[] sources = SteamVR_Input_Source.GetAllSources();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_5 = SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352(/*hidden argument*/NULL);
		V_0 = L_5;
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		V_1 = 0;
		goto IL_0044;
	}

IL_0036:
	{
		// PreinitializeMap(sources[sourceIndex], wrappingAction);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_6 = V_0;
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		int32_t L_9 = (int32_t)(L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_10 = ___wrappingAction0;
		VirtActionInvoker2< int32_t, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * >::Invoke(5 /* System.Void Valve.VR.SteamVR_Action_Source_Map::PreinitializeMap(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action) */, __this, L_9, L_10);
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_11 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1));
	}

IL_0044:
	{
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_12 = V_1;
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_13 = V_0;
		NullCheck(L_13);
		if ((((int32_t)L_12) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length)))))))
		{
			goto IL_0036;
		}
	}
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_Initialize_mF2DCDEC5F104A3F7879C6D0CE8D60483334DBAC6 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_Initialize_mF2DCDEC5F104A3F7879C6D0CE8D60483334DBAC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// ulong newHandle = 0;
		V_0 = (((int64_t)((int64_t)0)));
		// EVRInputError err = OpenVR.Input.GetActionHandle(fullPath.ToLowerInvariant(), ref newHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		String_t* L_1 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_1);
		String_t* L_2 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_1, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_3 = CVRInput_GetActionHandle_mCF28476FA77FA4AA30EFE57818D83C4F8492828F(L_0, L_2, (uint64_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_3;
		// handle = newHandle;
		uint64_t L_4 = V_0;
		SteamVR_Action_Source_Map_set_handle_mB5B6B8E56BCC552963E91E2748DF8CC04BDC979A_inline(__this, L_4, /*hidden argument*/NULL);
		// if (err != EVRInputError.None)
		int32_t L_5 = V_1;
		if (!L_5)
		{
			goto IL_0051;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetActionHandle (" + fullPath.ToLowerInvariant() + ") error: " + err.ToString());
		String_t* L_6 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_6);
		String_t* L_7 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_6, /*hidden argument*/NULL);
		RuntimeObject * L_8 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_8);
		String_t* L_9 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_8);
		V_1 = *(int32_t*)UnBox(L_8);
		String_t* L_10 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0, L_7, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45, L_9, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_10, /*hidden argument*/NULL);
	}

IL_0051:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_mA1707CA47C4282036468F3EA4603C7B25963D834 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		// int setStartIndex = actionsEndIndex + 1;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_1, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_2 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_2, ((int32_t)47), L_3, /*hidden argument*/NULL);
		// int count = setEndIndex;
		V_1 = L_4;
		// return fullPath.Substring(0, count);
		String_t* L_5 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		int32_t L_6 = V_1;
		NullCheck(L_5);
		String_t* L_7 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_5, 0, L_6, /*hidden argument*/NULL);
		return L_7;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	String_t* V_3 = NULL;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		// int setStartIndex = actionsEndIndex + 1;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_1, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_2 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_2, ((int32_t)47), L_3, /*hidden argument*/NULL);
		V_1 = L_4;
		// int directionEndIndex = fullPath.IndexOf('/', setEndIndex + 1);
		String_t* L_5 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		int32_t L_6 = V_1;
		NullCheck(L_5);
		int32_t L_7 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_5, ((int32_t)47), ((int32_t)il2cpp_codegen_add((int32_t)L_6, (int32_t)1)), /*hidden argument*/NULL);
		// int count = directionEndIndex - setEndIndex - 1;
		int32_t L_8 = V_1;
		V_2 = ((int32_t)il2cpp_codegen_subtract((int32_t)((int32_t)il2cpp_codegen_subtract((int32_t)L_7, (int32_t)L_8)), (int32_t)1));
		// string direction = fullPath.Substring(setEndIndex + 1, count);
		String_t* L_9 = SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline(__this, /*hidden argument*/NULL);
		int32_t L_10 = V_1;
		int32_t L_11 = V_2;
		NullCheck(L_9);
		String_t* L_12 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_9, ((int32_t)il2cpp_codegen_add((int32_t)L_10, (int32_t)1)), L_11, /*hidden argument*/NULL);
		V_3 = L_12;
		// if (direction == inLowered)
		String_t* L_13 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_14 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_inLowered_5();
		bool L_15 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_13, L_14, /*hidden argument*/NULL);
		if (!L_15)
		{
			goto IL_0054;
		}
	}
	{
		// return SteamVR_ActionDirections.In;
		return (int32_t)(0);
	}

IL_0054:
	{
		// else if (direction == outLowered)
		String_t* L_16 = V_3;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_17 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_outLowered_6();
		bool L_18 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_16, L_17, /*hidden argument*/NULL);
		if (!L_18)
		{
			goto IL_0063;
		}
	}
	{
		// return SteamVR_ActionDirections.Out;
		return (int32_t)(1);
	}

IL_0063:
	{
		// Debug.LogError("Could not find match for direction: " + direction);
		String_t* L_19 = V_3;
		String_t* L_20 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5, L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_20, /*hidden argument*/NULL);
		// return SteamVR_ActionDirections.In;
		return (int32_t)(0);
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__ctor_m357508E2B821CFFCA32DAA7B72C9CEC839318744 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__cctor_mF8C1CC42AFBDF717407FDEDAF6AB49577F23A171 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map__cctor_mF8C1CC42AFBDF717407FDEDAF6AB49577F23A171_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private static string inLowered = "IN".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		IL2CPP_RUNTIME_CLASS_INIT(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_0 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C);
		String_t* L_1 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C, L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_inLowered_5(L_1);
		// private static string outLowered = "OUT".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_2 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F);
		String_t* L_3 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F, L_2, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_outLowered_6(L_3);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onChange_m1F62155EA9883091580EC03275BE740C911BAAFF (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onChange_m1F62155EA9883091580EC03275BE740C911BAAFF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onChange_m869E023BEB666D8A6A7955802BA9816EE77435F6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onChange_m869E023BEB666D8A6A7955802BA9816EE77435F6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onUpdate_m2B0186EEB573726C35ED4A38486D31FFE5CBC469 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onUpdate_m2B0186EEB573726C35ED4A38486D31FFE5CBC469_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onUpdate_mAEF9FF7CC422045456A60152EC8847FEDB033ED2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onUpdate_mAEF9FF7CC422045456A60152EC8847FEDB033ED2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onAxis_m9AF8E8737CD6E677A1FBFF700F6536919762898B (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onAxis_m9AF8E8737CD6E677A1FBFF700F6536919762898B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onAxis_mC00F340345B916EA150D4AA4FF3E03F924A67584 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onAxis_mC00F340345B916EA150D4AA4FF3E03F924A67584_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveChange_m0A69F75E3DC172336397A4100CE8E9536E907131 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveChange_m0A69F75E3DC172336397A4100CE8E9536E907131_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveChange_m27F9EC8B3B7CE60AB0AD1614DEE638622F6DABE7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveChange_m27F9EC8B3B7CE60AB0AD1614DEE638622F6DABE7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveBindingChange_m15664B2ED53BB2BD17087FDB290DA192A62D91C8 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveBindingChange_m15664B2ED53BB2BD17087FDB290DA192A62D91C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveBindingChange_m28C26AEA56A5BE493976C0C18A34349E13B63029 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveBindingChange_m28C26AEA56A5BE493976C0C18A34349E13B63029_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector2 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2__ctor_mEEEA92BB27BB0513C419BAB3CB220ECBF331AF56 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2__ctor_mEEEA92BB27BB0513C419BAB3CB220ECBF331AF56_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vector2() { }
		SteamVR_Action_In_2__ctor_mD999F898F7EC32F7FF2A4DE8A4FC77CB7012CC2F(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_mD999F898F7EC32F7FF2A4DE8A4FC77CB7012CC2F_RuntimeMethod_var);
		// public SteamVR_Action_Vector2() { }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveChangeListener_m4356C2D99F90AC783F576D243573B89ECC4A0765 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveChangeListener_m4356C2D99F90AC783F576D243573B89ECC4A0765_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m77342D95999D75F33C4C1E7C1F052EA6DB22F9AE (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m77342D95999D75F33C4C1E7C1F052EA6DB22F9AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m35A2F8651583EEEA5BFBC687A94D985FFD1C9A01 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m35A2F8651583EEEA5BFBC687A94D985FFD1C9A01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3BDA480949C10CEC9D1EE308FA3A104860A5D193 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3BDA480949C10CEC9D1EE308FA3A104860A5D193_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnChangeListener(Valve.VR.SteamVR_Action_Vector2_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnChangeListener_m56C1216E50360BCA55C3A0C0EFD71D622939D3FE (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnChangeListener_m56C1216E50360BCA55C3A0C0EFD71D622939D3FE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Vector2_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnChangeListener_mBFA847AD63D1EFEBEB507A0EDB69DC8721C9C53E (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnChangeListener_mBFA847AD63D1EFEBEB507A0EDB69DC8721C9C53E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnUpdateListener(Valve.VR.SteamVR_Action_Vector2_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnUpdateListener_m26DF2290B9B1D47A4F581F149686B184C5625F18 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnUpdateListener_m26DF2290B9B1D47A4F581F149686B184C5625F18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Vector2_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnUpdateListener_m9B8C6E9BFE29429882D6118D4BDC13B441FA7FA6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnUpdateListener_m9B8C6E9BFE29429882D6118D4BDC13B441FA7FA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnAxisListener(Valve.VR.SteamVR_Action_Vector2_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnAxisListener_m5167A71DD40E61F49C0651E92F333FF72DE8F918 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnAxisListener_m5167A71DD40E61F49C0651E92F333FF72DE8F918_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Vector2_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnAxisListener_m2E5541FBF94FF3B4854220E63766E1A383126384 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnAxisListener_m2E5541FBF94FF3B4854220E63766E1A383126384_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mBA1C1038518ABB4C40774855505FB7844ECEC552 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m19FBDDF4C65A56BE9DEFBFF7D9C20ED59218FB4C (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m19FBDDF4C65A56BE9DEFBFF7D9C20ED59218FB4C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mF4DC388BA98BF545E220E94BC0C4DBF458090EB7(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mF4DC388BA98BF545E220E94BC0C4DBF458090EB7_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mFADE885B55154CAD43F1649E7EC69DA181FDBDB1 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m6F9573537B1F39ADF5C93AA6452D108C664CC943 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9858F23AEB6C3D2B98736BBD60B2ED75E533A673 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9858F23AEB6C3D2B98736BBD60B2ED75E533A673_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m5F457F225F3273FA2BF48C8FD84DF48E88E1BDB8 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m43DE295DBA352E97E0ADDF76C348978B40EA4116 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_mFB29C3120DB4B338D9465DADD73FD30E158E05AB (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m56A724C82B49A38D44B3D2B18453771AFA341B36 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m56A724C82B49A38D44B3D2B18453771AFA341B36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m6954E7C672A9CAF8A04F30F847E8BC401EE8BEE6 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mFF4992C9413970CEDCB6B9790954BA7C6C6C61B3 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mD9CA3B62E4D42C612CFE1F900C127EB2E178869C (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m0EF461A8F50FD59DC6511DC78FCD636809CF5F14 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m0EF461A8F50FD59DC6511DC78FCD636809CF5F14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m8EDE2AABE4E2E17B66505A5B5A4AAA9B72DB5DC9 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mEFB9316D6DB2AE3E0C8C6495E4F31F5AF7B96EA7 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mDAB942B37EFE85A16B58B2E6300770D04437F2C1 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m3BD5916ADDFFADD04B76A00FA7F8A73235AB5598 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m3BD5916ADDFFADD04B76A00FA7F8A73235AB5598_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mDDE7EDA6A51DE198136D8F8C7B72AAE1B07C8E8F (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onAxis_m61879208AE0900224DF6DAC2B5F9AB437F3E3F65_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onAxis_mF3D7E276BA4A72809424D8F02B91BC600C706A45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveChange_m748D7DF506E999E43D76725669A423DC02CAC2A2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveChange_mF774E29E5C6AB17CE4351C8533279C2F1685F5A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m10B03BA452F43087BBBB922DD51EF10CAE15D6BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m3A62BA01D3F897E4C7115DF360F9DE899A66EB12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onChange_m0E890E6CFC54755D7CA6271AACB94F0D16195BFC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onChange_m6B9FFEDD2003E99E2C81E03B744E35528BCABEE1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onUpdate_mF42BBDFA8EFE2D15571BE512017F7D2C8A016345_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onUpdate_m7FA21E9B212C4E869AFE43AAE5D3138799CA8320_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m2252BBEBC8C6D4A676ABF0EE270D181EBFB823BB (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m77FAC4A378FA78CC827A871984258A60FA83CAE2 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_m8D0A6407047BB76299057CF382CD612137A600F3 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1943C66837BE7929D58A91A9DFBAB4BBC2A1DB12 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_changed_m78ACD6A0F63B602F52D431CFA6093B4EE0FA3B0A (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_changed_mE5FBDB2D619AB5C4B9CC1A64408431E1106B4038 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastChanged_mC48C1CC704E7C5C348F9BFBAE9682E718FD6FC9D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastChanged_m417B2C89134DA1E9C1149EBBD128AF65524D26A2 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_activeOrigin_m0E2FC733B091514548A7F3D8E78FF62472C11E6C (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_1 = __this->get_address_of_actionData_24();
		uint64_t L_2 = L_1->get_activeOrigin_1();
		return L_2;
	}

IL_0014:
	{
		// return 0;
		return (((int64_t)((int64_t)0)));
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_lastActiveOrigin_mFD35F8515EB518EACBF6F731B72EC5533DA95C89 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_active_m4491F9814CD04DF2F202D91A08C59209B09A38CF (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}

IL_001f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_activeBinding_mD4FD9C47EE8A52843595ED902EC5D3D9583FA283 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_actionData_24();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActive_mC0586915CE1150717F2F3B3814D5883D00FF5B1A (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastActive_mCB20AD139EB2094C54801EF5EC66E2D76E533E67 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_23(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActiveBinding_mF7419A1586A8E1F8199D3BF5778F7FE13DF2D0CE (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Preinitialize_mD54D144D5346D31B95218D570EFF9EC692818236 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Preinitialize_mD54D144D5346D31B95218D570EFF9EC692818236_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		// vector2Action = (SteamVR_Action_Vector2)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vector2Action_26(((SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Initialize_mEA3978343DC5DDA279610886729C005BA2807088 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Initialize_mEA3978343DC5DDA279610886729C005BA2807088_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->set_actionData_size_10(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_UpdateValue_m46FD9956F29672FF3594957130165B620D3EFD21 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_UpdateValue_m46FD9956F29672FF3594957130165B620D3EFD21_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_2;
	memset((&V_2), 0, sizeof(V_2));
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  L_0 = __this->get_actionData_24();
		__this->set_lastActionData_25(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// lastAxis = axis;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastAxis_m77FAC4A378FA78CC827A871984258A60FA83CAE2_inline(__this, L_2, /*hidden argument*/NULL);
		// lastDelta = delta;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastDelta_m1943C66837BE7929D58A91A9DFBAB4BBC2A1DB12_inline(__this, L_3, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_6 = __this->get_address_of_actionData_24();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_7 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_8 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_9 = SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185(L_8, /*hidden argument*/NULL);
		NullCheck(L_4);
		int32_t L_10 = CVRInput_GetAnalogActionData_m363EF49EA0485B0A4FF93C37842AC2CF8D21041A(L_4, L_5, (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C *)L_6, L_7, L_9, /*hidden argument*/NULL);
		V_0 = L_10;
		// if (err != EVRInputError.None)
		int32_t L_11 = V_0;
		if (!L_11)
		{
			goto IL_00ac;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_1 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_00ac:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_25 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline(__this, L_25, /*hidden argument*/NULL);
		// axis = new Vector2(actionData.x, actionData.y);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_26 = __this->get_address_of_actionData_24();
		float L_27 = L_26->get_x_2();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_28 = __this->get_address_of_actionData_24();
		float L_29 = L_28->get_y_3();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_30), L_27, L_29, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_axis_m2252BBEBC8C6D4A676ABF0EE270D181EBFB823BB_inline(__this, L_30, /*hidden argument*/NULL);
		// delta = new Vector2(actionData.deltaX, actionData.deltaY);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_31 = __this->get_address_of_actionData_24();
		float L_32 = L_31->get_deltaX_5();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_33 = __this->get_address_of_actionData_24();
		float L_34 = L_33->get_deltaY_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_35;
		memset((&L_35), 0, sizeof(L_35));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_35), L_32, L_34, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_delta_m8D0A6407047BB76299057CF382CD612137A600F3_inline(__this, L_35, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_36 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_36)
		{
			goto IL_01d2;
		}
	}
	{
		// if (delta.magnitude > changeTolerance)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_37 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		V_2 = L_37;
		float L_38 = Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_2), /*hidden argument*/NULL);
		float L_39 = __this->get_changeTolerance_11();
		if ((!(((float)L_38) > ((float)L_39))))
		{
			goto IL_016a;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_40 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_41 = __this->get_address_of_actionData_24();
		float L_42 = L_41->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, ((float)il2cpp_codegen_add((float)L_40, (float)L_42)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_43 = __this->get_onChange_15();
		if (!L_43)
		{
			goto IL_016a;
		}
	}
	{
		// onChange.Invoke(vector2Action, inputSource, axis, delta);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_44 = __this->get_onChange_15();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_45 = __this->get_vector2Action_26();
		int32_t L_46 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_47 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_48 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_44);
		ChangeHandler_Invoke_mD9CA3B62E4D42C612CFE1F900C127EB2E178869C(L_44, L_45, L_46, L_47, L_48, /*hidden argument*/NULL);
	}

IL_016a:
	{
		// if (axis != Vector2.zero)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_49 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_50 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		bool L_51 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_49, L_50, /*hidden argument*/NULL);
		if (!L_51)
		{
			goto IL_01a7;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_52 = __this->get_onAxis_12();
		if (!L_52)
		{
			goto IL_01a7;
		}
	}
	{
		// onAxis.Invoke(vector2Action, inputSource, axis, delta);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_53 = __this->get_onAxis_12();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_54 = __this->get_vector2Action_26();
		int32_t L_55 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_56 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_57 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_53);
		AxisHandler_Invoke_mFB29C3120DB4B338D9465DADD73FD30E158E05AB(L_53, L_54, L_55, L_56, L_57, /*hidden argument*/NULL);
	}

IL_01a7:
	{
		// if (onUpdate != null)
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_58 = __this->get_onUpdate_16();
		if (!L_58)
		{
			goto IL_01d2;
		}
	}
	{
		// onUpdate.Invoke(vector2Action, inputSource, axis, delta);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_59 = __this->get_onUpdate_16();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_60 = __this->get_vector2Action_26();
		int32_t L_61 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_62 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_63 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_59);
		UpdateHandler_Invoke_mDAB942B37EFE85A16B58B2E6300770D04437F2C1(L_59, L_60, L_61, L_62, L_63, /*hidden argument*/NULL);
	}

IL_01d2:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_64 = __this->get_onActiveBindingChange_14();
		if (!L_64)
		{
			goto IL_0205;
		}
	}
	{
		bool L_65 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_66 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if ((((int32_t)L_65) == ((int32_t)L_66)))
		{
			goto IL_0205;
		}
	}
	{
		// onActiveBindingChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_67 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_68 = __this->get_vector2Action_26();
		int32_t L_69 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_70 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_67);
		ActiveChangeHandler_Invoke_m6F9573537B1F39ADF5C93AA6452D108C664CC943(L_67, L_68, L_69, L_70, /*hidden argument*/NULL);
	}

IL_0205:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_71 = __this->get_onActiveChange_13();
		if (!L_71)
		{
			goto IL_0238;
		}
	}
	{
		bool L_72 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_73 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if ((((int32_t)L_72) == ((int32_t)L_73)))
		{
			goto IL_0238;
		}
	}
	{
		// onActiveChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_74 = __this->get_onActiveChange_13();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_75 = __this->get_vector2Action_26();
		int32_t L_76 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_77 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_74);
		ActiveChangeHandler_Invoke_m6F9573537B1F39ADF5C93AA6452D108C664CC943(L_74, L_75, L_76, L_77, /*hidden argument*/NULL);
	}

IL_0238:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__ctor_m48D3C09B91B17F520133008F7722E4B4EB26F1EE (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source__ctor_m48D3C09B91B17F520133008F7722E4B4EB26F1EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__cctor_m1AFA0EE95F575480A04CE0A300836BDF1BC2067C (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Map__ctor_m8779F6CACD1A9A58ECCEE336EEC40FC287CBFE01 (SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Map__ctor_m8779F6CACD1A9A58ECCEE336EEC40FC287CBFE01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_m1C7CDFB82FBD6E95D7AF23AB9320BCCD68C5CA92(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_m1C7CDFB82FBD6E95D7AF23AB9320BCCD68C5CA92_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onChange_m99FB29754E2862967F8BD9009CDD8F59B5D112FC (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onChange_m99FB29754E2862967F8BD9009CDD8F59B5D112FC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onChange_mBA3BF7FDF2A7C02DE0DB32629D2CF110A5375206 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onChange_mBA3BF7FDF2A7C02DE0DB32629D2CF110A5375206_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onUpdate_mC6730976874F184C9AC45CDDBA4A51145E562EB5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onUpdate_mC6730976874F184C9AC45CDDBA4A51145E562EB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onUpdate_m49616C5F27B3F1F0F08E30427FF68A2AA06CDB62 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onUpdate_m49616C5F27B3F1F0F08E30427FF68A2AA06CDB62_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onAxis_mD6A4E09D264E987391E26F51543D63494DD24EEF (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onAxis_mD6A4E09D264E987391E26F51543D63494DD24EEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onAxis_mFD39E7E5FE3F6A009869F30872D651DAC960CF9F (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onAxis_mFD39E7E5FE3F6A009869F30872D651DAC960CF9F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onActiveChange_mFD6D6D7BBFDDDBAB5371E7D544A1CBA0ABE4CA18 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onActiveChange_mFD6D6D7BBFDDDBAB5371E7D544A1CBA0ABE4CA18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onActiveChange_mB126BA6BF4C9EA71ED10C37E584079216BB7F536 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onActiveChange_mB126BA6BF4C9EA71ED10C37E584079216BB7F536_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_add_onActiveBindingChange_mC4E35E2233DC7C10B75320C8A5EAF0EC207AC5D8 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_add_onActiveBindingChange_mC4E35E2233DC7C10B75320C8A5EAF0EC207AC5D8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_remove_onActiveBindingChange_m65EA244FFFCEFAE4B87F0B1E90A38F1CBE2F9C1C (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_remove_onActiveBindingChange_m65EA244FFFCEFAE4B87F0B1E90A38F1CBE2F9C1C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_axis_mF2A2E572ADC8B76D4232AED7D44A94ACD1906099_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_lastAxis_m0365F5B93BB05F9C8F59C44DA333B70C1C46F1DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_delta_m3EA8C5D174CB8D7965B2026361C94F6FF750E38C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_get_lastDelta_m1C55579E0A38F190350FF1827125EC6AC7D27606_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public Vector3 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_1 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline(L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3__ctor_m37437A0DC1654AC61B42767A3F6BE9FA2328347C (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3__ctor_m37437A0DC1654AC61B42767A3F6BE9FA2328347C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vector3() { }
		SteamVR_Action_In_2__ctor_mF9E126AD1A57CA13943CDE8404A98C0DA8FF8225(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_mF9E126AD1A57CA13943CDE8404A98C0DA8FF8225_RuntimeMethod_var);
		// public SteamVR_Action_Vector3() { }
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetAxis_mAECD5AA7DB213F313164BCF52B688A44D2466EF5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetAxisDelta_m6A8BA36DD1F6238D9EE8EF3D7E0F0C87CCE3D9C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetLastAxis_mF0C0D122C31F80A5713E739B8D04D352756A6EB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_GetLastAxisDelta_m68EA72E9F86BD55D97944438DE7173AD6DA2537D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnActiveChangeListener_m2D01DEF21993C1450F3A6DD5A1A0E13E015A16EE (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnActiveChangeListener_m2D01DEF21993C1450F3A6DD5A1A0E13E015A16EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m768C67754A7B4122AC2CA9AF3F4A6C84BF71C122 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnActiveChangeListener_m768C67754A7B4122AC2CA9AF3F4A6C84BF71C122_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mA8C945BE28CAD502B6A1BD6A72659509A206C658 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnActiveBindingChangeListener_mA8C945BE28CAD502B6A1BD6A72659509A206C658_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_m0318DB5C418AB27237EBEDD74986CEED5322FED4 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnActiveBindingChangeListener_m0318DB5C418AB27237EBEDD74986CEED5322FED4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnChangeListener(Valve.VR.SteamVR_Action_Vector3_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnChangeListener_m856C1E73A985193161F7E68E51E2E7D405CAC77D (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnChangeListener_m856C1E73A985193161F7E68E51E2E7D405CAC77D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Vector3_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnChangeListener_m8AD0A1B8695E9BBF053F3E2D4A6661F22E52BC3D (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnChangeListener_m8AD0A1B8695E9BBF053F3E2D4A6661F22E52BC3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnUpdateListener(Valve.VR.SteamVR_Action_Vector3_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnUpdateListener_mFDBD5206DBD8AE0CB95CDF5FCA769635C7BEF1A3 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnUpdateListener_mFDBD5206DBD8AE0CB95CDF5FCA769635C7BEF1A3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Vector3_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnUpdateListener_m3BB302B27358EBEF86B005C6C3BA792EDE27CB75 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnUpdateListener_m3BB302B27358EBEF86B005C6C3BA792EDE27CB75_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::AddOnAxisListener(Valve.VR.SteamVR_Action_Vector3_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_AddOnAxisListener_mFB5B81222D06CE1838A819CD31E5468593497A42 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_AddOnAxisListener_mFB5B81222D06CE1838A819CD31E5468593497A42_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Vector3_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_RemoveOnAxisListener_m54BB3A15B566FCD77B580FEB19A879EB6BAA0B19 (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_RemoveOnAxisListener_m54BB3A15B566FCD77B580FEB19A879EB6BAA0B19_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * L_0 = ((SteamVR_Action_2_t28F415525CE76571452E3FBA0A66082F9568F902 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * L_2 = SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m5AC2AE8D67AF3309F18961534AA8276D609B9C8A_RuntimeMethod_var);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mFDC86399F04D0E0B080756422443B794B9FFBC7F (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4713EBBEB02475300C221E3B1D590A50FBDCFE1D (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4713EBBEB02475300C221E3B1D590A50FBDCFE1D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mEE7832ED7C1B03D8FEB093F34B2B63974C3B5A04(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mEE7832ED7C1B03D8FEB093F34B2B63974C3B5A04_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m27F1243195DB4B4F4E589AAD0024073E1C135FA0 (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m67A19739D2E43FC88B0EA8081E3DACEE816EF2AD (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mFC1496645B04E0FA94A6D7CFDE9B46B6D0EEA42B (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mFC1496645B04E0FA94A6D7CFDE9B46B6D0EEA42B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m054C87EB5A5F3B6BA6C49408D10052ACAEA74E82 (ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_mAA8EA84267CB1D2C23C0253B590E375B9FEC43F7 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m4898437260780A1DE7497E17A30140E7081E3891 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m5CE6356122E9BD630D00B5452683EAE16AF35BA0 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m5CE6356122E9BD630D00B5452683EAE16AF35BA0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m11759D6D031B967058B2B71DB2FD823A34BD3D71 (AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mFE12D53E5E8DE907B9C42C05094F7B61A5710B7C (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m1BD4D5E5DD81C63A9C020AE470617259DBAF62EE (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mD94A911B751372C821E31CD6DD96566FFE44956E (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mD94A911B751372C821E31CD6DD96566FFE44956E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m71741F7E6E54F22FD4FA3380765C142BB5C7FE4B (ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m2D5DDD98B3936C0B986F4D645AFD6345A57B2D12 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m7B6641AC506F248A3301DE33BD7518AFE35A6A59 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *, int32_t, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector3_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector3,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector3,UnityEngine.Vector3,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mBFD7F08AC61DC5337F3BF6981E53E840CF89AC68 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * ___fromAction0, int32_t ___fromSource1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mBFD7F08AC61DC5337F3BF6981E53E840CF89AC68_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector3_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mD6474A857FB2B1EC2501BCAD0D653E49AFA3DB30 (UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onAxis_m09DA9894C1E442EB2D92595D083CD574E287150A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_0 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_1 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_2 = NULL;
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var));
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_6 = V_2;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_7 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *>((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_9 = V_0;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_9) == ((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector3_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onAxis_m0E77E9C566405FABBE20C7120A16AE551AC4B70C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_0 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_1 = NULL;
	AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * V_2 = NULL;
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_2 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779_il2cpp_TypeInfo_var));
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_6 = V_2;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_7 = V_1;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *>((AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_9 = V_0;
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_9) == ((RuntimeObject*)(AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onActiveChange_m01C18C6CC07A9423AACB55F009E6562493049DA0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onActiveChange_mEFAADD238B7127C347FCBF4D850FBD7664BEFD95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onActiveBindingChange_mC84803E228A14E7891F4B456DC5A102E2ED3956A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector3_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onActiveBindingChange_m823695F9961EF46DB2811DA5B8E68567582C639B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_0 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_1 = NULL;
	ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * V_2 = NULL;
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_2 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_6 = V_2;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_7 = V_1;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *>((ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_9 = V_0;
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onChange_m69C7AFE22DFEF6EE8205740927730B4793ABC16D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_0 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_1 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_2 = NULL;
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var));
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_6 = V_2;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_7 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *>((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_9 = V_0;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_9) == ((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector3_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onChange_m2C757953F88F1D3FCAD98F0F7D0C4EEDCE3220DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_0 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_1 = NULL;
	ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * V_2 = NULL;
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_2 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B_il2cpp_TypeInfo_var));
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_6 = V_2;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_7 = V_1;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *>((ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_9 = V_0;
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_9) == ((RuntimeObject*)(ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_add_onUpdate_mE3337890745CBF20D96EB63A6241FB545E8D7DFC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_0 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_1 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_2 = NULL;
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var));
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_6 = V_2;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_7 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *>((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_9 = V_0;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_9) == ((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector3_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_remove_onUpdate_mE4D9472A97BDCB264B875B8AFEB5E1C19187FF07_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_0 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_1 = NULL;
	UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * V_2 = NULL;
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_2 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75_il2cpp_TypeInfo_var));
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_6 = V_2;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_7 = V_1;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *>((UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_9 = V_0;
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_9) == ((RuntimeObject*)(UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_axis(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_m8D6C550660D5D6EF3AFC2376B964204B4B26C0DF (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastAxis(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m2DA773CD84278414BB2D77495722E7E288C2727C (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_delta(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m425C84C1DE5AD8F12F9F04C1E4C78452C580FE2B (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Vector3_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastDelta(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_mD5A541A52EC64B8BF321E3B9778E37647A968DD1 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_changed_m27FD9BF9FC97E30BC83073FFEDC2E54AF76BC0DF (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_changed_m0E8E663AA33C8749AE0B13926E8785921D5630A3 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastChanged_m76C887902C2FC55C44CC7C42CD159A2FED2103D8 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastChanged_m3DF8DAAAB166AEC44452CC51D43F7602544C77AB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector3_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector3_Source_get_activeOrigin_m8A7827E01B77FAAC402DF450D20DC23430ED6B38 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_1 = __this->get_address_of_actionData_24();
		uint64_t L_2 = L_1->get_activeOrigin_1();
		return L_2;
	}

IL_0014:
	{
		// return 0;
		return (((int64_t)((int64_t)0)));
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector3_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector3_Source_get_lastActiveOrigin_mAA8545BDB78F99D6E9A1487FE19BEEEE9879B44B (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_active_mFC75630249C9BC675AFAFF01D5946AFFDF427C03 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_001f;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_2, L_3, /*hidden argument*/NULL);
		return L_4;
	}

IL_001f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_activeBinding_mAD816DEB4089A3360C6C9CCD52B2FA22EC57D64D (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_actionData_24();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastActive_mAAF066B6810523B948D5DD1C055E9C11BD9FC8E1 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastActive_mD6174B8C50D61A9C1AC50341B1AC5F7C565B97CE (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_23(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector3_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector3_Source_get_lastActiveBinding_m22970E1C3A3451045F5EDDB889E90A8D7D9E3EE9 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_25();
		bool L_1 = L_0->get_bActive_0();
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Preinitialize_m4F993EE6B1E88BC3A4162D8C989D5E8B7FD3F286 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Preinitialize_m4F993EE6B1E88BC3A4162D8C989D5E8B7FD3F286_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		// vector3Action = (SteamVR_Action_Vector3)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vector3Action_26(((SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Initialize_mF6083AADD5357032AE31D4496681462FBC9379AB (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Initialize_mF6083AADD5357032AE31D4496681462FBC9379AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->get_actionData_size_10();
		if (L_0)
		{
			goto IL_0021;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_1 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_2 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_1, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_3 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->set_actionData_size_10(L_3);
	}

IL_0021:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_UpdateValue_m740BBE6FBE4887C46BCBA55A25D58A7EF5AE2171 (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_UpdateValue_m740BBE6FBE4887C46BCBA55A25D58A7EF5AE2171_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  L_0 = __this->get_actionData_24();
		__this->set_lastActionData_25(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// lastAxis = axis;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_lastAxis_m2DA773CD84278414BB2D77495722E7E288C2727C_inline(__this, L_2, /*hidden argument*/NULL);
		// lastDelta = delta;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_lastDelta_mD5A541A52EC64B8BF321E3B9778E37647A968DD1_inline(__this, L_3, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_4 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_6 = __this->get_address_of_actionData_24();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var);
		uint32_t L_7 = ((SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_8 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_9 = SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185(L_8, /*hidden argument*/NULL);
		NullCheck(L_4);
		int32_t L_10 = CVRInput_GetAnalogActionData_m363EF49EA0485B0A4FF93C37842AC2CF8D21041A(L_4, L_5, (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C *)L_6, L_7, L_9, /*hidden argument*/NULL);
		V_0 = L_10;
		// if (err != EVRInputError.None)
		int32_t L_11 = V_0;
		if (!L_11)
		{
			goto IL_00ac;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_1 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_00ac:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_25 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline(__this, L_25, /*hidden argument*/NULL);
		// axis = new Vector3(actionData.x, actionData.y, actionData.z);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_26 = __this->get_address_of_actionData_24();
		float L_27 = L_26->get_x_2();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_28 = __this->get_address_of_actionData_24();
		float L_29 = L_28->get_y_3();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_30 = __this->get_address_of_actionData_24();
		float L_31 = L_30->get_z_4();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32;
		memset((&L_32), 0, sizeof(L_32));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_32), L_27, L_29, L_31, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_axis_m8D6C550660D5D6EF3AFC2376B964204B4B26C0DF_inline(__this, L_32, /*hidden argument*/NULL);
		// delta = new Vector3(actionData.deltaX, actionData.deltaY, actionData.deltaZ);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_33 = __this->get_address_of_actionData_24();
		float L_34 = L_33->get_deltaX_5();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_35 = __this->get_address_of_actionData_24();
		float L_36 = L_35->get_deltaY_6();
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_37 = __this->get_address_of_actionData_24();
		float L_38 = L_37->get_deltaZ_7();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39;
		memset((&L_39), 0, sizeof(L_39));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_39), L_34, L_36, L_38, /*hidden argument*/NULL);
		SteamVR_Action_Vector3_Source_set_delta_m425C84C1DE5AD8F12F9F04C1E4C78452C580FE2B_inline(__this, L_39, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_40 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_40)
		{
			goto IL_01e8;
		}
	}
	{
		// if (delta.magnitude > changeTolerance)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		V_2 = L_41;
		float L_42 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		float L_43 = __this->get_changeTolerance_11();
		if ((!(((float)L_42) > ((float)L_43))))
		{
			goto IL_0180;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_44 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_45 = __this->get_address_of_actionData_24();
		float L_46 = L_45->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, ((float)il2cpp_codegen_add((float)L_44, (float)L_46)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_47 = __this->get_onChange_15();
		if (!L_47)
		{
			goto IL_0180;
		}
	}
	{
		// onChange.Invoke(vector3Action, inputSource, axis, delta);
		ChangeHandler_tA77578B2BDD50739DF7DDC003DC56CFE0E7D8E1B * L_48 = __this->get_onChange_15();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_49 = __this->get_vector3Action_26();
		int32_t L_50 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_48);
		ChangeHandler_Invoke_m1BD4D5E5DD81C63A9C020AE470617259DBAF62EE(L_48, L_49, L_50, L_51, L_52, /*hidden argument*/NULL);
	}

IL_0180:
	{
		// if (axis != Vector3.zero)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_53 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		bool L_55 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_53, L_54, /*hidden argument*/NULL);
		if (!L_55)
		{
			goto IL_01bd;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_56 = __this->get_onAxis_12();
		if (!L_56)
		{
			goto IL_01bd;
		}
	}
	{
		// onAxis.Invoke(vector3Action, inputSource, axis, delta);
		AxisHandler_t97CA64BADCF02FC136106FD8DE45CD8F1B34C779 * L_57 = __this->get_onAxis_12();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_58 = __this->get_vector3Action_26();
		int32_t L_59 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_57);
		AxisHandler_Invoke_m4898437260780A1DE7497E17A30140E7081E3891(L_57, L_58, L_59, L_60, L_61, /*hidden argument*/NULL);
	}

IL_01bd:
	{
		// if (onUpdate != null)
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_62 = __this->get_onUpdate_16();
		if (!L_62)
		{
			goto IL_01e8;
		}
	}
	{
		// onUpdate.Invoke(vector3Action, inputSource, axis, delta);
		UpdateHandler_t0C4D50940DBA61F869AEBAB8F40A8CF92AF0EF75 * L_63 = __this->get_onUpdate_16();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_64 = __this->get_vector3Action_26();
		int32_t L_65 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_67 = SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_63);
		UpdateHandler_Invoke_m7B6641AC506F248A3301DE33BD7518AFE35A6A59(L_63, L_64, L_65, L_66, L_67, /*hidden argument*/NULL);
	}

IL_01e8:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_68 = __this->get_onActiveBindingChange_14();
		if (!L_68)
		{
			goto IL_021b;
		}
	}
	{
		bool L_69 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_70 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if ((((int32_t)L_69) == ((int32_t)L_70)))
		{
			goto IL_021b;
		}
	}
	{
		// onActiveBindingChange.Invoke(vector3Action, inputSource, activeBinding);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_71 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_72 = __this->get_vector3Action_26();
		int32_t L_73 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_74 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_71);
		ActiveChangeHandler_Invoke_m67A19739D2E43FC88B0EA8081E3DACEE816EF2AD(L_71, L_72, L_73, L_74, /*hidden argument*/NULL);
	}

IL_021b:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_75 = __this->get_onActiveChange_13();
		if (!L_75)
		{
			goto IL_024e;
		}
	}
	{
		bool L_76 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_77 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if ((((int32_t)L_76) == ((int32_t)L_77)))
		{
			goto IL_024e;
		}
	}
	{
		// onActiveChange.Invoke(vector3Action, inputSource, activeBinding);
		ActiveChangeHandler_t214E14B0C9535CBD468CE0E49F0F71F8F61BD652 * L_78 = __this->get_onActiveChange_13();
		SteamVR_Action_Vector3_tBD5707CE303CA6F46E3C2CF546A8214B0813AFD9 * L_79 = __this->get_vector3Action_26();
		int32_t L_80 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_81 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_78);
		ActiveChangeHandler_Invoke_m67A19739D2E43FC88B0EA8081E3DACEE816EF2AD(L_78, L_79, L_80, L_81, /*hidden argument*/NULL);
	}

IL_024e:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source__ctor_mC0D29BEF4DAD2DE16DAA78C0F490591AB171DE1A (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source__ctor_mC0D29BEF4DAD2DE16DAA78C0F490591AB171DE1A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector3_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source__cctor_mE841F95CDB56BC53EB934017D21DB959492E90DA (const RuntimeMethod* method)
{
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector3_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6 (SteamVR_Action_Vector3_Source_Map_t2469AF68483668A9E13B8CEC018862BF8D187C95 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector3_Source_Map__ctor_mD04CFEF10AFE7AA478AE8C52F8F7190C86020EE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_m6CA9EBD65879C9C800B369FA8D8E522A9D17B0DB_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveChange_m94E35735F69E5757C14E4D478F3C55829B8C6E45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveChange_m31BEBDCD5E548D3EF1FE88061551B1E32F39FA7A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onActiveBindingChange_m577DE8CACDACD63A6CB1690779536DD4E08F051B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onActiveBindingChange_m6AEB3EFEFAB193F18682D02F3F22EBC2351B201D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_add_onExecute_m45EDA21147C684A39D6F54ED2E47E46A121EF99D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_remove_onExecute_m040360261981DE9671A4FFBED062CF75256D8614_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onExecute += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onExecute -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration__ctor_m97911420850F4A3DB4C72F4A2D70C34656501250_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vibration() { }
		SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496(__this, /*hidden argument*/SteamVR_Action_Out_2__ctor_m73545DF08749932DD490F491CA01DA3630982496_RuntimeMethod_var);
		// public SteamVR_Action_Vibration() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::Execute(System.Single,System.Single,System.Single,System.Single,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, int32_t ___inputSource4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Execute_m87C481A1FB3D88E1CBC5A7889F290B4EB062FD4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].Execute(secondsFromNow, durationSeconds, frequency, amplitude);
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource4;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		float L_3 = ___secondsFromNow0;
		float L_4 = ___durationSeconds1;
		float L_5 = ___frequency2;
		float L_6 = ___amplitude3;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F(L_2, L_3, L_4, L_5, L_6, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveChangeListener_m89205B01162586F5466688EFB4281069F5011FC0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveChangeListener_m6447D0CC14DA4A4D82EC2B9BCC953E3DCF58CE58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnActiveBindingChangeListener_mF2413F58D7D9A1FFCDEC04FCA6F9BED450436F8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnActiveBindingChangeListener_m431858447DAD3C976B57607DDACC8DC853E8B71C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::AddOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_AddOnExecuteListener_m59B17CC78D6DB78C7D76D2FD15146B372A56EBD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onExecute += functionToCall;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::RemoveOnExecuteListener(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_RemoveOnExecuteListener_m3A5A1573091854239F0E847D0C76EE32A81664E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onExecute -= functionToStopCalling;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_GetTimeLastChanged_m377CE96893DB85C64C1F1CAD33989BF531DA3658_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return sourceMap[inputSource].timeLastExecuted;
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mF968D2C3D5A487C1901E7350B275B57F80B57F82_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m3E61112E8798AC9FE3889ECB23CADA908F64643A (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD9D73F49678DD52353032BD42EA3D5290F4D02BF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m8D574ED27E33D3CA724920BE7E2E32C67FF5F700_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_IsUpdating_m8A5AA657620597929ACE7E3330798C40AF3FB178 (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	{
		// return sourceMap.IsUpdating(inputSource);
		SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * L_0 = ((SteamVR_Action_2_t2615F9F41BCBF5EA1EE3A8AF266CE58FAFF6521D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		bool L_2 = SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B(L_0, L_1, /*hidden argument*/NULL);
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m6E086B1C71F607A798BAFBFB48A26B1505A87C17 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mF9F8B9B92B431F8D9B2373B84DE15FCD992FB0DA (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18 (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9B072FF56F674388891CFDF3E2451C44EAFD4C18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m1D410BBD8921B11DB5BD2F206BAAFF68D5D0B10A (ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler__ctor_m4BC199309910A57C0FF3B4FCC32DD7A83DCFD9A7 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::Invoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
			}
		}
		else if (___parameterCount != 6)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker5< int32_t, float, float, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker5< int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						GenericVirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
					else
						VirtActionInvoker6< SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *, int32_t, float, float, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___secondsFromNow2, ___durationSeconds3, ___frequency4, ___amplitude5, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vibration,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * ___fromAction0, int32_t ___fromSource1, float ___secondsFromNow2, float ___durationSeconds3, float ___frequency4, float ___amplitude5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ExecuteHandler_BeginInvoke_mDFA401282597A868835E8D8FAECDAAF51492C6DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___secondsFromNow2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___durationSeconds3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___frequency4);
	__d_args[5] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___amplitude5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// System.Void Valve.VR.SteamVR_Action_Vibration_ExecuteHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ExecuteHandler_EndInvoke_mD17C7DA4210417AF97237BB8FDF98E3257FB00D4 (ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveChange_m8A508C8A65E1ED100E5BA28DE7766AC0655E5D6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveChange_mA2D20EAC64D00053BD9E82610D958E31EEB6F571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveChange_3();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveChange_3();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onActiveBindingChange_m6A6695BE7B1D62E59D5E0B4E369411AD409CF956_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vibration_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onActiveBindingChange_m22B0D76B3551A12B4050D889570C0977FDC736CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_0 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_1 = NULL;
	ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * V_2 = NULL;
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_0 = __this->get_onActiveBindingChange_4();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_2 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA ** L_5 = __this->get_address_of_onActiveBindingChange_4();
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_6 = V_2;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_7 = V_1;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *>((ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_9 = V_0;
		ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t17832B2C623349A6A1BED6CB631E634CBCC40CCA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::add_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_add_onExecute_m59A0F69E9BE6A9221F99FD66C4DA7122FE3E7F4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::remove_onExecute(Valve.VR.SteamVR_Action_Vibration_ExecuteHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_remove_onExecute_m0253F5609D3DE59ADDB805659B334D8A1FDD904E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_0 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_1 = NULL;
	ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * V_2 = NULL;
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_0 = __this->get_onExecute_5();
		V_0 = L_0;
	}

IL_0007:
	{
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_1 = V_0;
		V_1 = L_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_2 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)CastclassSealed((RuntimeObject*)L_4, ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865_il2cpp_TypeInfo_var));
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 ** L_5 = __this->get_address_of_onExecute_5();
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_6 = V_2;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_7 = V_1;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_8 = InterlockedCompareExchangeImpl<ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *>((ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 **)L_5, L_6, L_7);
		V_0 = L_8;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_9 = V_0;
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_9) == ((RuntimeObject*)(ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_active_m74942EDB851B121FA4C3A5B06F86F091F06D96DA (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool active { get { return activeBinding && setActive; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_000f;
		}
	}
	{
		bool L_1 = SteamVR_Action_Source_get_setActive_m4E3E3DD854D4B7384E415E8BD0F66E880BB97A3E(__this, /*hidden argument*/NULL);
		return L_1;
	}

IL_000f:
	{
		return (bool)0;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_activeBinding_m6B111814AA4C4B43517A21614E4283F4525DDA21 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool activeBinding { get { return true; } }
		return (bool)1;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActive_mD1EBF92AC60EF39AE0AA92A0B0453B891DE815F1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_lastActive_m4BD24CD8315CBFD80AB0D4DA37E92BC343FDEF54 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_get_lastActiveBinding_mF9FCFD569DF70F631D98BD4196E60BB7C698E986 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActiveBinding { get { return true; } }
		return (bool)1;
	}
}
// System.Single Valve.VR.SteamVR_Action_Vibration_Source::get_timeLastExecuted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::set_timeLastExecuted(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Initialize_m009DBABE146A0DE5DCF9810F8230487AD2DE73C1 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// base.Initialize();
		SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64(__this, /*hidden argument*/NULL);
		// lastActive = true;
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, (bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Preinitialize_m190F867281CEFB16F31B42505053350ED5304CF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		// vibrationAction = (SteamVR_Action_Vibration)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vibrationAction_8(((SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::Execute(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___secondsFromNow0, float ___durationSeconds1, float ___frequency2, float ___amplitude3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Execute_mFD6A3E9A8B119898CAA19AB046D11586BE3D568F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	uint64_t V_1 = 0;
	{
		// if (SteamVR_Input.isStartupFrame)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		bool L_0 = SteamVR_Input_get_isStartupFrame_mD1CC14482229680D1CF35F90798A2374A3B8CFE6(/*hidden argument*/NULL);
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// timeLastExecuted = Time.realtimeSinceStartup;
		float L_1 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline(__this, L_1, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.TriggerHapticVibrationAction(handle, secondsFromNow, durationSeconds, frequency, amplitude, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		uint64_t L_3 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		float L_4 = ___secondsFromNow0;
		float L_5 = ___durationSeconds1;
		float L_6 = ___frequency2;
		float L_7 = ___amplitude3;
		uint64_t L_8 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_2);
		int32_t L_9 = CVRInput_TriggerHapticVibrationAction_m8F3D63EF48CE25235CE48A5460B1BB40BB28CB22(L_2, L_3, L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		V_0 = L_9;
		// if (err != EVRInputError.None)
		int32_t L_10 = V_0;
		if (!L_10)
		{
			goto IL_0084;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> TriggerHapticVibrationAction (" + fullPath + ") error: " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralFFB76599BB18A20E6DA029D1F971C11E0E56D630);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		RuntimeObject * L_17 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_0 = *(int32_t*)UnBox(L_17);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		uint64_t L_21 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		V_1 = L_21;
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_1), /*hidden argument*/NULL);
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
	}

IL_0084:
	{
		// if (onExecute != null)
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_24 = __this->get_onExecute_5();
		if (!L_24)
		{
			goto IL_00a8;
		}
	}
	{
		// onExecute.Invoke(vibrationAction, inputSource, secondsFromNow, durationSeconds, frequency, amplitude);
		ExecuteHandler_t8B67500B15AC184E56E293FC390AB5683D50D865 * L_25 = __this->get_onExecute_5();
		SteamVR_Action_Vibration_t487523BCA03933B9812950511E8A4BCE00F03EAB * L_26 = __this->get_vibrationAction_8();
		int32_t L_27 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		float L_28 = ___secondsFromNow0;
		float L_29 = ___durationSeconds1;
		float L_30 = ___frequency2;
		float L_31 = ___amplitude3;
		NullCheck(L_25);
		ExecuteHandler_Invoke_m2A5F7EA39417810D1BCDE63E03189D04EDD127FC(L_25, L_26, L_27, L_28, L_29, L_30, L_31, /*hidden argument*/NULL);
	}

IL_00a8:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source__ctor_mF37C9A94C62FB5D92FCAA72D2EDF9E94747F5047 (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Action_Vibration_Source_Map::IsUpdating(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vibration_Source_Map_IsUpdating_m70351F6C802FC2324E42AEC421C2D5BEE3B29F1B (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int sourceIndex = (int)inputSource;
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return sources[sourceIndex].timeLastExecuted != 0;
		SteamVR_Action_Vibration_SourceU5BU5D_tB39B74339680889980518AF68E5B5AB014912A04* L_1 = ((SteamVR_Action_Source_Map_1_t4C60A6B852FEF89276918CCD2B6136E8FD572AA7 *)__this)->get_sources_7();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		NullCheck(L_4);
		float L_5 = SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline(L_4, /*hidden argument*/NULL);
		return (bool)((((int32_t)((((float)L_5) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
	}
}
// System.Void Valve.VR.SteamVR_Action_Vibration_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F (SteamVR_Action_Vibration_Source_Map_t81B9741E979634A2E0A6D7AE2518F89F3481047A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vibration_Source_Map__ctor_m0777815D081C7CBB05DCC8D5E2D3A35B300D9E7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3(__this, /*hidden argument*/SteamVR_Action_Source_Map_1__ctor_m1D1C02D2A4FAC7A1673B7459262F588C80689CA3_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_Start_mEA4BD06B5A3ED45F4D80FEE2D44AD63582BBA57A (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	{
		// if (actionSet != null && activateOnStart)
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		bool L_1 = SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_002e;
		}
	}
	{
		bool L_2 = __this->get_activateOnStart_7();
		if (!L_2)
		{
			goto IL_002e;
		}
	}
	{
		// actionSet.Activate(forSources, 0, disableAllOtherActionSets);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = __this->get_actionSet_4();
		int32_t L_4 = __this->get_forSources_5();
		bool L_5 = __this->get_disableAllOtherActionSets_6();
		NullCheck(L_3);
		SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509(L_3, L_4, 0, L_5, /*hidden argument*/NULL);
	}

IL_002e:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad_OnDestroy_mB9E6C33A3AF1501A1D6DBCB9B5912E98DA24F952 (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	{
		// if (actionSet != null && deactivateOnDestroy)
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_actionSet_4();
		bool L_1 = SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5(L_0, (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0027;
		}
	}
	{
		bool L_2 = __this->get_deactivateOnDestroy_8();
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		// actionSet.Deactivate(forSources);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = __this->get_actionSet_4();
		int32_t L_4 = __this->get_forSources_5();
		NullCheck(L_3);
		SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021(L_3, L_4, /*hidden argument*/NULL);
	}

IL_0027:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActivateActionSetOnLoad::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A (SteamVR_ActivateActionSetOnLoad_tFA2CB881F46FAEC2C6CAF162957F7FD1D0B12DB7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActivateActionSetOnLoad__ctor_m0AAEE31F209F055E3C46B61AC879EE09E7CD338A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_ActionSet actionSet = SteamVR_Input.GetActionSet("default");
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Input_GetActionSet_m53C53A57B6E0BEAA81C90D18B541694392B9BB23(_stringLiteral7505D64A54E061B7ACD54CCD58B49DC43500B635, (bool)0, (bool)0, /*hidden argument*/NULL);
		__this->set_actionSet_4(L_0);
		// public bool activateOnStart = true;
		__this->set_activateOnStart_7((bool)1);
		// public bool deactivateOnDestroy = true;
		__this->set_deactivateOnDestroy_8((bool)1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Behaviour Valve.VR.SteamVR_Behaviour::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_get_instance_mF736E7604C239882F0BC7ADF2611A3AE53DF0189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (_instance == null)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0013;
		}
	}
	{
		// Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB((bool)0, /*hidden argument*/NULL);
	}

IL_0013:
	{
		// return _instance;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_2 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Initialize(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB (bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Initialize_mA34568CBC7E0F232551F456C378EA998B0AA66FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * V_1 = NULL;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_2 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_3 = NULL;
	{
		// if (_instance == null && initializing == false)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_0 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0115;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_2 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_initializing_11();
		if (L_2)
		{
			goto IL_0115;
		}
	}
	{
		// initializing = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)1);
		// GameObject steamVRObject = null;
		V_0 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// if (forceUnityVRToOpenVR)
		bool L_3 = ___forceUnityVRToOpenVR0;
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// forcingInitialization = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
	}

IL_002b:
	{
		// SteamVR_Render renderInstance = GameObject.FindObjectOfType<SteamVR_Render>();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_4 = Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m375DF65ED62003A8D0F1EEFAB02B0BFD8FC0DEF1_RuntimeMethod_var);
		V_1 = L_4;
		// if (renderInstance != null)
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_5 = V_1;
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_6)
		{
			goto IL_0041;
		}
	}
	{
		// steamVRObject = renderInstance.gameObject;
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_7 = V_1;
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		V_0 = L_8;
	}

IL_0041:
	{
		// SteamVR_Behaviour behaviourInstance = GameObject.FindObjectOfType<SteamVR_Behaviour>();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_9 = Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034(/*hidden argument*/Object_FindObjectOfType_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mF4D4C690A8FB950CCD99B55888CF147043E7E034_RuntimeMethod_var);
		V_2 = L_9;
		// if (behaviourInstance != null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_10 = V_2;
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_11)
		{
			goto IL_0057;
		}
	}
	{
		// steamVRObject = behaviourInstance.gameObject;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_12 = V_2;
		NullCheck(L_12);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_12, /*hidden argument*/NULL);
		V_0 = L_13;
	}

IL_0057:
	{
		// if (steamVRObject == null)
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_15)
		{
			goto IL_0088;
		}
	}
	{
		// GameObject objectInstance = new GameObject("[SteamVR]");
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mBB454E679AD9CF0B84D3609A01E6A9753ACF4686(L_16, _stringLiteral007325E7D8DEDACC6ED34288122B4689CB38DC84, /*hidden argument*/NULL);
		V_3 = L_16;
		// _instance = objectInstance.AddComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = V_3;
		NullCheck(L_17);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_18 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_17, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_18);
		// _instance.steamvr_render = objectInstance.AddComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_19 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_3;
		NullCheck(L_20);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_21 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_20, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		NullCheck(L_19);
		L_19->set_steamvr_render_9(L_21);
		// }
		goto IL_00dd;
	}

IL_0088:
	{
		// behaviourInstance = steamVRObject.GetComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = V_0;
		NullCheck(L_22);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_23 = GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943(L_22, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_mB9F300C022DC646383A3C3810C88E9D8D22D1943_RuntimeMethod_var);
		V_2 = L_23;
		// if (behaviourInstance == null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_24 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_25 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_24, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_25)
		{
			goto IL_009f;
		}
	}
	{
		// behaviourInstance = steamVRObject.AddComponent<SteamVR_Behaviour>();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = V_0;
		NullCheck(L_26);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_27 = GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4(L_26, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_m1C09710380A9C189D0FFC165FB260DE3D56089B4_RuntimeMethod_var);
		V_2 = L_27;
	}

IL_009f:
	{
		// if (renderInstance != null)
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_28 = V_1;
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_29 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_29)
		{
			goto IL_00b1;
		}
	}
	{
		// behaviourInstance.steamvr_render = renderInstance;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_30 = V_2;
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_31 = V_1;
		NullCheck(L_30);
		L_30->set_steamvr_render_9(L_31);
		goto IL_00d7;
	}

IL_00b1:
	{
		// behaviourInstance.steamvr_render = steamVRObject.GetComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_32 = V_2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_33 = V_0;
		NullCheck(L_33);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_34 = GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D(L_33, /*hidden argument*/GameObject_GetComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m506DA10EA4DA33BF1F43031780392E43E877129D_RuntimeMethod_var);
		NullCheck(L_32);
		L_32->set_steamvr_render_9(L_34);
		// if (behaviourInstance.steamvr_render == null)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_35 = V_2;
		NullCheck(L_35);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_36 = L_35->get_steamvr_render_9();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_37 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_36, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_37)
		{
			goto IL_00d7;
		}
	}
	{
		// behaviourInstance.steamvr_render = steamVRObject.AddComponent<SteamVR_Render>();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_38 = V_2;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = V_0;
		NullCheck(L_39);
		SteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665 * L_40 = GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801(L_39, /*hidden argument*/GameObject_AddComponent_TisSteamVR_Render_tE8610D8397284113646BAAD2B6991C16D4C26665_m990762749AAEADE99FB0F725B95E7EC57F088801_RuntimeMethod_var);
		NullCheck(L_38);
		L_38->set_steamvr_render_9(L_40);
	}

IL_00d7:
	{
		// _instance = behaviourInstance;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_41 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set__instance_6(L_41);
	}

IL_00dd:
	{
		// if (_instance != null && _instance.doNotDestroy)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_42 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_43 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_42, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_43)
		{
			goto IL_010f;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_44 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		NullCheck(L_44);
		bool L_45 = L_44->get_doNotDestroy_8();
		if (!L_45)
		{
			goto IL_010f;
		}
	}
	{
		// GameObject.DontDestroyOnLoad(_instance.transform.root.gameObject);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_46 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get__instance_6();
		NullCheck(L_46);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_47 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_46, /*hidden argument*/NULL);
		NullCheck(L_47);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_48 = Transform_get_root_m101A8B5C2CC6D868B6B66EEDBD5336FC1EB5DDD6(L_47, /*hidden argument*/NULL);
		NullCheck(L_48);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_49 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_48, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_DontDestroyOnLoad_m4DC90770AD6084E4B1B8489C6B41205DC020C207(L_49, /*hidden argument*/NULL);
	}

IL_010f:
	{
		// initializing = false;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
	}

IL_0115:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Awake_mAC490E2E91237CF64BCEE8FC535A9F0CAE6F3059_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// isPlaying = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)1);
		// if (initializeSteamVROnAwake && forcingInitialization == false)
		bool L_0 = __this->get_initializeSteamVROnAwake_7();
		if (!L_0)
		{
			goto IL_001c;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		bool L_1 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_forcingInitialization_5();
		if (L_1)
		{
			goto IL_001c;
		}
	}
	{
		// InitializeSteamVR();
		SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D(__this, (bool)0, /*hidden argument*/NULL);
	}

IL_001c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::InitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_InitializeSteamVR_m33AC5057AB7443A7224E945883C156A9FC0FFB0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (forceUnityVRToOpenVR)
		bool L_0 = ___forceUnityVRToOpenVR0;
		if (!L_0)
		{
			goto IL_0049;
		}
	}
	{
		// forcingInitialization = true;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)1);
		// if (initializeCoroutine != null)
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_1 = __this->get_initializeCoroutine_12();
		if (!L_1)
		{
			goto IL_001d;
		}
	}
	{
		// StopCoroutine(initializeCoroutine);
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_2 = __this->get_initializeCoroutine_12();
		MonoBehaviour_StopCoroutine_mC465FFA3C386BA22384F7AFA5495FF2286510562(__this, L_2, /*hidden argument*/NULL);
	}

IL_001d:
	{
		// if (XRSettings.loadedDeviceName == openVRDeviceName)
		String_t* L_3 = XRSettings_get_loadedDeviceName_m952D46346306FD9477B13992E5797A85CCD3C98C(/*hidden argument*/NULL);
		bool L_4 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_3, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		if (!L_4)
		{
			goto IL_0035;
		}
	}
	{
		// EnableOpenVR();
		SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658(__this, /*hidden argument*/NULL);
		return;
	}

IL_0035:
	{
		// initializeCoroutine = StartCoroutine(DoInitializeSteamVR(forceUnityVRToOpenVR));
		bool L_5 = ___forceUnityVRToOpenVR0;
		RuntimeObject* L_6 = SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C(__this, L_5, /*hidden argument*/NULL);
		Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC * L_7 = MonoBehaviour_StartCoroutine_mBF8044CE06A35D76A69669ADD8977D05956616B7(__this, L_6, /*hidden argument*/NULL);
		__this->set_initializeCoroutine_12(L_7);
		// }
		return;
	}

IL_0049:
	{
		// SteamVR.Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Collections.IEnumerator Valve.VR.SteamVR_Behaviour::DoInitializeSteamVR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, bool ___forceUnityVRToOpenVR0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_DoInitializeSteamVR_m1E9D177FB8C0C2BEB6D386DE8237CB89462E7E0C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_0 = (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 *)il2cpp_codegen_object_new(U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7_il2cpp_TypeInfo_var);
		U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537(L_0, 0, /*hidden argument*/NULL);
		U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * L_1 = L_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_2(__this);
		return L_1;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::XRDevice_deviceLoaded(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, String_t* ___deviceName0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (deviceName == openVRDeviceName)
		String_t* L_0 = ___deviceName0;
		bool L_1 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_0, _stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		// loadedOpenVRDeviceSuccess = true;
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		// }
		return;
	}

IL_0015:
	{
		// Debug.LogError("<b>[SteamVR]</b> Tried to async load: " + openVRDeviceName + ". Loaded: " + deviceName, this);
		String_t* L_2 = ___deviceName0;
		String_t* L_3 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteralC45DD4E1886367F0BF6631C4DA53924377B2E7A1, L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(L_3, __this, /*hidden argument*/NULL);
		// loadedOpenVRDeviceSuccess = true; //try anyway
		__this->set_loadedOpenVRDeviceSuccess_13((bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::EnableOpenVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// XRSettings.enabled = true;
		XRSettings_set_enabled_m9180DFDC2B9EF502DEB9503C98A0D53B4B9F8E1B((bool)1, /*hidden argument*/NULL);
		// SteamVR.Initialize(false);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		// initializeCoroutine = null;
		__this->set_initializeCoroutine_12((Coroutine_tAE7DB2FC70A0AE6477F896F852057CB0754F06EC *)NULL);
		// forcingInitialization = false;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnEnable_m713CCF5BB7424FD20E6C9350371C6815A1481A6A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Application.onBeforeRender += OnBeforeRender;
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var), /*hidden argument*/NULL);
		Application_add_onBeforeRender_mC00950B8FC35DB9048121D43BE8F69D55BCB4723(L_0, /*hidden argument*/NULL);
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Listen(OnQuit);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var);
		NullCheck(L_1);
		Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0(L_1, L_2, /*hidden argument*/Event_1_Listen_m38BA8AB8A10A0202B52B3F5CA7DB8056FDC0FBE0_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_OnDisable_m0232C2D9ADEF60527D20E98FEBAFC60B468C7CEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Application.onBeforeRender -= OnBeforeRender;
		UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 * L_0 = (UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4 *)il2cpp_codegen_object_new(UnityAction_tD19B26F1B2C048E38FD5801A33573BE01064CAF4_il2cpp_TypeInfo_var);
		UnityAction__ctor_mEFC4B92529CE83DF72501F92E07EC5598C54BDAC(L_0, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84_RuntimeMethod_var), /*hidden argument*/NULL);
		Application_remove_onBeforeRender_m4601D9804BC86F64FB071348EC1CF448C55CBA3B(L_0, /*hidden argument*/NULL);
		// SteamVR_Events.System(EVREventType.VREvent_Quit).Remove(OnQuit);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Events_tEF9EC471E187D3A163781044AA4F8F0C392EB2B8_il2cpp_TypeInfo_var);
		Event_1_t5DB0CDA7FD2616DA8770700B1A982E1A0F052262 * L_1 = SteamVR_Events_System_mA00E549D3CEB4BB6C027399D29DBEC0DF774891B(((int32_t)700), /*hidden argument*/NULL);
		UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF * L_2 = (UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF *)il2cpp_codegen_object_new(UnityAction_1_tB43C1CF1D8DCDDE3590ED959587DB9809C1294BF_il2cpp_TypeInfo_var);
		UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199(L_2, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED_RuntimeMethod_var), /*hidden argument*/UnityAction_1__ctor_m95AA3CDDC630B39635645E005E7D9BFCD3518199_RuntimeMethod_var);
		NullCheck(L_1);
		Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A(L_1, L_2, /*hidden argument*/Event_1_Remove_mF12BABD97A66E13257D4ECEDA7C4264DF073D93A_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnBeforeRender()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnBeforeRender_m26DF386EE8C7C11C8BEAF362E0AA58DD9DD53C84 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	{
		// PreCull();
		SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::PreCull()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PreCull_mB10CED0C11CDE15D1E68B3AAC37CFDC56C7834C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (Time.frameCount != lastFrameCount)
		int32_t L_0 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		int32_t L_1 = ((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->get_lastFrameCount_14();
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001b;
		}
	}
	{
		// lastFrameCount = Time.frameCount;
		int32_t L_2 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var);
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14(L_2);
		// SteamVR_Input.OnPreCull();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_OnPreCull_m8257BD45734433B2FEFAAE3EEA450AA206B1A6E2(/*hidden argument*/NULL);
	}

IL_001b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::FixedUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_FixedUpdate_mE5FFD141F25C4249125EA5C5EB9A353BFC689192_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.FixedUpdate();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_FixedUpdate_m148E3DD8EB5A5A307C2B787F8D17F81CA2985A92(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_LateUpdate_m66EDB2A95E9E5AEF14A3C9ADA1AB97910B9088BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.LateUpdate();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_LateUpdate_mF5DB9D90A59D0E2CEEC149CEC2B809524B739B6D(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Update_m58657E5A3CBF0A7C978ABD7345E9CB5994236C5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR_Input.Update();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Input_Update_m3E5F1FD8644044C051FFDAB30E6F43099D9AA3DD(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::OnQuit(Valve.VR.VREvent_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_OnQuit_m01AF8BD113E677B77087A22ADF91B4266B99C0ED (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C  ___vrEvent0, const RuntimeMethod* method)
{
	{
		// Application.Quit();
		Application_Quit_mA005EB22CB989AC3794334754F15E1C0D2FF1C95(/*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__ctor_m9B12433E546C4B15C5C944924BF103ED7DDECE24 (SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * __this, const RuntimeMethod* method)
{
	{
		// public bool initializeSteamVROnAwake = true;
		__this->set_initializeSteamVROnAwake_7((bool)1);
		// public bool doNotDestroy = true;
		__this->set_doNotDestroy_8((bool)1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour__cctor_mEA51C8EE69A144C35AE59F635863833F78530115_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static bool forcingInitialization = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_forcingInitialization_5((bool)0);
		// internal static bool isPlaying = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_isPlaying_10((bool)0);
		// private static bool initializing = false;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_initializing_11((bool)0);
		// protected static int lastFrameCount = -1;
		((SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586_il2cpp_TypeInfo_var))->set_lastFrameCount_14((-1));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15__ctor_m4AB754B2C599508761896C3F3B939E8C4F5BA537 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->set_U3CU3E1__state_0(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_IDisposable_Dispose_m7D9C62EE8274A20E47E032D930D60A38B49EB460 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_MoveNext_mC3B8289618A67FD97953CD2687ADC70C8D4512FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * V_1 = NULL;
	{
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_1 = __this->get_U3CU3E4__this_2();
		V_1 = L_1;
		int32_t L_2 = V_0;
		if (!L_2)
		{
			goto IL_0017;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)1)))
		{
			goto IL_004b;
		}
	}
	{
		return (bool)0;
	}

IL_0017:
	{
		__this->set_U3CU3E1__state_0((-1));
		// XRDevice.deviceLoaded += XRDevice_deviceLoaded;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_4 = V_1;
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_5 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3(L_5, L_4, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_add_deviceLoaded_m26813F2791F89E1058B14D5932BD00C2A009A74C(L_5, /*hidden argument*/NULL);
		// XRSettings.LoadDeviceByName(openVRDeviceName);
		XRSettings_LoadDeviceByName_m39BADCB8CB3C59E2DB929CEF7DFBF6CFA1209095(_stringLiteralCB44AC67B21B251EB99E9B05420FCCE568E2BBC2, /*hidden argument*/NULL);
		goto IL_0052;
	}

IL_003b:
	{
		// yield return null;
		__this->set_U3CU3E2__current_1(NULL);
		__this->set_U3CU3E1__state_0(1);
		return (bool)1;
	}

IL_004b:
	{
		__this->set_U3CU3E1__state_0((-1));
	}

IL_0052:
	{
		// while (loadedOpenVRDeviceSuccess == false)
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_6 = V_1;
		NullCheck(L_6);
		bool L_7 = L_6->get_loadedOpenVRDeviceSuccess_13();
		if (!L_7)
		{
			goto IL_003b;
		}
	}
	{
		// XRDevice.deviceLoaded -= XRDevice_deviceLoaded;
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_8 = V_1;
		Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 * L_9 = (Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0 *)il2cpp_codegen_object_new(Action_1_t32A9EECF5D4397CC1B9A7C7079870875411B06D0_il2cpp_TypeInfo_var);
		Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3(L_9, L_8, (intptr_t)((intptr_t)SteamVR_Behaviour_XRDevice_deviceLoaded_m9E35422E42CDBF4CEB2AC386C1A37C26A4AEE918_RuntimeMethod_var), /*hidden argument*/Action_1__ctor_m4F1B6EE6AB328B8B63B3B2CD8FB89A119C3143F3_RuntimeMethod_var);
		IL2CPP_RUNTIME_CLASS_INIT(XRDevice_t392FCA3D1DCEB95FF500C8F374C88B034C31DF4A_il2cpp_TypeInfo_var);
		XRDevice_remove_deviceLoaded_mC3D6CF39606865E78F1F19CA21613A8DD1B8EDDF(L_9, /*hidden argument*/NULL);
		// EnableOpenVR();
		SteamVR_Behaviour_t657502C8B293C96C3962AFA1FD655503C5DE8586 * L_10 = V_1;
		NullCheck(L_10);
		SteamVR_Behaviour_EnableOpenVR_mF75014123CBFDC324A16EE948F1BE79ECB0B8658(L_10, /*hidden argument*/NULL);
		// }
		return (bool)0;
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mC35C65BB635D3E640FBBD7E642940E62D65E796C (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 * L_0 = (NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010 *)il2cpp_codegen_object_new(NotSupportedException_tE75B318D6590A02A5D9B29FD97409B1750FA0010_il2cpp_TypeInfo_var);
		NotSupportedException__ctor_mA121DE1CAC8F25277DEB489DC7771209D91CAE33(L_0, /*hidden argument*/NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_Reset_m70B80D5374EEE17681EF415FC6DB3D5B7E1618AC_RuntimeMethod_var);
	}
}
// System.Object Valve.VR.SteamVR_Behaviour_<DoInitializeSteamVR>d__15::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * U3CDoInitializeSteamVRU3Ed__15_System_Collections_IEnumerator_get_Current_mE7F12C72E76E30CED3BFC26BB30EA2748A565D48 (U3CDoInitializeSteamVRU3Ed__15_tF2B5867E813D537B7B4B232138211FE3C01A21F7 * __this, const RuntimeMethod* method)
{
	{
		RuntimeObject * L_0 = __this->get_U3CU3E2__current_1();
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onChangeEvent_m1578F8F87A9CAD8DE453F42B1BF2D26349A1B8E0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onChangeEvent(Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onChangeEvent_m07C30D65CF899B6EE31E455C160C2402AE396267_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_0 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_1 = NULL;
	ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * V_2 = NULL;
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_0 = __this->get_onChangeEvent_7();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_2 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6_il2cpp_TypeInfo_var));
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 ** L_5 = __this->get_address_of_onChangeEvent_7();
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_6 = V_2;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_7 = V_1;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *>((ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_9 = V_0;
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_9) == ((RuntimeObject*)(ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onUpdateEvent_mCAE2327A051963F538C44016355233581F900E22_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onUpdateEvent(Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onUpdateEvent_mCDFDACEA7B803424CFC256C1FA1637794490CA2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_0 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_1 = NULL;
	UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * V_2 = NULL;
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_0 = __this->get_onUpdateEvent_9();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_2 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1_il2cpp_TypeInfo_var));
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 ** L_5 = __this->get_address_of_onUpdateEvent_9();
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_6 = V_2;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_7 = V_1;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *>((UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_9 = V_0;
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressEvent_m78CB583B2435293C92AD72C72715BB9C975DBC2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressEvent_m89A4E2359BCEAE601C15B51DB67997570E2087F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_0 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_1 = NULL;
	StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * V_2 = NULL;
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_0 = __this->get_onPressEvent_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_2 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D_il2cpp_TypeInfo_var));
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D ** L_5 = __this->get_address_of_onPressEvent_11();
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_6 = V_2;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_7 = V_1;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_8 = InterlockedCompareExchangeImpl<StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *>((StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_9 = V_0;
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_9) == ((RuntimeObject*)(StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressDownEvent_m44EE97419CA1C7DA28237D6B4AF6763C709D5965_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressDownEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressDownEvent_m63B6DCE08B343ED946C513187583AB5DED2D86D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_0 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_1 = NULL;
	StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * V_2 = NULL;
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_0 = __this->get_onPressDownEvent_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_2 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24_il2cpp_TypeInfo_var));
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 ** L_5 = __this->get_address_of_onPressDownEvent_13();
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_6 = V_2;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_7 = V_1;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *>((StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_9 = V_0;
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_9) == ((RuntimeObject*)(StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::add_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_add_onPressUpEvent_m16A540FD9BD319DAB48EBE1FDB2382F4FE706D9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::remove_onPressUpEvent(Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_remove_onPressUpEvent_mD752BBBB265F23E7902EB4BAFC468FACE9478695_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_0 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_1 = NULL;
	StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * V_2 = NULL;
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_0 = __this->get_onPressUpEvent_15();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_2 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5_il2cpp_TypeInfo_var));
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 ** L_5 = __this->get_address_of_onPressUpEvent_15();
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_6 = V_2;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_7 = V_1;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *>((StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_9 = V_0;
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_9) == ((RuntimeObject*)(StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Boolean::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Boolean_get_isActive_m457796E8C22B2F4836F7A7ED4B815B4B6536527E (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return booleanAction[inputSource].active; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		return L_3;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Behaviour_Boolean::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_get_actionSet_m21C301CC7CE117FB00409868FC3B047494C72E53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		NullCheck(L_2);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_2);
		return L_3;
	}

IL_001a:
	{
		// public SteamVR_ActionSet actionSet { get { if (booleanAction != null) return booleanAction.actionSet; else return null; } }
		return (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_OnEnable_m9453FBB03A4B1E4AF7D304679626C37543BFEF3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction == null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("[SteamVR] Boolean action not set.", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteral75490E2CC47551562599B8A6004682CA5D470BD7, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// AddHandlers();
		SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_OnDisable_mB213D24CEF50B25EDB9FEFB337609352A359BCAE (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		// RemoveHandlers();
		SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_AddHandlers_m177D600059EE1F3A255ABE94B86940647FB8A61A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// booleanAction[inputSource].onUpdate += SteamVR_Behaviour_Boolean_OnUpdate;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C(L_2, L_3, /*hidden argument*/NULL);
		// booleanAction[inputSource].onChange += SteamVR_Behaviour_Boolean_OnChange;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_4 = __this->get_booleanAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_6 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_6);
		SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D(L_6, L_7, /*hidden argument*/NULL);
		// booleanAction[inputSource].onState += SteamVR_Behaviour_Boolean_OnState;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_8 = __this->get_booleanAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_10 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_11 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_10);
		SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68(L_10, L_11, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateDown += SteamVR_Behaviour_Boolean_OnStateDown;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_12 = __this->get_booleanAction_4();
		int32_t L_13 = __this->get_inputSource_5();
		NullCheck(L_12);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_14 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_12, L_13);
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_15 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3(L_15, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_14);
		SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C(L_14, L_15, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateUp += SteamVR_Behaviour_Boolean_OnStateUp;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_16 = __this->get_booleanAction_4();
		int32_t L_17 = __this->get_inputSource_5();
		NullCheck(L_16);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_18 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_16, L_17);
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_19 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285(L_19, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_18);
		SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846(L_18, L_19, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_RemoveHandlers_m8E4317760BDED9334828696FBA2D1557BF69C5DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction != null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_00bb;
		}
	}
	{
		// booleanAction[inputSource].onUpdate -= SteamVR_Behaviour_Boolean_OnUpdate;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_4 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_5 = (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)il2cpp_codegen_object_new(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541(L_4, L_5, /*hidden argument*/NULL);
		// booleanAction[inputSource].onChange -= SteamVR_Behaviour_Boolean_OnChange;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_6 = __this->get_booleanAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_8 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)il2cpp_codegen_object_new(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B(L_9, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD(L_8, L_9, /*hidden argument*/NULL);
		// booleanAction[inputSource].onState -= SteamVR_Behaviour_Boolean_OnState;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_10 = __this->get_booleanAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_12 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_13 = (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)il2cpp_codegen_object_new(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var);
		StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112(L_13, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D(L_12, L_13, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateDown -= SteamVR_Behaviour_Boolean_OnStateDown;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_14 = __this->get_booleanAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_16 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_17 = (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)il2cpp_codegen_object_new(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var);
		StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4(L_16, L_17, /*hidden argument*/NULL);
		// booleanAction[inputSource].onStateUp -= SteamVR_Behaviour_Boolean_OnStateUp;
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_18 = __this->get_booleanAction_4();
		int32_t L_19 = __this->get_inputSource_5();
		NullCheck(L_18);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_20 = VirtFuncInvoker1< SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_18, L_19);
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_21 = (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)il2cpp_codegen_object_new(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var);
		StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285(L_21, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_20);
		SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229(L_20, L_21, /*hidden argument*/NULL);
	}

IL_00bb:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateUp(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateUp_m4A9487A3FA04E03EC09144B04B1510D5719DD349_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPressUp != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressUp_14();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPressUp.Invoke(this, fromSource, false);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPressUp_14();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_1, __this, L_2, (bool)0, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressUpEvent != null)
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_3 = __this->get_onPressUpEvent_15();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressUpEvent.Invoke(this, fromSource);
		StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * L_4 = __this->get_onPressUpEvent_15();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnStateDown(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnStateDown_mCE635F55BFC94B8E928AE2C4B64CF1DD142FF81C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPressDown != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPressDown_12();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPressDown.Invoke(this, fromSource, true);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPressDown_12();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_1, __this, L_2, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressDownEvent != null)
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_3 = __this->get_onPressDownEvent_13();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressDownEvent.Invoke(this, fromSource);
		StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * L_4 = __this->get_onPressDownEvent_13();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnState(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnState_m1780B4C3A2C9559A4EB4B1AEC32FE99BDCC370A3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onPress != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onPress_10();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onPress.Invoke(this, fromSource, true);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onPress_10();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_1, __this, L_2, (bool)1, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onPressEvent != null)
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_3 = __this->get_onPressEvent_11();
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		// onPressEvent.Invoke(this, fromSource);
		StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * L_4 = __this->get_onPressEvent_11();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002b:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnUpdate(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnUpdate_m8C821C2C8885633A23C1CC1DDBB66001F12986C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onUpdate != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onUpdate_8();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onUpdate.Invoke(this, fromSource, newState);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onUpdate_8();
		int32_t L_2 = ___fromSource1;
		bool L_3 = ___newState2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onUpdateEvent != null)
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_4 = __this->get_onUpdateEvent_9();
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		// onUpdateEvent.Invoke(this, fromSource, newState);
		UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * L_5 = __this->get_onUpdateEvent_9();
		int32_t L_6 = ___fromSource1;
		bool L_7 = ___newState2;
		NullCheck(L_5);
		UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_002c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::SteamVR_Behaviour_Boolean_OnChange(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_SteamVR_Behaviour_Boolean_OnChange_mA8A5E8B564562CF67EE15E1D36446D2440A4E25E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onChange != null)
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_0 = __this->get_onChange_6();
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		// onChange.Invoke(this, fromSource, newState);
		SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * L_1 = __this->get_onChange_6();
		int32_t L_2 = ___fromSource1;
		bool L_3 = ___newState2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_m2432FA3F355A924507DF754FDAC9C9FC49D2B993_RuntimeMethod_var);
	}

IL_0016:
	{
		// if (onChangeEvent != null)
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_4 = __this->get_onChangeEvent_7();
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		// onChangeEvent.Invoke(this, fromSource, newState);
		ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * L_5 = __this->get_onChangeEvent_7();
		int32_t L_6 = ___fromSource1;
		bool L_7 = ___newState2;
		NullCheck(L_5);
		ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_002c:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Boolean::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Boolean_GetLocalizedName_mE96B914202186EA4C474A4DDC2EA2792DB46CBDD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (booleanAction != null)
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_0 = __this->get_booleanAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return booleanAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_2 = __this->get_booleanAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m54923EB664FBAAD29EFCB26E969517F74408FF6C_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Boolean__ctor_m7DA42323297A7153BC4F968813D4071E6E751977 (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * __this, const RuntimeMethod* method)
{
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mDCF6846F97070FBC95F10EE1238244E4D946A4B0 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m042AFC3CCF3820EF4B1C793233762F0425631346 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mC8544FB4F8CB99571370093CEFE27DA383B5E72A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mF36DAE8C2316029E1DCCD65B0E76779CA90B7242 (ActiveChangeHandler_t299D2C23766385EE91DB72700CF21326F803F453 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m586AC376D5D929560981ECA9F86107A57F0CDFA5 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mF3CFD18B23248FD7BED819808EAE34E44E54755B (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mC46C07A1AAA22E75B4D3F7EA7E061AD632B5DD8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m4656586F9253F76219D85BE58FFA97AF8300E988 (ChangeHandler_tADA56232D143B2D18BA3D6F2A9B5CE2AC637CBB6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_mC069F038D09D05B1F1E951475661B5FF473CB320 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mCE0917DC4FC52D1A54846EAC994540AD19B9D893 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateDownHandler_BeginInvoke_m736695B25518DFA422912F07C1001C6B117838A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateDownHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_EndInvoke_m1E859526368DA4B8931D551192F96C3786DF1522 (StateDownHandler_tFF77368F427C4FE6164A97B238F944123AA8FE24 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_m78A6AA734B769F993D8062D9A4C66C55B44DAB02 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m77C883A72A64422A49098DAA5999A064E91E45CE (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateHandler_BeginInvoke_m22E1ECACA00FEEBB643E41AD34908284FD5CC052_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_EndInvoke_m1D4EC2D6F4ECC83A5BD54E88582A83183D69ECE9 (StateHandler_tC57B51755B81869515107A3BE4BC3865F974190D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m3C99433654C53B5E4783E47E2CAAB29AA4EE1484 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m4390170909DAFE643E31003AB1A7ADAC79D37446 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateUpHandler_BeginInvoke_m718D72474A82BA510E83D02651146FDEC0B8D118_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_StateUpHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_EndInvoke_m4ACB9F433E1776026E80A74ABE0035ABB57916D5 (StateUpHandler_tC09A0C33E80BBF97F8E88D36519482DFE36DBCC5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mCAC6AA493FB1A97CCADC4FF6EF60A105ABB9A0EF (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m423C3C8C6E4BBCE15708583137DF06DC92508FEB (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, SteamVR_Behaviour_Boolean_t17D81B91C3777429AAE61A52947D1B69E1BEED00 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mAF0630E1F8F6494E517F3A8E3F85291A5E63BC04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Boolean_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m902BF77A2043DED4832B2506E350FF505A1C9D46 (UpdateHandler_t9FC31A405C9C47120C5307368335AD9F708511D1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_BooleanEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C (SteamVR_Behaviour_BooleanEvent_t96626CBD0A0BD84C51D1F9E03DE5BEBFF58A48E4 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_BooleanEvent__ctor_m33798FEA433B2FC53CA7BC3F6EC450162099B83C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2(__this, /*hidden argument*/UnityEvent_3__ctor_mC63650172D658E002E89CD9C8BC3E11ED2A0A0A2_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isValid_mC439A09C94C9C2C860D673D2AF3A1250BF1D0ED1 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// public bool isValid { get { return poseAction[inputSource].poseIsValid; } }
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_get_isActive_m40A24A17984B400137C0477A64B4936B8764728F (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return poseAction[inputSource].active; } }
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_Start_m97059074D4F923E2FE787F0ED2F2F9743B17FBD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction == null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> No pose action set for this component", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralC8D5F6371B2F6BC2DEFFEF5B888A0F62ABB5C4CD, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (origin == null)
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_origin_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		// origin = this.transform.parent;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		__this->set_origin_6(L_5);
	}

IL_003f:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnEnable_m71BB8AE16F7490930CB15222660F612E35F0411B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SteamVR.Initialize();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_Initialize_m4290EF084BDC61199798490C498AA0DF8791260C((bool)0, /*hidden argument*/NULL);
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_00a1;
		}
	}
	{
		// poseAction[inputSource].onUpdate += SteamVR_Behaviour_Pose_OnUpdate;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_4 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_5 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4(L_4, L_5, /*hidden argument*/NULL);
		// poseAction[inputSource].onDeviceConnectedChanged += OnDeviceConnectedChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_6 = __this->get_poseAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_8 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7(L_9, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828(L_8, L_9, /*hidden argument*/NULL);
		// poseAction[inputSource].onTrackingChanged += OnTrackingChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_10 = __this->get_poseAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_12 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_13 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616(L_13, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5(L_12, L_13, /*hidden argument*/NULL);
		// poseAction[inputSource].onChange += SteamVR_Behaviour_Pose_OnChange;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_14 = __this->get_poseAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_16 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_17 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22(L_16, L_17, /*hidden argument*/NULL);
	}

IL_00a1:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDisable_m770F05909A237037B5CC75216B591C1875A63E93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_009b;
		}
	}
	{
		// poseAction[inputSource].onUpdate -= SteamVR_Behaviour_Pose_OnUpdate;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_4 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_5 = (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)il2cpp_codegen_object_new(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2(L_4, L_5, /*hidden argument*/NULL);
		// poseAction[inputSource].onDeviceConnectedChanged -= OnDeviceConnectedChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_6 = __this->get_poseAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_8 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)il2cpp_codegen_object_new(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var);
		DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7(L_9, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 8)), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52(L_8, L_9, /*hidden argument*/NULL);
		// poseAction[inputSource].onTrackingChanged -= OnTrackingChanged;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_10 = __this->get_poseAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_12 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_13 = (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)il2cpp_codegen_object_new(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var);
		TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616(L_13, __this, (intptr_t)((intptr_t)GetVirtualMethodInfo(__this, 9)), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C(L_12, L_13, /*hidden argument*/NULL);
		// poseAction[inputSource].onChange -= SteamVR_Behaviour_Pose_OnChange;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_14 = __this->get_poseAction_4();
		int32_t L_15 = __this->get_inputSource_5();
		NullCheck(L_14);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_16 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_14, L_15);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_17 = (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)il2cpp_codegen_object_new(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7(L_17, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29(L_16, L_17, /*hidden argument*/NULL);
	}

IL_009b:
	{
		// historyBuffer.Clear();
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_18 = __this->get_historyBuffer_19();
		NullCheck(L_18);
		SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6(L_18, /*hidden argument*/SteamVR_RingBuffer_1_Clear_mE5008382A9E53B1C4D0513C1F308724ED2EB2DB6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnUpdate(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnUpdate_m64560EEC47CC5A8789248FC785F1DC09C82C6E18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// UpdateHistoryBuffer();
		SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120(__this, /*hidden argument*/NULL);
		// UpdateTransform();
		VirtActionInvoker0::Invoke(7 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform() */, __this);
		// if (onTransformUpdated != null)
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformUpdated_7();
		if (!L_0)
		{
			goto IL_0026;
		}
	}
	{
		// onTransformUpdated.Invoke(this, inputSource);
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_1 = __this->get_onTransformUpdated_7();
		int32_t L_2 = __this->get_inputSource_5();
		NullCheck(L_1);
		UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8(L_1, __this, L_2, /*hidden argument*/UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var);
	}

IL_0026:
	{
		// if (onTransformUpdatedEvent != null)
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_3 = __this->get_onTransformUpdatedEvent_12();
		if (!L_3)
		{
			goto IL_0040;
		}
	}
	{
		// onTransformUpdatedEvent.Invoke(this, inputSource);
		UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * L_4 = __this->get_onTransformUpdatedEvent_12();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_0040:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_UpdateTransform_m2CA63E642A823EF173A01935179452312F7E7464_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (origin != null)
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_origin_6();
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0077;
		}
	}
	{
		// transform.position = origin.transform.TransformPoint(poseAction[inputSource].localPosition);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_origin_6();
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_3, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_5 = __this->get_poseAction_4();
		int32_t L_6 = __this->get_inputSource_5();
		NullCheck(L_5);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_7 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_5, L_6);
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_7, /*hidden argument*/NULL);
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_4, L_8, /*hidden argument*/NULL);
		NullCheck(L_2);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_2, L_9, /*hidden argument*/NULL);
		// transform.rotation = origin.rotation * poseAction[inputSource].localRotation;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_origin_6();
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_11, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_13 = __this->get_poseAction_4();
		int32_t L_14 = __this->get_inputSource_5();
		NullCheck(L_13);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_15 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_13, L_14);
		NullCheck(L_15);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_15, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_12, L_16, /*hidden argument*/NULL);
		NullCheck(L_10);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_10, L_17, /*hidden argument*/NULL);
		// }
		return;
	}

IL_0077:
	{
		// transform.localPosition = poseAction[inputSource].localPosition;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_19 = __this->get_poseAction_4();
		int32_t L_20 = __this->get_inputSource_5();
		NullCheck(L_19);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_21 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_19, L_20);
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_21, /*hidden argument*/NULL);
		NullCheck(L_18);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_18, L_22, /*hidden argument*/NULL);
		// transform.localRotation = poseAction[inputSource].localRotation;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_23 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_24 = __this->get_poseAction_4();
		int32_t L_25 = __this->get_inputSource_5();
		NullCheck(L_24);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_26 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_24, L_25);
		NullCheck(L_26);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_27 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_26, /*hidden argument*/NULL);
		NullCheck(L_23);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_23, L_27, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::SteamVR_Behaviour_Pose_OnChange(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_SteamVR_Behaviour_Pose_OnChange_mF4D37C55364E44522DB1A4EC21CEA17973FEFFC9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onTransformChanged != null)
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_0 = __this->get_onTransformChanged_8();
		if (!L_0)
		{
			goto IL_0015;
		}
	}
	{
		// onTransformChanged.Invoke(this, fromSource);
		SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * L_1 = __this->get_onTransformChanged_8();
		int32_t L_2 = ___fromSource1;
		NullCheck(L_1);
		UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8(L_1, __this, L_2, /*hidden argument*/UnityEvent_2_Invoke_mEA7AB15B5A48CDDF5EBB6ED1E70152910A221CC8_RuntimeMethod_var);
	}

IL_0015:
	{
		// if (onTransformChangedEvent != null)
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_3 = __this->get_onTransformChangedEvent_13();
		if (!L_3)
		{
			goto IL_002a;
		}
	}
	{
		// onTransformChangedEvent.Invoke(this, fromSource);
		ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * L_4 = __this->get_onTransformChangedEvent_13();
		int32_t L_5 = ___fromSource1;
		NullCheck(L_4);
		ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE(L_4, __this, L_5, /*hidden argument*/NULL);
	}

IL_002a:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, bool ___connected2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnDeviceConnectedChanged_m6B04726DF8F8CB18443D79B36C3255B8D58A571C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
		// if (onConnectedChanged != null)
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_0 = __this->get_onConnectedChanged_9();
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		// onConnectedChanged.Invoke(this, inputSource, connected);
		SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * L_1 = __this->get_onConnectedChanged_9();
		int32_t L_2 = __this->get_inputSource_5();
		bool L_3 = ___connected2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_mA7A524CEB38FBD452FBFB7274DBC451D4B72A1A9_RuntimeMethod_var);
	}

IL_0021:
	{
		// if (onConnectedChangedEvent != null)
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_4 = __this->get_onConnectedChangedEvent_14();
		if (!L_4)
		{
			goto IL_003c;
		}
	}
	{
		// onConnectedChangedEvent.Invoke(this, inputSource, connected);
		DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * L_5 = __this->get_onConnectedChangedEvent_14();
		int32_t L_6 = __this->get_inputSource_5();
		bool L_7 = ___connected2;
		NullCheck(L_5);
		DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_003c:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::OnTrackingChanged(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___changedAction0, int32_t ___changedSource1, int32_t ___trackingChanged2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_OnTrackingChanged_mF2DFC24E6DE3E73283033A8BC837663E2F041990_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onTrackingChanged != null)
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_0 = __this->get_onTrackingChanged_10();
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		// onTrackingChanged.Invoke(this, inputSource, trackingChanged);
		SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * L_1 = __this->get_onTrackingChanged_10();
		int32_t L_2 = __this->get_inputSource_5();
		int32_t L_3 = ___trackingChanged2;
		NullCheck(L_1);
		UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4(L_1, __this, L_2, L_3, /*hidden argument*/UnityEvent_3_Invoke_mB847F82D2B4BB89E8D28F5B0DF0427181A45A4E4_RuntimeMethod_var);
	}

IL_001b:
	{
		// if (onTrackingChangedEvent != null)
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_4 = __this->get_onTrackingChangedEvent_15();
		if (!L_4)
		{
			goto IL_0036;
		}
	}
	{
		// onTrackingChangedEvent.Invoke(this, inputSource, trackingChanged);
		TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * L_5 = __this->get_onTrackingChangedEvent_15();
		int32_t L_6 = __this->get_inputSource_5();
		int32_t L_7 = ___trackingChanged2;
		NullCheck(L_5);
		TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2(L_5, __this, L_6, L_7, /*hidden argument*/NULL);
	}

IL_0036:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_CheckDeviceIndex_m39CCC3BB184503F6591E65782C022ED9FE15FAAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// if (poseAction[inputSource].active && poseAction[inputSource].deviceIsConnected)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_2);
		if (!L_3)
		{
			goto IL_00e0;
		}
	}
	{
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_4 = __this->get_poseAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_6 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		NullCheck(L_6);
		bool L_7 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(L_6, /*hidden argument*/NULL);
		if (!L_7)
		{
			goto IL_00e0;
		}
	}
	{
		// int currentDeviceIndex = (int)poseAction[inputSource].trackedDeviceIndex;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_8 = __this->get_poseAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_10 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		NullCheck(L_10);
		uint32_t L_11 = SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE(L_10, /*hidden argument*/NULL);
		V_0 = L_11;
		// if (deviceIndex != currentDeviceIndex)
		int32_t L_12 = __this->get_deviceIndex_18();
		int32_t L_13 = V_0;
		if ((((int32_t)L_12) == ((int32_t)L_13)))
		{
			goto IL_00e0;
		}
	}
	{
		// deviceIndex = currentDeviceIndex;
		int32_t L_14 = V_0;
		__this->set_deviceIndex_18(L_14);
		// if (broadcastDeviceChanges)
		bool L_15 = __this->get_broadcastDeviceChanges_17();
		if (!L_15)
		{
			goto IL_00a0;
		}
	}
	{
		// this.gameObject.BroadcastMessage("SetInputSource", inputSource, SendMessageOptions.DontRequireReceiver);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_16 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		int32_t L_17 = __this->get_inputSource_5();
		int32_t L_18 = L_17;
		RuntimeObject * L_19 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &L_18);
		NullCheck(L_16);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_16, _stringLiteralEAC095C8508D4D9F7B01D7D09BDECE985F78C376, L_19, 1, /*hidden argument*/NULL);
		// this.gameObject.BroadcastMessage("SetDeviceIndex", deviceIndex, SendMessageOptions.DontRequireReceiver);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		int32_t L_21 = __this->get_deviceIndex_18();
		int32_t L_22 = L_21;
		RuntimeObject * L_23 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_22);
		NullCheck(L_20);
		GameObject_BroadcastMessage_mDF70A40A7E27DF70B4338EBB840500A54060E33D(L_20, _stringLiteralE4187BF2FD07B599844663814FE58065E3DDA0E8, L_23, 1, /*hidden argument*/NULL);
	}

IL_00a0:
	{
		// if (onDeviceIndexChanged != null)
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_24 = __this->get_onDeviceIndexChanged_11();
		if (!L_24)
		{
			goto IL_00c0;
		}
	}
	{
		// onDeviceIndexChanged.Invoke(this, inputSource, deviceIndex);
		SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * L_25 = __this->get_onDeviceIndexChanged_11();
		int32_t L_26 = __this->get_inputSource_5();
		int32_t L_27 = __this->get_deviceIndex_18();
		NullCheck(L_25);
		UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615(L_25, __this, L_26, L_27, /*hidden argument*/UnityEvent_3_Invoke_mF184EA69621E2B6057B98E93802B15C7DED15615_RuntimeMethod_var);
	}

IL_00c0:
	{
		// if (onDeviceIndexChangedEvent != null)
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_28 = __this->get_onDeviceIndexChangedEvent_16();
		if (!L_28)
		{
			goto IL_00e0;
		}
	}
	{
		// onDeviceIndexChangedEvent.Invoke(this, inputSource, deviceIndex);
		DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * L_29 = __this->get_onDeviceIndexChangedEvent_16();
		int32_t L_30 = __this->get_inputSource_5();
		int32_t L_31 = __this->get_deviceIndex_18();
		NullCheck(L_29);
		DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5(L_29, __this, L_30, L_31, /*hidden argument*/NULL);
	}

IL_00e0:
	{
		// }
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Behaviour_Pose::GetDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Behaviour_Pose_GetDeviceIndex_mD5C081326EB0983D79B585EFC222B7E2F10C5DF6 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// if (deviceIndex == -1)
		int32_t L_0 = __this->get_deviceIndex_18();
		if ((!(((uint32_t)L_0) == ((uint32_t)(-1)))))
		{
			goto IL_000f;
		}
	}
	{
		// CheckDeviceIndex();
		VirtActionInvoker0::Invoke(10 /* System.Void Valve.VR.SteamVR_Behaviour_Pose::CheckDeviceIndex() */, __this);
	}

IL_000f:
	{
		// return deviceIndex;
		int32_t L_1 = __this->get_deviceIndex_18();
		return L_1;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetVelocity_mBB18AD40A0D65C96D224253A7B275B512348ADEF (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].velocity;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Behaviour_Pose::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Behaviour_Pose_GetAngularVelocity_mDD92D9D3AB3DEFF686F851056814F2D2C39FE19D (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].angularVelocity;
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Behaviour_Pose::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Pose_GetVelocitiesAtTimeOffset_mB6011F8E6EF24480384B98BAA608E0C33187CB7E (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	{
		// return poseAction[inputSource].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		float L_3 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___angularVelocity2;
		NullCheck(L_2);
		bool L_6 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935(L_2, L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, /*hidden argument*/NULL);
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::GetEstimatedPeakVelocities(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_GetEstimatedPeakVelocities_m19E354C022B6413EAB6BD2B329D7EEF8B9B6BE39 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity1, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int top = historyBuffer.GetTopVelocity(10, 1);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_0 = __this->get_historyBuffer_19();
		NullCheck(L_0);
		int32_t L_1 = SteamVR_HistoryBuffer_GetTopVelocity_m5535E2C2A7901787B4389A2A4DEF684242BED659(L_0, ((int32_t)10), 1, /*hidden argument*/NULL);
		V_0 = L_1;
		// historyBuffer.GetAverageVelocities(out velocity, out angularVelocity, 2, top);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_2 = __this->get_historyBuffer_19();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity1;
		int32_t L_5 = V_0;
		NullCheck(L_2);
		SteamVR_HistoryBuffer_GetAverageVelocities_mE13684826F9D7B93A242BFB733653CAB1EB5B2AE(L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, 2, L_5, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::UpdateHistoryBuffer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_UpdateHistoryBuffer_mE526E02932EAB531F93E8AB336EBBE7BB880E120 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// int currentFrame = Time.frameCount;
		int32_t L_0 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		V_0 = L_0;
		// if (lastFrameUpdated != currentFrame)
		int32_t L_1 = __this->get_lastFrameUpdated_20();
		int32_t L_2 = V_0;
		if ((((int32_t)L_1) == ((int32_t)L_2)))
		{
			goto IL_0079;
		}
	}
	{
		// historyBuffer.Update(poseAction[inputSource].localPosition, poseAction[inputSource].localRotation, poseAction[inputSource].velocity, poseAction[inputSource].angularVelocity);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_3 = __this->get_historyBuffer_19();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_4 = __this->get_poseAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_6 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_6, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_8 = __this->get_poseAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_10 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		NullCheck(L_10);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_10, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_12 = __this->get_poseAction_4();
		int32_t L_13 = __this->get_inputSource_5();
		NullCheck(L_12);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_14 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_12, L_13);
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_14, /*hidden argument*/NULL);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_16 = __this->get_poseAction_4();
		int32_t L_17 = __this->get_inputSource_5();
		NullCheck(L_16);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_18 = VirtFuncInvoker1< SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_16, L_17);
		NullCheck(L_18);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_18, /*hidden argument*/NULL);
		NullCheck(L_3);
		SteamVR_HistoryBuffer_Update_mB5AE66DC0E520253A10D559BB42199E8A6F4DE7B(L_3, L_7, L_11, L_15, L_19, /*hidden argument*/NULL);
		// lastFrameUpdated = currentFrame;
		int32_t L_20 = V_0;
		__this->set_lastFrameUpdated_20(L_20);
	}

IL_0079:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Pose::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4 (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_GetLocalizedName_mA5196F8EE8CF059F362E93532D9E30C95C4D73C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (poseAction != null)
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = __this->get_poseAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return poseAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_2 = __this->get_poseAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m06290187FCD54E2017BE7941CE0276DB4CFC24C4_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose__ctor_mC67126471413E301FCA36B9CB5624F7687A66FCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Pose poseAction = SteamVR_Input.GetAction<SteamVR_Action_Pose>("Pose");
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_0 = SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40(_stringLiteralD92A04E3CAD38B3C3435F2D66D371A05D88CCDE8, (bool)0, /*hidden argument*/SteamVR_Input_GetAction_TisSteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_m6017595F00FF03D62CBFF0C3009BCD3A0C1BAB40_RuntimeMethod_var);
		__this->set_poseAction_4(L_0);
		// public bool broadcastDeviceChanges = true;
		__this->set_broadcastDeviceChanges_17((bool)1);
		// protected int deviceIndex = -1;
		__this->set_deviceIndex_18((-1));
		// protected SteamVR_HistoryBuffer historyBuffer = new SteamVR_HistoryBuffer(30);
		SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 * L_1 = (SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8 *)il2cpp_codegen_object_new(SteamVR_HistoryBuffer_tB82B2932C03165695AE1BE7BE8EDCADC6AE4A6E8_il2cpp_TypeInfo_var);
		SteamVR_HistoryBuffer__ctor_mF1CDA69BC169476E9636EC6159D2C8FBA8634CDF(L_1, ((int32_t)30), /*hidden argument*/NULL);
		__this->set_historyBuffer_19(L_1);
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mB66EC9563A23D839B6BFA66A8561763EC24B202C (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mD462973D959F683C89F77DF15516E714C35EA953 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m9EFC58B55DD7CDEDE87787F2B0B53DE1B4DBFB01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mE7108F88113F33A325B072B26DC4A34D2782F532 (ActiveChangeHandler_t1FB373EFCE81765E92E8482D412853F249193DDA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m17F26F551917CEB8F30ED3D55C9D83AE66FC5E61 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m8CADF14E5C6D8F024A2391FA19D762981F26C7FE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m568B3F3E3D3E3471C79763C106FC6BB787AC63DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m2550C841FB6D4688416776337AEDA3CAF5DEA0C5 (ChangeHandler_t62B565E3F59005232530941762BA9C99466E7190 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m211BB659BD49FD322F43D6A19407786CB8401FCF (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m319B9700F2F7862457458047C29099AC3661913C (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m7F6303D252D3958EFC6FBFB88C39A7CAB730D808_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m4351DB3775B80CE311151FF678830F65AEA9E2F8 (DeviceConnectedChangeHandler_tAC0D58B9BE0BEF1758FC23FC5A09211DAFC695AB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler__ctor_m3A1B88D51620E23309539B6E2DE49222FD1D848F (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_Invoke_mAFC2F1AF706E9F9AF63EEAF83C0F2C9ED3F854C5 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newDeviceIndex2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newDeviceIndex2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___newDeviceIndex2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceIndexChangedHandler_BeginInvoke_m3EA06069FF0751CCC7FB5C16942FC12934E6D0AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___newDeviceIndex2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceIndexChangedHandler_EndInvoke_m8AE8652F6F41E42C1079069C4C4237B46EBEF9C1 (DeviceIndexChangedHandler_t5AD6CF16FBFD1AFBCAABCE86FF9A5F9958E5E988 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m0A86E7FDAA608811EC26B60374A849387A6FE62F (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m766CD6D6E218E3D4AE18FD7E581B080E81661AE2 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38 (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m00461B7455FB2690F02EF8F8DD48C5AF8FDEEA38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m312664EADB4118DCABFC1624CC5D448416674DED (TrackingChangeHandler_tE2D5245E21857392ED2CCBEAD0D65408B5DC5443 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m2EBCB63FBD2D58C350B94F576E2F42BE398444E2 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mD8E094DE1D96502467EB3BCE1F23E60B1DDC328B (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m26B03747F3053EB2308D3E232A493776D6F4DCA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mC90C4ED70BC451D83D2836EA24D6305473ACD402 (UpdateHandler_t7F4B3FFE3096B37EB5424E580DA100C61857DC4D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_m7573F5A1C927280B84559DE4DE65D6599D9C9702 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m3E08A37FC82BA74199A4DD685DCFFDDDDE8DA3E7 (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Behaviour_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, SteamVR_Behaviour_Pose_t289DF67C070889001DACCC75FC574521F280F787 * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m90A22A3018762948878C3076A235AF7B629BA3EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_m0B6E40335B04DAA6AFADF64D402660C80537964A (ValidPoseChangeHandler_t9F17891A8C5AE0FD1A06F1C3ED15A5EDEB119DE9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_PoseEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F (SteamVR_Behaviour_PoseEvent_t110293A57CED63A5C2FFEF4849FC452DE99B2F87 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_PoseEvent__ctor_mE21D7A6C21325526CC29883AC226EB797E66551F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2(__this, /*hidden argument*/UnityEvent_2__ctor_mE94EED3D5D02FAC67378FC2787984A49F9DFD1B2_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_ConnectedChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8 (SteamVR_Behaviour_Pose_ConnectedChangedEvent_t79FB8A09A29315BCF3A67CC1FA2D124C01D3EAE9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_ConnectedChangedEvent__ctor_mB3A7DDCFDFCB023AE4B30735EF83D7D587A78FF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD(__this, /*hidden argument*/UnityEvent_3__ctor_m574C424C59CC8F794C9F69BE3F30128F36D8D8BD_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_DeviceIndexChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623 (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent_tB4204CD58F5763D655B3B020CAEA0CD8A45D13E9 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_DeviceIndexChangedEvent__ctor_m8D0C351CDDAC944761279EE787BA5C64CBAA7623_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D(__this, /*hidden argument*/UnityEvent_3__ctor_m85EE828A60546309161F8608EF17D54E107B763D_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Behaviour_Pose_TrackingChangedEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE (SteamVR_Behaviour_Pose_TrackingChangedEvent_tC76D95F0E8D943109311BCE1B35E1D8CDC3C2E6E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Pose_TrackingChangedEvent__ctor_mEDB13441B307DC7FD0DB04C5E935F46C739694EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8(__this, /*hidden argument*/UnityEvent_3__ctor_m44E339EBF173CA025EB43F196FFB59EDB3D2D9C8_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Behaviour_Single::get_isActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Behaviour_Single_get_isActive_m4E14A5A450D7858CA2CEE40BED2BEFE66196843B (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		// public bool isActive { get { return singleAction.GetActive(inputSource); } }
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, int32_t >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action::GetActive(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_OnEnable_m34F72F79DD21D6BAC95019E33A8FE25A2D558D2D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction == null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Equality_m16F1109154021CF7DC424B937A8AA5FC34463EE2(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		// Debug.LogError("[SteamVR] Single action not set.", this);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m97139CB2EE76D5CD8308C1AD0499A5F163FC7F51(_stringLiteralB54CB9DBF86B2FBF3225C977A4074AA174D5411E, __this, /*hidden argument*/NULL);
		// return;
		return;
	}

IL_001a:
	{
		// AddHandlers();
		SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_OnDisable_mAEAD06F7B8D58C81D4C9B030CFC30CBF41FD84D5 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		// RemoveHandlers();
		SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00(__this, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::AddHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_AddHandlers_mA8B361755E3502B3485F63048BBB7936A97DBD78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// singleAction[inputSource].onUpdate += SteamVR_Behaviour_Single_OnUpdate;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		int32_t L_1 = __this->get_inputSource_5();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_0, L_1);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402(L_3, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77(L_2, L_3, /*hidden argument*/NULL);
		// singleAction[inputSource].onChange += SteamVR_Behaviour_Single_OnChange;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_4 = __this->get_singleAction_4();
		int32_t L_5 = __this->get_inputSource_5();
		NullCheck(L_4);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_6 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_4, L_5);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4(L_7, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_6);
		SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1(L_6, L_7, /*hidden argument*/NULL);
		// singleAction[inputSource].onAxis += SteamVR_Behaviour_Single_OnAxis;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_8 = __this->get_singleAction_4();
		int32_t L_9 = __this->get_inputSource_5();
		NullCheck(L_8);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_10 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_8, L_9);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_11 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111(L_11, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_10);
		SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D(L_10, L_11, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::RemoveHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_RemoveHandlers_m1836740684C0B04FB0D8E952785E7A0CBE269B00_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction != null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0074;
		}
	}
	{
		// singleAction[inputSource].onUpdate -= SteamVR_Behaviour_Single_OnUpdate;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_2 = __this->get_singleAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		NullCheck(L_2);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_4 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_2, L_3);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_5 = (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)il2cpp_codegen_object_new(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var);
		UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402(L_5, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_4);
		SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F(L_4, L_5, /*hidden argument*/NULL);
		// singleAction[inputSource].onChange -= SteamVR_Behaviour_Single_OnChange;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_6 = __this->get_singleAction_4();
		int32_t L_7 = __this->get_inputSource_5();
		NullCheck(L_6);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_8 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_6, L_7);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)il2cpp_codegen_object_new(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var);
		ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4(L_9, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_8);
		SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5(L_8, L_9, /*hidden argument*/NULL);
		// singleAction[inputSource].onAxis -= SteamVR_Behaviour_Single_OnAxis;
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_10 = __this->get_singleAction_4();
		int32_t L_11 = __this->get_inputSource_5();
		NullCheck(L_10);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_12 = VirtFuncInvoker1< SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F *, int32_t >::Invoke(36 /* SourceElement Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources) */, L_10, L_11);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_13 = (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)il2cpp_codegen_object_new(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var);
		AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111(L_13, __this, (intptr_t)((intptr_t)SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_RuntimeMethod_var), /*hidden argument*/NULL);
		NullCheck(L_12);
		SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2(L_12, L_13, /*hidden argument*/NULL);
	}

IL_0074:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnUpdate(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnUpdate_m3A0D7B72B650A79EA82489C424ECBC5E094C4644_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onUpdate != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onUpdate_7();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onUpdate.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onUpdate_7();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onUpdateEvent != null)
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_5 = __this->get_onUpdateEvent_10();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onUpdateEvent.Invoke(this, fromSource, newAxis, newDelta);
		UpdateHandler_t35B29D0C538D0A17C13EFD36765FF0278EE256D4 * L_6 = __this->get_onUpdateEvent_10();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		UpdateHandler_Invoke_m84942E8C81D99B00E49FC64BFD74F6A0B123A2DD(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnChange(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnChange_mF3F0B3C0B203C70B0E4408BB8E2971DEBE55786A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onChange != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onChange_6();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onChange.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onChange_6();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onChangeEvent != null)
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_5 = __this->get_onChangeEvent_9();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onChangeEvent.Invoke(this, fromSource, newAxis, newDelta);
		ChangeHandler_t5D78A5C2B8BE043F0EF515BB84766EC330B52DF7 * L_6 = __this->get_onChangeEvent_9();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		ChangeHandler_Invoke_m13F669E97E3EA368C92C64F0172CD01CBC42B931(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::SteamVR_Behaviour_Single_OnAxis(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_SteamVR_Behaviour_Single_OnAxis_m7C907C6A3BCC3B3B45A8FA9202B221F7B05E317A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (onAxis != null)
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_0 = __this->get_onAxis_8();
		if (!L_0)
		{
			goto IL_0018;
		}
	}
	{
		// onAxis.Invoke(this, fromSource, newAxis, newDelta);
		SteamVR_Behaviour_SingleEvent_tB6C52A82965E98E5B7A851CB572E9B6FD88FE4F4 * L_1 = __this->get_onAxis_8();
		int32_t L_2 = ___fromSource1;
		float L_3 = ___newAxis2;
		float L_4 = ___newDelta3;
		NullCheck(L_1);
		UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85(L_1, __this, L_2, L_3, L_4, /*hidden argument*/UnityEvent_4_Invoke_m7C62CEBE22AEFFBA3F1FE11C5E7B46019F8E6B85_RuntimeMethod_var);
	}

IL_0018:
	{
		// if (onAxisEvent != null)
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_5 = __this->get_onAxisEvent_11();
		if (!L_5)
		{
			goto IL_0030;
		}
	}
	{
		// onAxisEvent.Invoke(this, fromSource, newAxis, newDelta);
		AxisHandler_t6CD6525481A3708C4FFC01A49F13C96EBD464F6C * L_6 = __this->get_onAxisEvent_11();
		int32_t L_7 = ___fromSource1;
		float L_8 = ___newAxis2;
		float L_9 = ___newDelta3;
		NullCheck(L_6);
		AxisHandler_Invoke_m8E9BFB173CCA66F9303D7EE7B256B8C16D7033BA(L_6, __this, L_7, L_8, L_9, /*hidden argument*/NULL);
	}

IL_0030:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Behaviour_Single::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Behaviour_Single_GetLocalizedName_mB7382309743B679DF1148B459F6D4000D48D673A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (singleAction != null)
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_0 = __this->get_singleAction_4();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_il2cpp_TypeInfo_var);
		bool L_1 = SteamVR_Action_op_Inequality_m7114B6E3669F8C55CD3B5E4EC3A897648CBD0F8A(L_0, (SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *)NULL, /*hidden argument*/NULL);
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		// return singleAction.GetLocalizedOriginPart(inputSource, localizedParts);
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_2 = __this->get_singleAction_4();
		int32_t L_3 = __this->get_inputSource_5();
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = ___localizedParts0;
		NullCheck(L_2);
		String_t* L_5 = SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57(L_2, L_3, L_4, /*hidden argument*/SteamVR_Action_In_2_GetLocalizedOriginPart_m68B2DF7EE84BFF3AD79B5306A4D26E96F68E5B57_RuntimeMethod_var);
		return L_5;
	}

IL_0021:
	{
		// return null;
		return (String_t*)NULL;
	}
}
// System.Void Valve.VR.SteamVR_Behaviour_Single::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Behaviour_Single__ctor_m9BF52CED548807A2F0B39324A0AB28E3A047E546 (SteamVR_Behaviour_Single_t0224221A2437628A3FAFF02B7B02D88952021562 * __this, const RuntimeMethod* method)
{
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_mCEFC5B01B736A3B6218C5C91A0AEF272FFD88B47_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m01A4338F1C4D57E5691A2F8EA861BAD76DA75619_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m0D9D61CC1BC50CC7FA1F9AD5192FBC418009F3F3_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m851FCD54C037B0D6CF78F14CBF0BF7B44EE86FA8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_mE0AB648E0339C2A082B81B15AA2D97854E8BB8CC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m99B705C8282316AC52EBA3A718C998FE46329E1F_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_mD56D63D01414ED3D7D6074DB29C81AAC3C490479_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m5461F8E49017BD6579CC10D8D0783642DEDE37D0_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m00C4EB3059A4427EF390371B7B56077017F42C2C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_mC1CF900637C3FB99B1DE3F4BE06452EC07264747_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_m00A9DB3FFD0499D982FC39500D115B4968518988_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3AC011DB8ED08B67F124368EEA9934C5FACA5920_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m49C580092D3CDFD2E8D1D98D06026C2FF6F73BCA_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m6E2F4BC8D0DB6C17A44D1DD390933B195C8F0BE7_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m7B9C3EC1294D432EBF5834AA2FD1518F398C771B_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m04DF922F78BEB4B48C610E5263CB5A56723BFE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mAF79C76574CD9C644F280B1E5DCBF068D84C0C71_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m8A5B299B1D9CA30852BCFDF4439985C7C67607D5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mEC48DADE504DBFF9AB6B0D16ED35C39CE97F2EBD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_m87DEB2959B20AD607470B75C837EE42754040CFF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_mA14C6FC07879D8ED956F931D74A2DF14526476E9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m91451416B46D3849E217C7FBAAA96F28364E94B0_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float changedTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_mCA804B7275EED0C19F247767BCC22B7F639A3175_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_mBB40F4301664B3074825255DA6E51B5E02F93463_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_m8D8A292258A3B69B920DED592F2BD44A259EBAA9_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m4E65637F7F50E116169B2CFB6EBF5A2583D902F2_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m17B3B1227ABDCC35456A1B37EE9919772DD1F24E_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mB5B6B8E56BCC552963E91E2748DF8CC04BDC979A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m77FAC4A378FA78CC827A871984258A60FA83CAE2_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1943C66837BE7929D58A91A9DFBAB4BBC2A1DB12_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m2252BBEBC8C6D4A676ABF0EE270D181EBFB823BB_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_m8D0A6407047BB76299057CF382CD612137A600F3_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_axis_m0F9A2BF33B9BC6BF5774EC4D7E2EE2B474B28E99_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastAxis_mB5307EA9C41A76639B02A5FB7C775E14C7E8BE8E_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_delta_m4B3DA30643F7D02E80B5AAC93D5BF6D730305BC0_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Vector3_Source_get_lastDelta_mBCB31D8D0D5F3B64784F01EAFFC7311F1E07B467_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastAxis_m2DA773CD84278414BB2D77495722E7E288C2727C_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAxis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_lastDelta_mD5A541A52EC64B8BF321E3B9778E37647A968DD1_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastDelta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_axis_m8D6C550660D5D6EF3AFC2376B964204B4B26C0DF_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 axis { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector3_Source_set_delta_m425C84C1DE5AD8F12F9F04C1E4C78452C580FE2B_inline (SteamVR_Action_Vector3_Source_t9F1BC9EBF0DBE47509F03164616D145B5F93FB90 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 delta { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_Vibration_Source_get_timeLastExecuted_m43631CC69AD4730B6DAD747F8917FF1968E1782C_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = __this->get_U3CtimeLastExecutedU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vibration_Source_set_timeLastExecuted_m4CC891E603F4C83A336138B5DB8628B429BA45D5_inline (SteamVR_Action_Vibration_Source_tB30315A543AA13F11BB80C1D5C7DEDF37058C151 * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float timeLastExecuted { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CtimeLastExecutedU3Ek__BackingField_7(L_0);
		return;
	}
}
