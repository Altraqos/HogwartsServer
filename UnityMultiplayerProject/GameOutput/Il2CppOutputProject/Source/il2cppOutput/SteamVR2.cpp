#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct VirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct VirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct VirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct VirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct VirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericVirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericVirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericVirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericVirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericVirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R>
struct GenericVirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericVirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericVirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct InterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct InterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericInterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericInterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericInterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericInterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename R>
struct GenericInterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericInterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericInterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};

// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E;
// Valve.VR.IVROverlay/_ClearOverlayTexture
struct _ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0;
// Valve.VR.IVROverlay/_CloseMessageOverlay
struct _CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842;
// Valve.VR.IVROverlay/_ComputeOverlayIntersection
struct _ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1;
// Valve.VR.IVROverlay/_CreateDashboardOverlay
struct _CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2;
// Valve.VR.IVROverlay/_CreateOverlay
struct _CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149;
// Valve.VR.IVROverlay/_DestroyOverlay
struct _DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51;
// Valve.VR.IVROverlay/_FindOverlay
struct _FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5;
// Valve.VR.IVROverlay/_GetDashboardOverlaySceneProcess
struct _GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF;
// Valve.VR.IVROverlay/_GetKeyboardText
struct _GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825;
// Valve.VR.IVROverlay/_GetOverlayAlpha
struct _GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A;
// Valve.VR.IVROverlay/_GetOverlayColor
struct _GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE;
// Valve.VR.IVROverlay/_GetOverlayCurvature
struct _GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591;
// Valve.VR.IVROverlay/_GetOverlayDualAnalogTransform
struct _GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828;
// Valve.VR.IVROverlay/_GetOverlayErrorNameFromEnum
struct _GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E;
// Valve.VR.IVROverlay/_GetOverlayFlag
struct _GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963;
// Valve.VR.IVROverlay/_GetOverlayFlags
struct _GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68;
// Valve.VR.IVROverlay/_GetOverlayImageData
struct _GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C;
// Valve.VR.IVROverlay/_GetOverlayInputMethod
struct _GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864;
// Valve.VR.IVROverlay/_GetOverlayKey
struct _GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472;
// Valve.VR.IVROverlay/_GetOverlayMouseScale
struct _GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825;
// Valve.VR.IVROverlay/_GetOverlayName
struct _GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43;
// Valve.VR.IVROverlay/_GetOverlayRenderModel
struct _GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440;
// Valve.VR.IVROverlay/_GetOverlayRenderingPid
struct _GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560;
// Valve.VR.IVROverlay/_GetOverlaySortOrder
struct _GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8;
// Valve.VR.IVROverlay/_GetOverlayTexelAspect
struct _GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F;
// Valve.VR.IVROverlay/_GetOverlayTexture
struct _GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1;
// Valve.VR.IVROverlay/_GetOverlayTextureBounds
struct _GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173;
// Valve.VR.IVROverlay/_GetOverlayTextureColorSpace
struct _GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB;
// Valve.VR.IVROverlay/_GetOverlayTextureSize
struct _GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A;
// Valve.VR.IVROverlay/_GetOverlayTransformAbsolute
struct _GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED;
// Valve.VR.IVROverlay/_GetOverlayTransformOverlayRelative
struct _GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511;
// Valve.VR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent
struct _GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6;
// Valve.VR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative
struct _GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039;
// Valve.VR.IVROverlay/_GetOverlayTransformType
struct _GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348;
// Valve.VR.IVROverlay/_GetOverlayWidthInMeters
struct _GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245;
// Valve.VR.IVROverlay/_GetPrimaryDashboardDevice
struct _GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929;
// Valve.VR.IVROverlay/_GetTransformForOverlayCoordinates
struct _GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94;
// Valve.VR.IVROverlay/_HideKeyboard
struct _HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895;
// Valve.VR.IVROverlay/_HideOverlay
struct _HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2;
// Valve.VR.IVROverlay/_IsActiveDashboardOverlay
struct _IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68;
// Valve.VR.IVROverlay/_IsDashboardVisible
struct _IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338;
// Valve.VR.IVROverlay/_IsHoverTargetOverlay
struct _IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D;
// Valve.VR.IVROverlay/_IsOverlayVisible
struct _IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D;
// Valve.VR.IVROverlay/_PollNextOverlayEvent
struct _PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2;
// Valve.VR.IVROverlay/_ReleaseNativeOverlayHandle
struct _ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9;
// Valve.VR.IVROverlay/_SetDashboardOverlaySceneProcess
struct _SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA;
// Valve.VR.IVROverlay/_SetKeyboardPositionForOverlay
struct _SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE;
// Valve.VR.IVROverlay/_SetKeyboardTransformAbsolute
struct _SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51;
// Valve.VR.IVROverlay/_SetOverlayAlpha
struct _SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE;
// Valve.VR.IVROverlay/_SetOverlayColor
struct _SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D;
// Valve.VR.IVROverlay/_SetOverlayCurvature
struct _SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476;
// Valve.VR.IVROverlay/_SetOverlayDualAnalogTransform
struct _SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24;
// Valve.VR.IVROverlay/_SetOverlayFlag
struct _SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0;
// Valve.VR.IVROverlay/_SetOverlayFromFile
struct _SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640;
// Valve.VR.IVROverlay/_SetOverlayInputMethod
struct _SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02;
// Valve.VR.IVROverlay/_SetOverlayIntersectionMask
struct _SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388;
// Valve.VR.IVROverlay/_SetOverlayMouseScale
struct _SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E;
// Valve.VR.IVROverlay/_SetOverlayName
struct _SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703;
// Valve.VR.IVROverlay/_SetOverlayRaw
struct _SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F;
// Valve.VR.IVROverlay/_SetOverlayRenderModel
struct _SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F;
// Valve.VR.IVROverlay/_SetOverlayRenderingPid
struct _SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39;
// Valve.VR.IVROverlay/_SetOverlaySortOrder
struct _SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163;
// Valve.VR.IVROverlay/_SetOverlayTexelAspect
struct _SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0;
// Valve.VR.IVROverlay/_SetOverlayTexture
struct _SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB;
// Valve.VR.IVROverlay/_SetOverlayTextureBounds
struct _SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4;
// Valve.VR.IVROverlay/_SetOverlayTextureColorSpace
struct _SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0;
// Valve.VR.IVROverlay/_SetOverlayTransformAbsolute
struct _SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC;
// Valve.VR.IVROverlay/_SetOverlayTransformOverlayRelative
struct _SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent
struct _SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative
struct _SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F;
// Valve.VR.IVROverlay/_SetOverlayWidthInMeters
struct _SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F;
// Valve.VR.IVROverlay/_ShowDashboard
struct _ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D;
// Valve.VR.IVROverlay/_ShowKeyboard
struct _ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D;
// Valve.VR.IVROverlay/_ShowKeyboardForOverlay
struct _ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C;
// Valve.VR.IVROverlay/_ShowMessageOverlay
struct _ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B;
// Valve.VR.IVROverlay/_ShowOverlay
struct _ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5;
// Valve.VR.IVRRenderModels/_FreeRenderModel
struct _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2;
// Valve.VR.IVRRenderModels/_FreeTexture
struct _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF;
// Valve.VR.IVRRenderModels/_FreeTextureD3D11
struct _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0;
// Valve.VR.IVRRenderModels/_GetComponentButtonMask
struct _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE;
// Valve.VR.IVRRenderModels/_GetComponentCount
struct _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32;
// Valve.VR.IVRRenderModels/_GetComponentName
struct _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA;
// Valve.VR.IVRRenderModels/_GetComponentRenderModelName
struct _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3;
// Valve.VR.IVRRenderModels/_GetComponentState
struct _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B;
// Valve.VR.IVRRenderModels/_GetComponentStateForDevicePath
struct _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582;
// Valve.VR.IVRRenderModels/_GetRenderModelCount
struct _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596;
// Valve.VR.IVRRenderModels/_GetRenderModelErrorNameFromEnum
struct _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B;
// Valve.VR.IVRRenderModels/_GetRenderModelName
struct _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8;
// Valve.VR.IVRRenderModels/_GetRenderModelOriginalPath
struct _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF;
// Valve.VR.IVRRenderModels/_GetRenderModelThumbnailURL
struct _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE;
// Valve.VR.IVRRenderModels/_LoadIntoTextureD3D11_Async
struct _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1;
// Valve.VR.IVRRenderModels/_LoadRenderModel_Async
struct _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69;
// Valve.VR.IVRRenderModels/_LoadTextureD3D11_Async
struct _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470;
// Valve.VR.IVRRenderModels/_LoadTexture_Async
struct _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5;
// Valve.VR.IVRRenderModels/_RenderModelHasComponent
struct _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0;
// Valve.VR.IVRResources/_GetResourceFullPath
struct _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6;
// Valve.VR.IVRResources/_LoadSharedResource
struct _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D;
// Valve.VR.IVRScreenshots/_GetScreenshotPropertyFilename
struct _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F;
// Valve.VR.IVRScreenshots/_GetScreenshotPropertyType
struct _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4;
// Valve.VR.IVRScreenshots/_HookScreenshot
struct _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF;
// Valve.VR.IVRScreenshots/_RequestScreenshot
struct _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2;
// Valve.VR.IVRScreenshots/_SubmitScreenshot
struct _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95;
// Valve.VR.IVRScreenshots/_TakeStereoScreenshot
struct _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2;
// Valve.VR.IVRScreenshots/_UpdateScreenshotProgress
struct _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503;
// Valve.VR.IVRSettings/_GetBool
struct _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672;
// Valve.VR.IVRSettings/_GetFloat
struct _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729;
// Valve.VR.IVRSettings/_GetInt32
struct _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE;
// Valve.VR.IVRSettings/_GetSettingsErrorNameFromEnum
struct _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF;
// Valve.VR.IVRSettings/_GetString
struct _GetString_t0C69AFED057772F90E19D351974F9DA664771905;
// Valve.VR.IVRSettings/_RemoveKeyInSection
struct _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9;
// Valve.VR.IVRSettings/_RemoveSection
struct _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF;
// Valve.VR.IVRSettings/_SetBool
struct _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C;
// Valve.VR.IVRSettings/_SetFloat
struct _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794;
// Valve.VR.IVRSettings/_SetInt32
struct _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B;
// Valve.VR.IVRSettings/_SetString
struct _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276;
// Valve.VR.IVRSettings/_Sync
struct _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C;
// Valve.VR.IVRSpatialAnchors/_CreateSpatialAnchorFromDescriptor
struct _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6;
// Valve.VR.IVRSpatialAnchors/_CreateSpatialAnchorFromPose
struct _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206;
// Valve.VR.IVRSpatialAnchors/_GetSpatialAnchorDescriptor
struct _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8;
// Valve.VR.IVRSpatialAnchors/_GetSpatialAnchorPose
struct _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF;

IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRScreenshotError_t6B97B51D59EE40AE0F8B28ACB608825D2058B86B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRScreenshotPropertyFilenames_t7FF4C5017769DFF38DD212F4BB9207C172FC0914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRScreenshotType_tDF3B2AADEE288D51AE786D7D96E1304A84AE78A9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayFlags_t9EA64894D2A21A9D6080E775FC9BD0E860416CB7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayInputMethod_t750A341CAE8A5373D778C2EBC4829646233A3659_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VROverlayTransformType_t0D09E5D670CD6E250A5E89B47D0F6F4B38BDC6F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _GetString_t0C69AFED057772F90E19D351974F9DA664771905_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C const uint32_t IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_com_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ClearOverlayTexture_BeginInvoke_mEB336BBBAD11225FB97F17E0CFF14E8A01172DD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ComputeOverlayIntersection_BeginInvoke_m446B4827B769F27E30D41E7D146253F4ED4F3786_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _CreateDashboardOverlay_BeginInvoke_m04A9E835E2384EFB187F6EB1AB8AB797F0839DC1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _CreateOverlay_BeginInvoke_m8D591D20022ABC599592093B7A398457D2D7BD82_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _CreateSpatialAnchorFromDescriptor_BeginInvoke_mCD0CF4301813C2A96022BC01263A5392DA0E5397_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _CreateSpatialAnchorFromPose_BeginInvoke_m234ADB033A92EC0A5B0FF45BE082AE2F281009CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _DestroyOverlay_BeginInvoke_m9B7F2B2EAF88D027017C9D6532DB6C02964EEF74_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _FindOverlay_BeginInvoke_m174D54C7D519765AFC0F7DB3610E782A0592305B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _FreeRenderModel_BeginInvoke_mB495C71312FBDA182EE697B65330F6F28B3B2942_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _FreeTextureD3D11_BeginInvoke_m743DA408154C2635D8B94D14B942AFA1713393D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _FreeTexture_BeginInvoke_mB05E73C55AF1AD30DDED3504235C36CDA7B730E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetBool_BeginInvoke_m3A777D4D6B45B722DBAFBC32FF8165B341E4EEBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetComponentName_BeginInvoke_mF762FCB5F4656A0C673378FB800E7314AE4E3E26_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetComponentRenderModelName_BeginInvoke_m972B5C9FC4420EC4E3E532CD8C6F68A0164ADD54_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetComponentStateForDevicePath_BeginInvoke_m681F02C7E2C21B593978406C9E84244B9DC70050_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetComponentState_BeginInvoke_mFF95FD86AE6DF58714A20C92A21FE4560645FE84_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetDashboardOverlaySceneProcess_BeginInvoke_m5DC8223B656DB72AC5175B52B98A1EDEA90CE2B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetFloat_BeginInvoke_m92E072EE65C71CBE6CFA3DE0F8D659836AA91028_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetInt32_BeginInvoke_m55CCD379B3D48CC45066EBAA7C332F97217CF9B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetKeyboardText_BeginInvoke_m5683612DFD09E9822139A63802701BAB8C551FCE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayAlpha_BeginInvoke_mB3DBCB095FFC2BDCC57A38E2458AC6E7D90989DC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayColor_BeginInvoke_m17642E8444D83209038425AF87AABB0AB6DAC568_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayCurvature_BeginInvoke_mB672D3797FC3578A4CCDA2AF585FD49B87F7AD61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayDualAnalogTransform_BeginInvoke_m9EB4866ECAEEAA63F6B46588112D01E7277797D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayErrorNameFromEnum_BeginInvoke_m32A57AFD0113D584E82EC7845F0BB1C6443C47CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayFlag_BeginInvoke_m52AD76BD0F713A9925A186C1449A29A82B3C8710_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayFlags_BeginInvoke_m10187FFFEDBE9B26CCC47E887B93E62F5EE70193_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayImageData_BeginInvoke_mE401C2CE415FC7AC292862D9AB1A27D9C54AD366_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayInputMethod_BeginInvoke_m9E69B7759BB409CDC56826DA3446EF7C3D9AAE04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayKey_BeginInvoke_m91F8B8B7DE36BD7264AFD390966F99FB03965492_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayMouseScale_BeginInvoke_m17F3B100EECE1E2272DE3C4DAFE1AB73C4E194B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayName_BeginInvoke_mB34BC68B6A65BB19751E5980EF2C67B79577846E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayRenderModel_BeginInvoke_m65100A24A061007F1141EBE93606774289B0F83A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayRenderingPid_BeginInvoke_m01FF2590F0E0F74E36F3E77F9C6E20E71CF91DB0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlaySortOrder_BeginInvoke_mA45DF1997E0FF2294EAA49224AEC1175C8E97E8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTexelAspect_BeginInvoke_m8616E5584B5FDDFD95DAB2721B85B1D17C67F6DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTextureBounds_BeginInvoke_mD527657050553630243CF8907CC46C288EEDFBF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTextureColorSpace_BeginInvoke_mEFAF87C9A925FFB7E74F11F31D665C173828FCC8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTextureSize_BeginInvoke_m70456B9AE71A91561400634E2D1BBDBF5DFD3974_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTexture_BeginInvoke_mF3EBC760965B5C8D6C3428842BD912D648678399_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTransformAbsolute_BeginInvoke_m8E9DF3F25A3B2FBDC3C9CA00C572AF496FDEAD80_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTransformOverlayRelative_BeginInvoke_m608C9517E835FB2EA1F39D24957AE61CD3212914_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTransformTrackedDeviceComponent_BeginInvoke_m9DDF6D45DFDD0F35020EDA90D0DFBCAB57F1B389_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTransformTrackedDeviceRelative_BeginInvoke_mAF0469EBEB428A93E896CE5D1C54862796D055C5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayTransformType_BeginInvoke_mE01DB8C5FE613916942B80F7EC2F7F71EDC861E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetOverlayWidthInMeters_BeginInvoke_m2911385F4488C1C9A767B3AEDFAFCF2329E65BA7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetRenderModelErrorNameFromEnum_BeginInvoke_m8B0BB8811D503842CBFA29985594909DF2BDF1A2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetRenderModelName_BeginInvoke_mE9ED1BE3CA883EA3EC9FA116C4B4A9AB001AF7B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetRenderModelOriginalPath_BeginInvoke_m337BF301783BF9E47E71C9E292FB07DF36E78B1B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetRenderModelThumbnailURL_BeginInvoke_m67D2E5A94AF4862E78ED98EC92CFCC88F3641A3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetResourceFullPath_BeginInvoke_mBC50132593E10070074116033DE95639A289D419_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetScreenshotPropertyFilename_BeginInvoke_m7641D57A1F024157725F34984F9AEED94B44B728_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetScreenshotPropertyType_BeginInvoke_mC87F32D2EC607FF5F20B224724D11A2A749BBA92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetSettingsErrorNameFromEnum_BeginInvoke_m0353D88625C992B617324A624B0FA2BDDACD2537_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetSpatialAnchorDescriptor_BeginInvoke_mD663CFCE8185B57CF39CADF61EBE70E063A33010_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetString_BeginInvoke_m1B35BD7A93AAB13F8E3D0457B46DCFB6DC122F35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _GetTransformForOverlayCoordinates_BeginInvoke_m31693500B87325CA6963309965913BDCC9767F75_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _HideOverlay_BeginInvoke_m96CF36F0E1916D5707D0EB52CADAD5801FDE7F7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _HookScreenshot_BeginInvoke_mB37F6C8C0B002D4723D98AF78342F4C87DB22DB1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _IsActiveDashboardOverlay_BeginInvoke_m8BF868D2013411E0CB2993E42D069F9D3C1FD005_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _IsHoverTargetOverlay_BeginInvoke_mF2C7D56D0F07E2D95D6CDCFE0CCA455360556DE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _IsOverlayVisible_BeginInvoke_m7F52ED5C96CCB87B2FFF321AA20266CFFFE408B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _LoadIntoTextureD3D11_Async_BeginInvoke_mC9F3348B8F5779B89AAFFA5BF1BB515E94B9F98D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _LoadRenderModel_Async_BeginInvoke_m3209521234765ABEEA94CA75DC488A5948FFF93C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _LoadSharedResource_BeginInvoke_m28E3CA827E46CCC89F01AB7FC1F683150B2469F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _LoadTextureD3D11_Async_BeginInvoke_m2BC821343222E7A991713078136236E0C8C330FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _LoadTexture_Async_BeginInvoke_m435CF6AF9F81AA8ED743BCA9A1BFC9072C52F7C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _PollNextOverlayEvent_BeginInvoke_m60C62AA28ECF3B1F5F9160312CEBC2214791E6E0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ReleaseNativeOverlayHandle_BeginInvoke_m6910C87E6831C64AA3F1CCFEB9ED6185D10CD2B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _RemoveKeyInSection_BeginInvoke_m37956AE42566E08B4343779F550BCA822D30D101_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _RemoveSection_BeginInvoke_m8FDCB521373589BDD5592FE6A71CE9FEA8773B5A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _RequestScreenshot_BeginInvoke_m144F10F62D898B50D77F36C2AD2AD1668F39DBF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetBool_BeginInvoke_mC1AF73978160A3CEB74257A11F244B5F74DC16E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetDashboardOverlaySceneProcess_BeginInvoke_m752040E26C14297449EB841AFB3AB6E6057A2984_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetFloat_BeginInvoke_mE276E98870AE6BBE53B76BD472DFDA4C642AEF6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetInt32_BeginInvoke_m8ECDA7F3ECDF62052235CF7A865D773A3C45925E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetKeyboardPositionForOverlay_BeginInvoke_m1F23E74A0BDC5FCABA688BBC5FED68EFB08B6791_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetKeyboardTransformAbsolute_BeginInvoke_mDDB6F5E35BE83B001022B50B7CB1D9F7020F5F45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayAlpha_BeginInvoke_mB007B9BB5F4954CEDE94E4887A0B0E180844D279_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayColor_BeginInvoke_mF0C23FCDE90E280A4FEB25DDC89BA9C23FC980E8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayCurvature_BeginInvoke_m4D9FC461F7E26000203C87EBE7E5F5901AB1A412_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayDualAnalogTransform_BeginInvoke_m902D590F0EEBF96E7BFA84A74F71D57C2362421A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayFlag_BeginInvoke_mE842C745526EA169C9D4AD9AD4AE875961B4463F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayFromFile_BeginInvoke_m4B322EA3E78CBD9F71EC4D442DC12BE534C5A738_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayInputMethod_BeginInvoke_m7B9C7981EE739086F0E288800386DA8FF02C1443_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayIntersectionMask_BeginInvoke_m9268603B9DDB513AD08EE9DC8E9BC96F96BCD9EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayMouseScale_BeginInvoke_mF6DE909113215C8A9BE0236A06739AC840204CAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayName_BeginInvoke_m8D99905E8D264A33E3B6378BB6B9BF8B7F3F7A53_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayRaw_BeginInvoke_mD458637A632F6C9E00264403C738019DE9E32D18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayRenderModel_BeginInvoke_m9087BC2DA95F34ED6D04F8373BDA7975924426C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayRenderingPid_BeginInvoke_m6088108F6F947BA2C1A83F7DAB04EF7503583504_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlaySortOrder_BeginInvoke_m3A8112705592B35900896B83F017F4EF9610EE5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTexelAspect_BeginInvoke_m62BE594510848EC5CC09FB8B3CC392F4408BD92F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTextureBounds_BeginInvoke_m7356831655501E50DD5C7604BD93E51A00FCE195_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTextureColorSpace_BeginInvoke_mAC450FE53DD8BE60CB8C991435D53BC138EEF6C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTexture_BeginInvoke_m66F72B1631803B3328AF234AF94FDD5ABCA2A33B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTransformAbsolute_BeginInvoke_m2D7D649830AF55C7AD6DF47DBC972EAD7C2D6CAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTransformOverlayRelative_BeginInvoke_m31BB4ECF00AAECD11F7E0EFF6A6D88EF2B26BED8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTransformTrackedDeviceComponent_BeginInvoke_mF00379E5B0E5956852287D70ED96004D298CC84A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m71927E2B1F9CAE058B9D49B8B5B90104161D1CA1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetOverlayWidthInMeters_BeginInvoke_m38DF8589895C441B58B23C4C3D2621397AEC78E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SetString_BeginInvoke_m6CF17BE13AAD4D27C70961391FA8AC2E51996B1A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ShowKeyboardForOverlay_BeginInvoke_mE2EC4790CFEF1307E2DD1ABA721E228F53FB7F8D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ShowKeyboard_BeginInvoke_m974C0B860A556AA69288FDBE6CBF13BA5AB15B93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _ShowOverlay_BeginInvoke_mBB1A7366A7CA38B52B6736C3A78FBA1639292DCC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _SubmitScreenshot_BeginInvoke_mEE8E0DB5FFAC6A291702135F03FA91F5EBAF68BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _Sync_BeginInvoke_m696CA40D9ED00625319CA0D95FDBD627AB53E79C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _TakeStereoScreenshot_BeginInvoke_mFA941B1A3ABD7196E182FD50951F1800F08AFFAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t _UpdateScreenshotProgress_BeginInvoke_m716C00E0EF8D7E96A546999F080D2293143F3F57_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkChars_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkPrevious_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// Valve.VR.HmdColor_t
struct  HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 
{
public:
	// System.Single Valve.VR.HmdColor_t::r
	float ___r_0;
	// System.Single Valve.VR.HmdColor_t::g
	float ___g_1;
	// System.Single Valve.VR.HmdColor_t::b
	float ___b_2;
	// System.Single Valve.VR.HmdColor_t::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdVector2_t
struct  HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 
{
public:
	// System.Single Valve.VR.HmdVector2_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector2_t::v1
	float ___v1_1;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}
};


// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.IVRRenderModels
struct  IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25 
{
public:
	// Valve.VR.IVRRenderModels__LoadRenderModel_Async Valve.VR.IVRRenderModels::LoadRenderModel_Async
	_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * ___LoadRenderModel_Async_0;
	// Valve.VR.IVRRenderModels__FreeRenderModel Valve.VR.IVRRenderModels::FreeRenderModel
	_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * ___FreeRenderModel_1;
	// Valve.VR.IVRRenderModels__LoadTexture_Async Valve.VR.IVRRenderModels::LoadTexture_Async
	_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * ___LoadTexture_Async_2;
	// Valve.VR.IVRRenderModels__FreeTexture Valve.VR.IVRRenderModels::FreeTexture
	_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * ___FreeTexture_3;
	// Valve.VR.IVRRenderModels__LoadTextureD3D11_Async Valve.VR.IVRRenderModels::LoadTextureD3D11_Async
	_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * ___LoadTextureD3D11_Async_4;
	// Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async Valve.VR.IVRRenderModels::LoadIntoTextureD3D11_Async
	_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * ___LoadIntoTextureD3D11_Async_5;
	// Valve.VR.IVRRenderModels__FreeTextureD3D11 Valve.VR.IVRRenderModels::FreeTextureD3D11
	_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * ___FreeTextureD3D11_6;
	// Valve.VR.IVRRenderModels__GetRenderModelName Valve.VR.IVRRenderModels::GetRenderModelName
	_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * ___GetRenderModelName_7;
	// Valve.VR.IVRRenderModels__GetRenderModelCount Valve.VR.IVRRenderModels::GetRenderModelCount
	_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * ___GetRenderModelCount_8;
	// Valve.VR.IVRRenderModels__GetComponentCount Valve.VR.IVRRenderModels::GetComponentCount
	_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * ___GetComponentCount_9;
	// Valve.VR.IVRRenderModels__GetComponentName Valve.VR.IVRRenderModels::GetComponentName
	_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * ___GetComponentName_10;
	// Valve.VR.IVRRenderModels__GetComponentButtonMask Valve.VR.IVRRenderModels::GetComponentButtonMask
	_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * ___GetComponentButtonMask_11;
	// Valve.VR.IVRRenderModels__GetComponentRenderModelName Valve.VR.IVRRenderModels::GetComponentRenderModelName
	_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * ___GetComponentRenderModelName_12;
	// Valve.VR.IVRRenderModels__GetComponentStateForDevicePath Valve.VR.IVRRenderModels::GetComponentStateForDevicePath
	_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * ___GetComponentStateForDevicePath_13;
	// Valve.VR.IVRRenderModels__GetComponentState Valve.VR.IVRRenderModels::GetComponentState
	_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * ___GetComponentState_14;
	// Valve.VR.IVRRenderModels__RenderModelHasComponent Valve.VR.IVRRenderModels::RenderModelHasComponent
	_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * ___RenderModelHasComponent_15;
	// Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL Valve.VR.IVRRenderModels::GetRenderModelThumbnailURL
	_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * ___GetRenderModelThumbnailURL_16;
	// Valve.VR.IVRRenderModels__GetRenderModelOriginalPath Valve.VR.IVRRenderModels::GetRenderModelOriginalPath
	_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * ___GetRenderModelOriginalPath_17;
	// Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum Valve.VR.IVRRenderModels::GetRenderModelErrorNameFromEnum
	_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * ___GetRenderModelErrorNameFromEnum_18;

public:
	inline static int32_t get_offset_of_LoadRenderModel_Async_0() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___LoadRenderModel_Async_0)); }
	inline _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * get_LoadRenderModel_Async_0() const { return ___LoadRenderModel_Async_0; }
	inline _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 ** get_address_of_LoadRenderModel_Async_0() { return &___LoadRenderModel_Async_0; }
	inline void set_LoadRenderModel_Async_0(_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * value)
	{
		___LoadRenderModel_Async_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LoadRenderModel_Async_0), (void*)value);
	}

	inline static int32_t get_offset_of_FreeRenderModel_1() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___FreeRenderModel_1)); }
	inline _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * get_FreeRenderModel_1() const { return ___FreeRenderModel_1; }
	inline _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 ** get_address_of_FreeRenderModel_1() { return &___FreeRenderModel_1; }
	inline void set_FreeRenderModel_1(_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * value)
	{
		___FreeRenderModel_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FreeRenderModel_1), (void*)value);
	}

	inline static int32_t get_offset_of_LoadTexture_Async_2() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___LoadTexture_Async_2)); }
	inline _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * get_LoadTexture_Async_2() const { return ___LoadTexture_Async_2; }
	inline _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 ** get_address_of_LoadTexture_Async_2() { return &___LoadTexture_Async_2; }
	inline void set_LoadTexture_Async_2(_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * value)
	{
		___LoadTexture_Async_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LoadTexture_Async_2), (void*)value);
	}

	inline static int32_t get_offset_of_FreeTexture_3() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___FreeTexture_3)); }
	inline _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * get_FreeTexture_3() const { return ___FreeTexture_3; }
	inline _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF ** get_address_of_FreeTexture_3() { return &___FreeTexture_3; }
	inline void set_FreeTexture_3(_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * value)
	{
		___FreeTexture_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FreeTexture_3), (void*)value);
	}

	inline static int32_t get_offset_of_LoadTextureD3D11_Async_4() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___LoadTextureD3D11_Async_4)); }
	inline _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * get_LoadTextureD3D11_Async_4() const { return ___LoadTextureD3D11_Async_4; }
	inline _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 ** get_address_of_LoadTextureD3D11_Async_4() { return &___LoadTextureD3D11_Async_4; }
	inline void set_LoadTextureD3D11_Async_4(_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * value)
	{
		___LoadTextureD3D11_Async_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LoadTextureD3D11_Async_4), (void*)value);
	}

	inline static int32_t get_offset_of_LoadIntoTextureD3D11_Async_5() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___LoadIntoTextureD3D11_Async_5)); }
	inline _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * get_LoadIntoTextureD3D11_Async_5() const { return ___LoadIntoTextureD3D11_Async_5; }
	inline _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 ** get_address_of_LoadIntoTextureD3D11_Async_5() { return &___LoadIntoTextureD3D11_Async_5; }
	inline void set_LoadIntoTextureD3D11_Async_5(_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * value)
	{
		___LoadIntoTextureD3D11_Async_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LoadIntoTextureD3D11_Async_5), (void*)value);
	}

	inline static int32_t get_offset_of_FreeTextureD3D11_6() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___FreeTextureD3D11_6)); }
	inline _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * get_FreeTextureD3D11_6() const { return ___FreeTextureD3D11_6; }
	inline _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 ** get_address_of_FreeTextureD3D11_6() { return &___FreeTextureD3D11_6; }
	inline void set_FreeTextureD3D11_6(_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * value)
	{
		___FreeTextureD3D11_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FreeTextureD3D11_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetRenderModelName_7() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetRenderModelName_7)); }
	inline _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * get_GetRenderModelName_7() const { return ___GetRenderModelName_7; }
	inline _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 ** get_address_of_GetRenderModelName_7() { return &___GetRenderModelName_7; }
	inline void set_GetRenderModelName_7(_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * value)
	{
		___GetRenderModelName_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetRenderModelName_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetRenderModelCount_8() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetRenderModelCount_8)); }
	inline _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * get_GetRenderModelCount_8() const { return ___GetRenderModelCount_8; }
	inline _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 ** get_address_of_GetRenderModelCount_8() { return &___GetRenderModelCount_8; }
	inline void set_GetRenderModelCount_8(_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * value)
	{
		___GetRenderModelCount_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetRenderModelCount_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentCount_9() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentCount_9)); }
	inline _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * get_GetComponentCount_9() const { return ___GetComponentCount_9; }
	inline _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 ** get_address_of_GetComponentCount_9() { return &___GetComponentCount_9; }
	inline void set_GetComponentCount_9(_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * value)
	{
		___GetComponentCount_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentCount_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentName_10() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentName_10)); }
	inline _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * get_GetComponentName_10() const { return ___GetComponentName_10; }
	inline _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA ** get_address_of_GetComponentName_10() { return &___GetComponentName_10; }
	inline void set_GetComponentName_10(_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * value)
	{
		___GetComponentName_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentName_10), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentButtonMask_11() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentButtonMask_11)); }
	inline _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * get_GetComponentButtonMask_11() const { return ___GetComponentButtonMask_11; }
	inline _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE ** get_address_of_GetComponentButtonMask_11() { return &___GetComponentButtonMask_11; }
	inline void set_GetComponentButtonMask_11(_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * value)
	{
		___GetComponentButtonMask_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentButtonMask_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentRenderModelName_12() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentRenderModelName_12)); }
	inline _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * get_GetComponentRenderModelName_12() const { return ___GetComponentRenderModelName_12; }
	inline _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 ** get_address_of_GetComponentRenderModelName_12() { return &___GetComponentRenderModelName_12; }
	inline void set_GetComponentRenderModelName_12(_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * value)
	{
		___GetComponentRenderModelName_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentRenderModelName_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentStateForDevicePath_13() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentStateForDevicePath_13)); }
	inline _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * get_GetComponentStateForDevicePath_13() const { return ___GetComponentStateForDevicePath_13; }
	inline _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 ** get_address_of_GetComponentStateForDevicePath_13() { return &___GetComponentStateForDevicePath_13; }
	inline void set_GetComponentStateForDevicePath_13(_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * value)
	{
		___GetComponentStateForDevicePath_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentStateForDevicePath_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentState_14() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetComponentState_14)); }
	inline _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * get_GetComponentState_14() const { return ___GetComponentState_14; }
	inline _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B ** get_address_of_GetComponentState_14() { return &___GetComponentState_14; }
	inline void set_GetComponentState_14(_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * value)
	{
		___GetComponentState_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentState_14), (void*)value);
	}

	inline static int32_t get_offset_of_RenderModelHasComponent_15() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___RenderModelHasComponent_15)); }
	inline _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * get_RenderModelHasComponent_15() const { return ___RenderModelHasComponent_15; }
	inline _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 ** get_address_of_RenderModelHasComponent_15() { return &___RenderModelHasComponent_15; }
	inline void set_RenderModelHasComponent_15(_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * value)
	{
		___RenderModelHasComponent_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RenderModelHasComponent_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetRenderModelThumbnailURL_16() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetRenderModelThumbnailURL_16)); }
	inline _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * get_GetRenderModelThumbnailURL_16() const { return ___GetRenderModelThumbnailURL_16; }
	inline _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE ** get_address_of_GetRenderModelThumbnailURL_16() { return &___GetRenderModelThumbnailURL_16; }
	inline void set_GetRenderModelThumbnailURL_16(_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * value)
	{
		___GetRenderModelThumbnailURL_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetRenderModelThumbnailURL_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetRenderModelOriginalPath_17() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetRenderModelOriginalPath_17)); }
	inline _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * get_GetRenderModelOriginalPath_17() const { return ___GetRenderModelOriginalPath_17; }
	inline _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF ** get_address_of_GetRenderModelOriginalPath_17() { return &___GetRenderModelOriginalPath_17; }
	inline void set_GetRenderModelOriginalPath_17(_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * value)
	{
		___GetRenderModelOriginalPath_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetRenderModelOriginalPath_17), (void*)value);
	}

	inline static int32_t get_offset_of_GetRenderModelErrorNameFromEnum_18() { return static_cast<int32_t>(offsetof(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25, ___GetRenderModelErrorNameFromEnum_18)); }
	inline _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * get_GetRenderModelErrorNameFromEnum_18() const { return ___GetRenderModelErrorNameFromEnum_18; }
	inline _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B ** get_address_of_GetRenderModelErrorNameFromEnum_18() { return &___GetRenderModelErrorNameFromEnum_18; }
	inline void set_GetRenderModelErrorNameFromEnum_18(_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * value)
	{
		___GetRenderModelErrorNameFromEnum_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetRenderModelErrorNameFromEnum_18), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRRenderModels
struct IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_pinvoke
{
	Il2CppMethodPointer ___LoadRenderModel_Async_0;
	Il2CppMethodPointer ___FreeRenderModel_1;
	Il2CppMethodPointer ___LoadTexture_Async_2;
	Il2CppMethodPointer ___FreeTexture_3;
	Il2CppMethodPointer ___LoadTextureD3D11_Async_4;
	Il2CppMethodPointer ___LoadIntoTextureD3D11_Async_5;
	Il2CppMethodPointer ___FreeTextureD3D11_6;
	Il2CppMethodPointer ___GetRenderModelName_7;
	Il2CppMethodPointer ___GetRenderModelCount_8;
	Il2CppMethodPointer ___GetComponentCount_9;
	Il2CppMethodPointer ___GetComponentName_10;
	Il2CppMethodPointer ___GetComponentButtonMask_11;
	Il2CppMethodPointer ___GetComponentRenderModelName_12;
	Il2CppMethodPointer ___GetComponentStateForDevicePath_13;
	Il2CppMethodPointer ___GetComponentState_14;
	Il2CppMethodPointer ___RenderModelHasComponent_15;
	Il2CppMethodPointer ___GetRenderModelThumbnailURL_16;
	Il2CppMethodPointer ___GetRenderModelOriginalPath_17;
	Il2CppMethodPointer ___GetRenderModelErrorNameFromEnum_18;
};
// Native definition for COM marshalling of Valve.VR.IVRRenderModels
struct IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_com
{
	Il2CppMethodPointer ___LoadRenderModel_Async_0;
	Il2CppMethodPointer ___FreeRenderModel_1;
	Il2CppMethodPointer ___LoadTexture_Async_2;
	Il2CppMethodPointer ___FreeTexture_3;
	Il2CppMethodPointer ___LoadTextureD3D11_Async_4;
	Il2CppMethodPointer ___LoadIntoTextureD3D11_Async_5;
	Il2CppMethodPointer ___FreeTextureD3D11_6;
	Il2CppMethodPointer ___GetRenderModelName_7;
	Il2CppMethodPointer ___GetRenderModelCount_8;
	Il2CppMethodPointer ___GetComponentCount_9;
	Il2CppMethodPointer ___GetComponentName_10;
	Il2CppMethodPointer ___GetComponentButtonMask_11;
	Il2CppMethodPointer ___GetComponentRenderModelName_12;
	Il2CppMethodPointer ___GetComponentStateForDevicePath_13;
	Il2CppMethodPointer ___GetComponentState_14;
	Il2CppMethodPointer ___RenderModelHasComponent_15;
	Il2CppMethodPointer ___GetRenderModelThumbnailURL_16;
	Il2CppMethodPointer ___GetRenderModelOriginalPath_17;
	Il2CppMethodPointer ___GetRenderModelErrorNameFromEnum_18;
};

// Valve.VR.IVRResources
struct  IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C 
{
public:
	// Valve.VR.IVRResources__LoadSharedResource Valve.VR.IVRResources::LoadSharedResource
	_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * ___LoadSharedResource_0;
	// Valve.VR.IVRResources__GetResourceFullPath Valve.VR.IVRResources::GetResourceFullPath
	_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * ___GetResourceFullPath_1;

public:
	inline static int32_t get_offset_of_LoadSharedResource_0() { return static_cast<int32_t>(offsetof(IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C, ___LoadSharedResource_0)); }
	inline _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * get_LoadSharedResource_0() const { return ___LoadSharedResource_0; }
	inline _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D ** get_address_of_LoadSharedResource_0() { return &___LoadSharedResource_0; }
	inline void set_LoadSharedResource_0(_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * value)
	{
		___LoadSharedResource_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LoadSharedResource_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetResourceFullPath_1() { return static_cast<int32_t>(offsetof(IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C, ___GetResourceFullPath_1)); }
	inline _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * get_GetResourceFullPath_1() const { return ___GetResourceFullPath_1; }
	inline _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 ** get_address_of_GetResourceFullPath_1() { return &___GetResourceFullPath_1; }
	inline void set_GetResourceFullPath_1(_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * value)
	{
		___GetResourceFullPath_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetResourceFullPath_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRResources
struct IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_pinvoke
{
	Il2CppMethodPointer ___LoadSharedResource_0;
	Il2CppMethodPointer ___GetResourceFullPath_1;
};
// Native definition for COM marshalling of Valve.VR.IVRResources
struct IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_com
{
	Il2CppMethodPointer ___LoadSharedResource_0;
	Il2CppMethodPointer ___GetResourceFullPath_1;
};

// Valve.VR.IVRScreenshots
struct  IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92 
{
public:
	// Valve.VR.IVRScreenshots__RequestScreenshot Valve.VR.IVRScreenshots::RequestScreenshot
	_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * ___RequestScreenshot_0;
	// Valve.VR.IVRScreenshots__HookScreenshot Valve.VR.IVRScreenshots::HookScreenshot
	_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * ___HookScreenshot_1;
	// Valve.VR.IVRScreenshots__GetScreenshotPropertyType Valve.VR.IVRScreenshots::GetScreenshotPropertyType
	_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * ___GetScreenshotPropertyType_2;
	// Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename Valve.VR.IVRScreenshots::GetScreenshotPropertyFilename
	_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * ___GetScreenshotPropertyFilename_3;
	// Valve.VR.IVRScreenshots__UpdateScreenshotProgress Valve.VR.IVRScreenshots::UpdateScreenshotProgress
	_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * ___UpdateScreenshotProgress_4;
	// Valve.VR.IVRScreenshots__TakeStereoScreenshot Valve.VR.IVRScreenshots::TakeStereoScreenshot
	_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * ___TakeStereoScreenshot_5;
	// Valve.VR.IVRScreenshots__SubmitScreenshot Valve.VR.IVRScreenshots::SubmitScreenshot
	_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * ___SubmitScreenshot_6;

public:
	inline static int32_t get_offset_of_RequestScreenshot_0() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___RequestScreenshot_0)); }
	inline _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * get_RequestScreenshot_0() const { return ___RequestScreenshot_0; }
	inline _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 ** get_address_of_RequestScreenshot_0() { return &___RequestScreenshot_0; }
	inline void set_RequestScreenshot_0(_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * value)
	{
		___RequestScreenshot_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RequestScreenshot_0), (void*)value);
	}

	inline static int32_t get_offset_of_HookScreenshot_1() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___HookScreenshot_1)); }
	inline _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * get_HookScreenshot_1() const { return ___HookScreenshot_1; }
	inline _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF ** get_address_of_HookScreenshot_1() { return &___HookScreenshot_1; }
	inline void set_HookScreenshot_1(_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * value)
	{
		___HookScreenshot_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___HookScreenshot_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetScreenshotPropertyType_2() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___GetScreenshotPropertyType_2)); }
	inline _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * get_GetScreenshotPropertyType_2() const { return ___GetScreenshotPropertyType_2; }
	inline _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 ** get_address_of_GetScreenshotPropertyType_2() { return &___GetScreenshotPropertyType_2; }
	inline void set_GetScreenshotPropertyType_2(_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * value)
	{
		___GetScreenshotPropertyType_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetScreenshotPropertyType_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetScreenshotPropertyFilename_3() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___GetScreenshotPropertyFilename_3)); }
	inline _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * get_GetScreenshotPropertyFilename_3() const { return ___GetScreenshotPropertyFilename_3; }
	inline _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F ** get_address_of_GetScreenshotPropertyFilename_3() { return &___GetScreenshotPropertyFilename_3; }
	inline void set_GetScreenshotPropertyFilename_3(_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * value)
	{
		___GetScreenshotPropertyFilename_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetScreenshotPropertyFilename_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateScreenshotProgress_4() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___UpdateScreenshotProgress_4)); }
	inline _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * get_UpdateScreenshotProgress_4() const { return ___UpdateScreenshotProgress_4; }
	inline _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 ** get_address_of_UpdateScreenshotProgress_4() { return &___UpdateScreenshotProgress_4; }
	inline void set_UpdateScreenshotProgress_4(_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * value)
	{
		___UpdateScreenshotProgress_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateScreenshotProgress_4), (void*)value);
	}

	inline static int32_t get_offset_of_TakeStereoScreenshot_5() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___TakeStereoScreenshot_5)); }
	inline _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * get_TakeStereoScreenshot_5() const { return ___TakeStereoScreenshot_5; }
	inline _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 ** get_address_of_TakeStereoScreenshot_5() { return &___TakeStereoScreenshot_5; }
	inline void set_TakeStereoScreenshot_5(_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * value)
	{
		___TakeStereoScreenshot_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TakeStereoScreenshot_5), (void*)value);
	}

	inline static int32_t get_offset_of_SubmitScreenshot_6() { return static_cast<int32_t>(offsetof(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92, ___SubmitScreenshot_6)); }
	inline _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * get_SubmitScreenshot_6() const { return ___SubmitScreenshot_6; }
	inline _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 ** get_address_of_SubmitScreenshot_6() { return &___SubmitScreenshot_6; }
	inline void set_SubmitScreenshot_6(_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * value)
	{
		___SubmitScreenshot_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SubmitScreenshot_6), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRScreenshots
struct IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_pinvoke
{
	Il2CppMethodPointer ___RequestScreenshot_0;
	Il2CppMethodPointer ___HookScreenshot_1;
	Il2CppMethodPointer ___GetScreenshotPropertyType_2;
	Il2CppMethodPointer ___GetScreenshotPropertyFilename_3;
	Il2CppMethodPointer ___UpdateScreenshotProgress_4;
	Il2CppMethodPointer ___TakeStereoScreenshot_5;
	Il2CppMethodPointer ___SubmitScreenshot_6;
};
// Native definition for COM marshalling of Valve.VR.IVRScreenshots
struct IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_com
{
	Il2CppMethodPointer ___RequestScreenshot_0;
	Il2CppMethodPointer ___HookScreenshot_1;
	Il2CppMethodPointer ___GetScreenshotPropertyType_2;
	Il2CppMethodPointer ___GetScreenshotPropertyFilename_3;
	Il2CppMethodPointer ___UpdateScreenshotProgress_4;
	Il2CppMethodPointer ___TakeStereoScreenshot_5;
	Il2CppMethodPointer ___SubmitScreenshot_6;
};

// Valve.VR.IVRSettings
struct  IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239 
{
public:
	// Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum Valve.VR.IVRSettings::GetSettingsErrorNameFromEnum
	_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * ___GetSettingsErrorNameFromEnum_0;
	// Valve.VR.IVRSettings__Sync Valve.VR.IVRSettings::Sync
	_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * ___Sync_1;
	// Valve.VR.IVRSettings__SetBool Valve.VR.IVRSettings::SetBool
	_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * ___SetBool_2;
	// Valve.VR.IVRSettings__SetInt32 Valve.VR.IVRSettings::SetInt32
	_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * ___SetInt32_3;
	// Valve.VR.IVRSettings__SetFloat Valve.VR.IVRSettings::SetFloat
	_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * ___SetFloat_4;
	// Valve.VR.IVRSettings__SetString Valve.VR.IVRSettings::SetString
	_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * ___SetString_5;
	// Valve.VR.IVRSettings__GetBool Valve.VR.IVRSettings::GetBool
	_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * ___GetBool_6;
	// Valve.VR.IVRSettings__GetInt32 Valve.VR.IVRSettings::GetInt32
	_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * ___GetInt32_7;
	// Valve.VR.IVRSettings__GetFloat Valve.VR.IVRSettings::GetFloat
	_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * ___GetFloat_8;
	// Valve.VR.IVRSettings__GetString Valve.VR.IVRSettings::GetString
	_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * ___GetString_9;
	// Valve.VR.IVRSettings__RemoveSection Valve.VR.IVRSettings::RemoveSection
	_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * ___RemoveSection_10;
	// Valve.VR.IVRSettings__RemoveKeyInSection Valve.VR.IVRSettings::RemoveKeyInSection
	_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * ___RemoveKeyInSection_11;

public:
	inline static int32_t get_offset_of_GetSettingsErrorNameFromEnum_0() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___GetSettingsErrorNameFromEnum_0)); }
	inline _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * get_GetSettingsErrorNameFromEnum_0() const { return ___GetSettingsErrorNameFromEnum_0; }
	inline _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF ** get_address_of_GetSettingsErrorNameFromEnum_0() { return &___GetSettingsErrorNameFromEnum_0; }
	inline void set_GetSettingsErrorNameFromEnum_0(_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * value)
	{
		___GetSettingsErrorNameFromEnum_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSettingsErrorNameFromEnum_0), (void*)value);
	}

	inline static int32_t get_offset_of_Sync_1() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___Sync_1)); }
	inline _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * get_Sync_1() const { return ___Sync_1; }
	inline _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C ** get_address_of_Sync_1() { return &___Sync_1; }
	inline void set_Sync_1(_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * value)
	{
		___Sync_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Sync_1), (void*)value);
	}

	inline static int32_t get_offset_of_SetBool_2() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___SetBool_2)); }
	inline _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * get_SetBool_2() const { return ___SetBool_2; }
	inline _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C ** get_address_of_SetBool_2() { return &___SetBool_2; }
	inline void set_SetBool_2(_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * value)
	{
		___SetBool_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetBool_2), (void*)value);
	}

	inline static int32_t get_offset_of_SetInt32_3() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___SetInt32_3)); }
	inline _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * get_SetInt32_3() const { return ___SetInt32_3; }
	inline _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B ** get_address_of_SetInt32_3() { return &___SetInt32_3; }
	inline void set_SetInt32_3(_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * value)
	{
		___SetInt32_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetInt32_3), (void*)value);
	}

	inline static int32_t get_offset_of_SetFloat_4() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___SetFloat_4)); }
	inline _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * get_SetFloat_4() const { return ___SetFloat_4; }
	inline _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 ** get_address_of_SetFloat_4() { return &___SetFloat_4; }
	inline void set_SetFloat_4(_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * value)
	{
		___SetFloat_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetFloat_4), (void*)value);
	}

	inline static int32_t get_offset_of_SetString_5() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___SetString_5)); }
	inline _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * get_SetString_5() const { return ___SetString_5; }
	inline _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 ** get_address_of_SetString_5() { return &___SetString_5; }
	inline void set_SetString_5(_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * value)
	{
		___SetString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetString_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetBool_6() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___GetBool_6)); }
	inline _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * get_GetBool_6() const { return ___GetBool_6; }
	inline _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 ** get_address_of_GetBool_6() { return &___GetBool_6; }
	inline void set_GetBool_6(_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * value)
	{
		___GetBool_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBool_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetInt32_7() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___GetInt32_7)); }
	inline _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * get_GetInt32_7() const { return ___GetInt32_7; }
	inline _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE ** get_address_of_GetInt32_7() { return &___GetInt32_7; }
	inline void set_GetInt32_7(_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * value)
	{
		___GetInt32_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInt32_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetFloat_8() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___GetFloat_8)); }
	inline _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * get_GetFloat_8() const { return ___GetFloat_8; }
	inline _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 ** get_address_of_GetFloat_8() { return &___GetFloat_8; }
	inline void set_GetFloat_8(_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * value)
	{
		___GetFloat_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFloat_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetString_9() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___GetString_9)); }
	inline _GetString_t0C69AFED057772F90E19D351974F9DA664771905 * get_GetString_9() const { return ___GetString_9; }
	inline _GetString_t0C69AFED057772F90E19D351974F9DA664771905 ** get_address_of_GetString_9() { return &___GetString_9; }
	inline void set_GetString_9(_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * value)
	{
		___GetString_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetString_9), (void*)value);
	}

	inline static int32_t get_offset_of_RemoveSection_10() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___RemoveSection_10)); }
	inline _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * get_RemoveSection_10() const { return ___RemoveSection_10; }
	inline _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF ** get_address_of_RemoveSection_10() { return &___RemoveSection_10; }
	inline void set_RemoveSection_10(_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * value)
	{
		___RemoveSection_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RemoveSection_10), (void*)value);
	}

	inline static int32_t get_offset_of_RemoveKeyInSection_11() { return static_cast<int32_t>(offsetof(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239, ___RemoveKeyInSection_11)); }
	inline _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * get_RemoveKeyInSection_11() const { return ___RemoveKeyInSection_11; }
	inline _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 ** get_address_of_RemoveKeyInSection_11() { return &___RemoveKeyInSection_11; }
	inline void set_RemoveKeyInSection_11(_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * value)
	{
		___RemoveKeyInSection_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RemoveKeyInSection_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRSettings
struct IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetSettingsErrorNameFromEnum_0;
	Il2CppMethodPointer ___Sync_1;
	Il2CppMethodPointer ___SetBool_2;
	Il2CppMethodPointer ___SetInt32_3;
	Il2CppMethodPointer ___SetFloat_4;
	Il2CppMethodPointer ___SetString_5;
	Il2CppMethodPointer ___GetBool_6;
	Il2CppMethodPointer ___GetInt32_7;
	Il2CppMethodPointer ___GetFloat_8;
	Il2CppMethodPointer ___GetString_9;
	Il2CppMethodPointer ___RemoveSection_10;
	Il2CppMethodPointer ___RemoveKeyInSection_11;
};
// Native definition for COM marshalling of Valve.VR.IVRSettings
struct IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_com
{
	Il2CppMethodPointer ___GetSettingsErrorNameFromEnum_0;
	Il2CppMethodPointer ___Sync_1;
	Il2CppMethodPointer ___SetBool_2;
	Il2CppMethodPointer ___SetInt32_3;
	Il2CppMethodPointer ___SetFloat_4;
	Il2CppMethodPointer ___SetString_5;
	Il2CppMethodPointer ___GetBool_6;
	Il2CppMethodPointer ___GetInt32_7;
	Il2CppMethodPointer ___GetFloat_8;
	Il2CppMethodPointer ___GetString_9;
	Il2CppMethodPointer ___RemoveSection_10;
	Il2CppMethodPointer ___RemoveKeyInSection_11;
};

// Valve.VR.IVRSpatialAnchors
struct  IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758 
{
public:
	// Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor Valve.VR.IVRSpatialAnchors::CreateSpatialAnchorFromDescriptor
	_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * ___CreateSpatialAnchorFromDescriptor_0;
	// Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose Valve.VR.IVRSpatialAnchors::CreateSpatialAnchorFromPose
	_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * ___CreateSpatialAnchorFromPose_1;
	// Valve.VR.IVRSpatialAnchors__GetSpatialAnchorPose Valve.VR.IVRSpatialAnchors::GetSpatialAnchorPose
	_GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF * ___GetSpatialAnchorPose_2;
	// Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor Valve.VR.IVRSpatialAnchors::GetSpatialAnchorDescriptor
	_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * ___GetSpatialAnchorDescriptor_3;

public:
	inline static int32_t get_offset_of_CreateSpatialAnchorFromDescriptor_0() { return static_cast<int32_t>(offsetof(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758, ___CreateSpatialAnchorFromDescriptor_0)); }
	inline _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * get_CreateSpatialAnchorFromDescriptor_0() const { return ___CreateSpatialAnchorFromDescriptor_0; }
	inline _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 ** get_address_of_CreateSpatialAnchorFromDescriptor_0() { return &___CreateSpatialAnchorFromDescriptor_0; }
	inline void set_CreateSpatialAnchorFromDescriptor_0(_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * value)
	{
		___CreateSpatialAnchorFromDescriptor_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CreateSpatialAnchorFromDescriptor_0), (void*)value);
	}

	inline static int32_t get_offset_of_CreateSpatialAnchorFromPose_1() { return static_cast<int32_t>(offsetof(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758, ___CreateSpatialAnchorFromPose_1)); }
	inline _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * get_CreateSpatialAnchorFromPose_1() const { return ___CreateSpatialAnchorFromPose_1; }
	inline _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 ** get_address_of_CreateSpatialAnchorFromPose_1() { return &___CreateSpatialAnchorFromPose_1; }
	inline void set_CreateSpatialAnchorFromPose_1(_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * value)
	{
		___CreateSpatialAnchorFromPose_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CreateSpatialAnchorFromPose_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetSpatialAnchorPose_2() { return static_cast<int32_t>(offsetof(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758, ___GetSpatialAnchorPose_2)); }
	inline _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF * get_GetSpatialAnchorPose_2() const { return ___GetSpatialAnchorPose_2; }
	inline _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF ** get_address_of_GetSpatialAnchorPose_2() { return &___GetSpatialAnchorPose_2; }
	inline void set_GetSpatialAnchorPose_2(_GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF * value)
	{
		___GetSpatialAnchorPose_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSpatialAnchorPose_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetSpatialAnchorDescriptor_3() { return static_cast<int32_t>(offsetof(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758, ___GetSpatialAnchorDescriptor_3)); }
	inline _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * get_GetSpatialAnchorDescriptor_3() const { return ___GetSpatialAnchorDescriptor_3; }
	inline _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 ** get_address_of_GetSpatialAnchorDescriptor_3() { return &___GetSpatialAnchorDescriptor_3; }
	inline void set_GetSpatialAnchorDescriptor_3(_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * value)
	{
		___GetSpatialAnchorDescriptor_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSpatialAnchorDescriptor_3), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRSpatialAnchors
struct IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_pinvoke
{
	Il2CppMethodPointer ___CreateSpatialAnchorFromDescriptor_0;
	Il2CppMethodPointer ___CreateSpatialAnchorFromPose_1;
	Il2CppMethodPointer ___GetSpatialAnchorPose_2;
	Il2CppMethodPointer ___GetSpatialAnchorDescriptor_3;
};
// Native definition for COM marshalling of Valve.VR.IVRSpatialAnchors
struct IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_com
{
	Il2CppMethodPointer ___CreateSpatialAnchorFromDescriptor_0;
	Il2CppMethodPointer ___CreateSpatialAnchorFromPose_1;
	Il2CppMethodPointer ___GetSpatialAnchorPose_2;
	Il2CppMethodPointer ___GetSpatialAnchorDescriptor_3;
};

// Valve.VR.IntersectionMaskCircle_t
struct  IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C 
{
public:
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterX
	float ___m_flCenterX_0;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterY
	float ___m_flCenterY_1;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flRadius
	float ___m_flRadius_2;

public:
	inline static int32_t get_offset_of_m_flCenterX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C, ___m_flCenterX_0)); }
	inline float get_m_flCenterX_0() const { return ___m_flCenterX_0; }
	inline float* get_address_of_m_flCenterX_0() { return &___m_flCenterX_0; }
	inline void set_m_flCenterX_0(float value)
	{
		___m_flCenterX_0 = value;
	}

	inline static int32_t get_offset_of_m_flCenterY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C, ___m_flCenterY_1)); }
	inline float get_m_flCenterY_1() const { return ___m_flCenterY_1; }
	inline float* get_address_of_m_flCenterY_1() { return &___m_flCenterY_1; }
	inline void set_m_flCenterY_1(float value)
	{
		___m_flCenterY_1 = value;
	}

	inline static int32_t get_offset_of_m_flRadius_2() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C, ___m_flRadius_2)); }
	inline float get_m_flRadius_2() const { return ___m_flRadius_2; }
	inline float* get_address_of_m_flRadius_2() { return &___m_flRadius_2; }
	inline void set_m_flRadius_2(float value)
	{
		___m_flRadius_2 = value;
	}
};


// Valve.VR.IntersectionMaskRectangle_t
struct  IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70 
{
public:
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftX
	float ___m_flTopLeftX_0;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftY
	float ___m_flTopLeftY_1;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flWidth
	float ___m_flWidth_2;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flHeight
	float ___m_flHeight_3;

public:
	inline static int32_t get_offset_of_m_flTopLeftX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70, ___m_flTopLeftX_0)); }
	inline float get_m_flTopLeftX_0() const { return ___m_flTopLeftX_0; }
	inline float* get_address_of_m_flTopLeftX_0() { return &___m_flTopLeftX_0; }
	inline void set_m_flTopLeftX_0(float value)
	{
		___m_flTopLeftX_0 = value;
	}

	inline static int32_t get_offset_of_m_flTopLeftY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70, ___m_flTopLeftY_1)); }
	inline float get_m_flTopLeftY_1() const { return ___m_flTopLeftY_1; }
	inline float* get_address_of_m_flTopLeftY_1() { return &___m_flTopLeftY_1; }
	inline void set_m_flTopLeftY_1(float value)
	{
		___m_flTopLeftY_1 = value;
	}

	inline static int32_t get_offset_of_m_flWidth_2() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70, ___m_flWidth_2)); }
	inline float get_m_flWidth_2() const { return ___m_flWidth_2; }
	inline float* get_address_of_m_flWidth_2() { return &___m_flWidth_2; }
	inline void set_m_flWidth_2(float value)
	{
		___m_flWidth_2 = value;
	}

	inline static int32_t get_offset_of_m_flHeight_3() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70, ___m_flHeight_3)); }
	inline float get_m_flHeight_3() const { return ___m_flHeight_3; }
	inline float* get_address_of_m_flHeight_3() { return &___m_flHeight_3; }
	inline void set_m_flHeight_3(float value)
	{
		___m_flHeight_3 = value;
	}
};


// Valve.VR.RenderModel_ControllerMode_State_t
struct  RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 
{
public:
	// System.Boolean Valve.VR.RenderModel_ControllerMode_State_t::bScrollWheelVisible
	bool ___bScrollWheelVisible_0;

public:
	inline static int32_t get_offset_of_bScrollWheelVisible_0() { return static_cast<int32_t>(offsetof(RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767, ___bScrollWheelVisible_0)); }
	inline bool get_bScrollWheelVisible_0() const { return ___bScrollWheelVisible_0; }
	inline bool* get_address_of_bScrollWheelVisible_0() { return &___bScrollWheelVisible_0; }
	inline void set_bScrollWheelVisible_0(bool value)
	{
		___bScrollWheelVisible_0 = value;
	}
};


// Valve.VR.VRControllerAxis_t
struct  VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 
{
public:
	// System.Single Valve.VR.VRControllerAxis_t::x
	float ___x_0;
	// System.Single Valve.VR.VRControllerAxis_t::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};


// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};


// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};


// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};


// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};


// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};


// Valve.VR.VREvent_InputActionManifestLoad_t
struct  VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathAppKey
	uint64_t ___pathAppKey_0;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathMessageParam
	uint64_t ___pathMessageParam_2;
	// System.UInt64 Valve.VR.VREvent_InputActionManifestLoad_t::pathManifestPath
	uint64_t ___pathManifestPath_3;

public:
	inline static int32_t get_offset_of_pathAppKey_0() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathAppKey_0)); }
	inline uint64_t get_pathAppKey_0() const { return ___pathAppKey_0; }
	inline uint64_t* get_address_of_pathAppKey_0() { return &___pathAppKey_0; }
	inline void set_pathAppKey_0(uint64_t value)
	{
		___pathAppKey_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathMessageParam_2() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathMessageParam_2)); }
	inline uint64_t get_pathMessageParam_2() const { return ___pathMessageParam_2; }
	inline uint64_t* get_address_of_pathMessageParam_2() { return &___pathMessageParam_2; }
	inline void set_pathMessageParam_2(uint64_t value)
	{
		___pathMessageParam_2 = value;
	}

	inline static int32_t get_offset_of_pathManifestPath_3() { return static_cast<int32_t>(offsetof(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76, ___pathManifestPath_3)); }
	inline uint64_t get_pathManifestPath_3() const { return ___pathManifestPath_3; }
	inline uint64_t* get_address_of_pathManifestPath_3() { return &___pathManifestPath_3; }
	inline void set_pathManifestPath_3(uint64_t value)
	{
		___pathManifestPath_3 = value;
	}
};


// Valve.VR.VREvent_InputBindingLoad_t
struct  VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED 
{
public:
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::ulAppContainer
	uint64_t ___ulAppContainer_0;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathMessage
	uint64_t ___pathMessage_1;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathUrl
	uint64_t ___pathUrl_2;
	// System.UInt64 Valve.VR.VREvent_InputBindingLoad_t::pathControllerType
	uint64_t ___pathControllerType_3;

public:
	inline static int32_t get_offset_of_ulAppContainer_0() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___ulAppContainer_0)); }
	inline uint64_t get_ulAppContainer_0() const { return ___ulAppContainer_0; }
	inline uint64_t* get_address_of_ulAppContainer_0() { return &___ulAppContainer_0; }
	inline void set_ulAppContainer_0(uint64_t value)
	{
		___ulAppContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathMessage_1() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathMessage_1)); }
	inline uint64_t get_pathMessage_1() const { return ___pathMessage_1; }
	inline uint64_t* get_address_of_pathMessage_1() { return &___pathMessage_1; }
	inline void set_pathMessage_1(uint64_t value)
	{
		___pathMessage_1 = value;
	}

	inline static int32_t get_offset_of_pathUrl_2() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathUrl_2)); }
	inline uint64_t get_pathUrl_2() const { return ___pathUrl_2; }
	inline uint64_t* get_address_of_pathUrl_2() { return &___pathUrl_2; }
	inline void set_pathUrl_2(uint64_t value)
	{
		___pathUrl_2 = value;
	}

	inline static int32_t get_offset_of_pathControllerType_3() { return static_cast<int32_t>(offsetof(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED, ___pathControllerType_3)); }
	inline uint64_t get_pathControllerType_3() const { return ___pathControllerType_3; }
	inline uint64_t* get_address_of_pathControllerType_3() { return &___pathControllerType_3; }
	inline void set_pathControllerType_3(uint64_t value)
	{
		___pathControllerType_3 = value;
	}
};


// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};


// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};


// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};


// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};


// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};


// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt64 Valve.VR.VREvent_Overlay_t::devicePath
	uint64_t ___devicePath_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_devicePath_1() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C, ___devicePath_1)); }
	inline uint64_t get_devicePath_1() const { return ___devicePath_1; }
	inline uint64_t* get_address_of_devicePath_1() { return &___devicePath_1; }
	inline void set_devicePath_1(uint64_t value)
	{
		___devicePath_1 = value;
	}
};


// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};


// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;
	// System.Boolean Valve.VR.VREvent_Process_t::bConnectionLost
	bool ___bConnectionLost_3;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}

	inline static int32_t get_offset_of_bConnectionLost_3() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E, ___bConnectionLost_3)); }
	inline bool get_bConnectionLost_3() const { return ___bConnectionLost_3; }
	inline bool* get_address_of_bConnectionLost_3() { return &___bConnectionLost_3; }
	inline void set_bConnectionLost_3(bool value)
	{
		___bConnectionLost_3 = value;
	}
};


// Valve.VR.VREvent_ProgressUpdate_t
struct  VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE 
{
public:
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::ulApplicationPropertyContainer
	uint64_t ___ulApplicationPropertyContainer_0;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathDevice
	uint64_t ___pathDevice_1;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathInputSource
	uint64_t ___pathInputSource_2;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathProgressAction
	uint64_t ___pathProgressAction_3;
	// System.UInt64 Valve.VR.VREvent_ProgressUpdate_t::pathIcon
	uint64_t ___pathIcon_4;
	// System.Single Valve.VR.VREvent_ProgressUpdate_t::fProgress
	float ___fProgress_5;

public:
	inline static int32_t get_offset_of_ulApplicationPropertyContainer_0() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___ulApplicationPropertyContainer_0)); }
	inline uint64_t get_ulApplicationPropertyContainer_0() const { return ___ulApplicationPropertyContainer_0; }
	inline uint64_t* get_address_of_ulApplicationPropertyContainer_0() { return &___ulApplicationPropertyContainer_0; }
	inline void set_ulApplicationPropertyContainer_0(uint64_t value)
	{
		___ulApplicationPropertyContainer_0 = value;
	}

	inline static int32_t get_offset_of_pathDevice_1() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathDevice_1)); }
	inline uint64_t get_pathDevice_1() const { return ___pathDevice_1; }
	inline uint64_t* get_address_of_pathDevice_1() { return &___pathDevice_1; }
	inline void set_pathDevice_1(uint64_t value)
	{
		___pathDevice_1 = value;
	}

	inline static int32_t get_offset_of_pathInputSource_2() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathInputSource_2)); }
	inline uint64_t get_pathInputSource_2() const { return ___pathInputSource_2; }
	inline uint64_t* get_address_of_pathInputSource_2() { return &___pathInputSource_2; }
	inline void set_pathInputSource_2(uint64_t value)
	{
		___pathInputSource_2 = value;
	}

	inline static int32_t get_offset_of_pathProgressAction_3() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathProgressAction_3)); }
	inline uint64_t get_pathProgressAction_3() const { return ___pathProgressAction_3; }
	inline uint64_t* get_address_of_pathProgressAction_3() { return &___pathProgressAction_3; }
	inline void set_pathProgressAction_3(uint64_t value)
	{
		___pathProgressAction_3 = value;
	}

	inline static int32_t get_offset_of_pathIcon_4() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___pathIcon_4)); }
	inline uint64_t get_pathIcon_4() const { return ___pathIcon_4; }
	inline uint64_t* get_address_of_pathIcon_4() { return &___pathIcon_4; }
	inline void set_pathIcon_4(uint64_t value)
	{
		___pathIcon_4 = value;
	}

	inline static int32_t get_offset_of_fProgress_5() { return static_cast<int32_t>(offsetof(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE, ___fProgress_5)); }
	inline float get_fProgress_5() const { return ___fProgress_5; }
	inline float* get_address_of_fProgress_5() { return &___fProgress_5; }
	inline void set_fProgress_5(float value)
	{
		___fProgress_5 = value;
	}
};


// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved2
	uint64_t ___reserved2_2;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved3
	uint64_t ___reserved3_3;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved4
	uint64_t ___reserved4_4;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved5
	uint64_t ___reserved5_5;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}

	inline static int32_t get_offset_of_reserved2_2() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved2_2)); }
	inline uint64_t get_reserved2_2() const { return ___reserved2_2; }
	inline uint64_t* get_address_of_reserved2_2() { return &___reserved2_2; }
	inline void set_reserved2_2(uint64_t value)
	{
		___reserved2_2 = value;
	}

	inline static int32_t get_offset_of_reserved3_3() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved3_3)); }
	inline uint64_t get_reserved3_3() const { return ___reserved3_3; }
	inline uint64_t* get_address_of_reserved3_3() { return &___reserved3_3; }
	inline void set_reserved3_3(uint64_t value)
	{
		___reserved3_3 = value;
	}

	inline static int32_t get_offset_of_reserved4_4() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved4_4)); }
	inline uint64_t get_reserved4_4() const { return ___reserved4_4; }
	inline uint64_t* get_address_of_reserved4_4() { return &___reserved4_4; }
	inline void set_reserved4_4(uint64_t value)
	{
		___reserved4_4 = value;
	}

	inline static int32_t get_offset_of_reserved5_5() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3, ___reserved5_5)); }
	inline uint64_t get_reserved5_5() const { return ___reserved5_5; }
	inline uint64_t* get_address_of_reserved5_5() { return &___reserved5_5; }
	inline void set_reserved5_5(uint64_t value)
	{
		___reserved5_5 = value;
	}
};


// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};


// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};


// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::unused
	uint32_t ___unused_2;
	// System.Single Valve.VR.VREvent_Scroll_t::viewportscale
	float ___viewportscale_3;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_unused_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___unused_2)); }
	inline uint32_t get_unused_2() const { return ___unused_2; }
	inline uint32_t* get_address_of_unused_2() { return &___unused_2; }
	inline void set_unused_2(uint32_t value)
	{
		___unused_2 = value;
	}

	inline static int32_t get_offset_of_viewportscale_3() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160, ___viewportscale_3)); }
	inline float get_viewportscale_3() const { return ___viewportscale_3; }
	inline float* get_address_of_viewportscale_3() { return &___viewportscale_3; }
	inline void set_viewportscale_3(float value)
	{
		___viewportscale_3 = value;
	}
};


// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};


// Valve.VR.VREvent_ShowDevTools_t
struct  VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 
{
public:
	// System.Int32 Valve.VR.VREvent_ShowDevTools_t::nBrowserIdentifier
	int32_t ___nBrowserIdentifier_0;

public:
	inline static int32_t get_offset_of_nBrowserIdentifier_0() { return static_cast<int32_t>(offsetof(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6, ___nBrowserIdentifier_0)); }
	inline int32_t get_nBrowserIdentifier_0() const { return ___nBrowserIdentifier_0; }
	inline int32_t* get_address_of_nBrowserIdentifier_0() { return &___nBrowserIdentifier_0; }
	inline void set_nBrowserIdentifier_0(int32_t value)
	{
		___nBrowserIdentifier_0 = value;
	}
};


// Valve.VR.VREvent_SpatialAnchor_t
struct  VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 
{
public:
	// System.UInt32 Valve.VR.VREvent_SpatialAnchor_t::unHandle
	uint32_t ___unHandle_0;

public:
	inline static int32_t get_offset_of_unHandle_0() { return static_cast<int32_t>(offsetof(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473, ___unHandle_0)); }
	inline uint32_t get_unHandle_0() const { return ___unHandle_0; }
	inline uint32_t* get_address_of_unHandle_0() { return &___unHandle_0; }
	inline void set_unHandle_0(uint32_t value)
	{
		___unHandle_0 = value;
	}
};


// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};


// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};


// Valve.VR.VREvent_WebConsole_t
struct  VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 
{
public:
	// System.UInt64 Valve.VR.VREvent_WebConsole_t::webConsoleHandle
	uint64_t ___webConsoleHandle_0;

public:
	inline static int32_t get_offset_of_webConsoleHandle_0() { return static_cast<int32_t>(offsetof(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75, ___webConsoleHandle_0)); }
	inline uint64_t get_webConsoleHandle_0() const { return ___webConsoleHandle_0; }
	inline uint64_t* get_address_of_webConsoleHandle_0() { return &___webConsoleHandle_0; }
	inline void set_webConsoleHandle_0(uint64_t value)
	{
		___webConsoleHandle_0 = value;
	}
};


// Valve.VR.VRTextureBounds_t
struct  VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 
{
public:
	// System.Single Valve.VR.VRTextureBounds_t::uMin
	float ___uMin_0;
	// System.Single Valve.VR.VRTextureBounds_t::vMin
	float ___vMin_1;
	// System.Single Valve.VR.VRTextureBounds_t::uMax
	float ___uMax_2;
	// System.Single Valve.VR.VRTextureBounds_t::vMax
	float ___vMax_3;

public:
	inline static int32_t get_offset_of_uMin_0() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779, ___uMin_0)); }
	inline float get_uMin_0() const { return ___uMin_0; }
	inline float* get_address_of_uMin_0() { return &___uMin_0; }
	inline void set_uMin_0(float value)
	{
		___uMin_0 = value;
	}

	inline static int32_t get_offset_of_vMin_1() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779, ___vMin_1)); }
	inline float get_vMin_1() const { return ___vMin_1; }
	inline float* get_address_of_vMin_1() { return &___vMin_1; }
	inline void set_vMin_1(float value)
	{
		___vMin_1 = value;
	}

	inline static int32_t get_offset_of_uMax_2() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779, ___uMax_2)); }
	inline float get_uMax_2() const { return ___uMax_2; }
	inline float* get_address_of_uMax_2() { return &___uMax_2; }
	inline void set_uMax_2(float value)
	{
		___uMax_2 = value;
	}

	inline static int32_t get_offset_of_vMax_3() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779, ___vMax_3)); }
	inline float get_vMax_3() const { return ___vMax_3; }
	inline float* get_address_of_vMax_3() { return &___vMax_3; }
	inline void set_vMax_3(float value)
	{
		___vMax_3 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// Valve.VR.EColorSpace
struct  EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448 
{
public:
	// System.Int32 Valve.VR.EColorSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EDualAnalogWhich
struct  EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8 
{
public:
	// System.Int32 Valve.VR.EDualAnalogWhich::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EHDCPError
struct  EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F 
{
public:
	// System.Int32 Valve.VR.EHDCPError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EHDCPError_tEA1A3B61ABC539BEB5968E78D67A977D9B8FFC8F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EShowUIType
struct  EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF 
{
public:
	// System.Int32 Valve.VR.EShowUIType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EShowUIType_tBD146F5D1D019E27B82F6FCAE6A9EE94568DE7CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETextureType
struct  ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400 
{
public:
	// System.Int32 Valve.VR.ETextureType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_tF72385D21B16A4502DC9E4F05A6C3F3D63202678, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVROverlayError
struct  EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99 
{
public:
	// System.Int32 Valve.VR.EVROverlayError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVROverlayIntersectionMaskPrimitiveType
struct  EVROverlayIntersectionMaskPrimitiveType_tEB169262F06891BF4EFE7623DEB3D919787E96F2 
{
public:
	// System.Int32 Valve.VR.EVROverlayIntersectionMaskPrimitiveType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayIntersectionMaskPrimitiveType_tEB169262F06891BF4EFE7623DEB3D919787E96F2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRRenderModelError
struct  EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626 
{
public:
	// System.Int32 Valve.VR.EVRRenderModelError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRScreenshotError
struct  EVRScreenshotError_t6B97B51D59EE40AE0F8B28ACB608825D2058B86B 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotError_t6B97B51D59EE40AE0F8B28ACB608825D2058B86B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRScreenshotPropertyFilenames
struct  EVRScreenshotPropertyFilenames_t7FF4C5017769DFF38DD212F4BB9207C172FC0914 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotPropertyFilenames::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotPropertyFilenames_t7FF4C5017769DFF38DD212F4BB9207C172FC0914, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRScreenshotType
struct  EVRScreenshotType_tDF3B2AADEE288D51AE786D7D96E1304A84AE78A9 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotType_tDF3B2AADEE288D51AE786D7D96E1304A84AE78A9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSettingsError
struct  EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B 
{
public:
	// System.Int32 Valve.VR.EVRSettingsError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSpatialAnchorError
struct  EVRSpatialAnchorError_t67ABFA7703B2B3065609F13ECF2820BB727A7DE4 
{
public:
	// System.Int32 Valve.VR.EVRSpatialAnchorError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSpatialAnchorError_t67ABFA7703B2B3065609F13ECF2820BB727A7DE4, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.HmdRect2_t
struct  HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 
{
public:
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vTopLeft
	HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___vTopLeft_0;
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vBottomRight
	HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___vBottomRight_1;

public:
	inline static int32_t get_offset_of_vTopLeft_0() { return static_cast<int32_t>(offsetof(HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68, ___vTopLeft_0)); }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  get_vTopLeft_0() const { return ___vTopLeft_0; }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * get_address_of_vTopLeft_0() { return &___vTopLeft_0; }
	inline void set_vTopLeft_0(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  value)
	{
		___vTopLeft_0 = value;
	}

	inline static int32_t get_offset_of_vBottomRight_1() { return static_cast<int32_t>(offsetof(HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68, ___vBottomRight_1)); }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  get_vBottomRight_1() const { return ___vBottomRight_1; }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * get_address_of_vBottomRight_1() { return &___vBottomRight_1; }
	inline void set_vBottomRight_1(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  value)
	{
		___vBottomRight_1 = value;
	}
};


// Valve.VR.RenderModel_ComponentState_t
struct  RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.RenderModel_ComponentState_t::mTrackingToComponentRenderModel
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mTrackingToComponentRenderModel_0;
	// Valve.VR.HmdMatrix34_t Valve.VR.RenderModel_ComponentState_t::mTrackingToComponentLocal
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mTrackingToComponentLocal_1;
	// System.UInt32 Valve.VR.RenderModel_ComponentState_t::uProperties
	uint32_t ___uProperties_2;

public:
	inline static int32_t get_offset_of_mTrackingToComponentRenderModel_0() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F, ___mTrackingToComponentRenderModel_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mTrackingToComponentRenderModel_0() const { return ___mTrackingToComponentRenderModel_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mTrackingToComponentRenderModel_0() { return &___mTrackingToComponentRenderModel_0; }
	inline void set_mTrackingToComponentRenderModel_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mTrackingToComponentRenderModel_0 = value;
	}

	inline static int32_t get_offset_of_mTrackingToComponentLocal_1() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F, ___mTrackingToComponentLocal_1)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mTrackingToComponentLocal_1() const { return ___mTrackingToComponentLocal_1; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mTrackingToComponentLocal_1() { return &___mTrackingToComponentLocal_1; }
	inline void set_mTrackingToComponentLocal_1(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mTrackingToComponentLocal_1 = value;
	}

	inline static int32_t get_offset_of_uProperties_2() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F, ___uProperties_2)); }
	inline uint32_t get_uProperties_2() const { return ___uProperties_2; }
	inline uint32_t* get_address_of_uProperties_2() { return &___uProperties_2; }
	inline void set_uProperties_2(uint32_t value)
	{
		___uProperties_2 = value;
	}
};


// Valve.VR.SpatialAnchorPose_t
struct  SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.SpatialAnchorPose_t::mAnchorToAbsoluteTracking
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mAnchorToAbsoluteTracking_0;

public:
	inline static int32_t get_offset_of_mAnchorToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234, ___mAnchorToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mAnchorToAbsoluteTracking_0() const { return ___mAnchorToAbsoluteTracking_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mAnchorToAbsoluteTracking_0() { return &___mAnchorToAbsoluteTracking_0; }
	inline void set_mAnchorToAbsoluteTracking_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mAnchorToAbsoluteTracking_0 = value;
	}
};


// Valve.VR.VRControllerState_t
struct  VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 
{
public:
	// System.UInt32 Valve.VR.VRControllerState_t::unPacketNum
	uint32_t ___unPacketNum_0;
	// System.UInt64 Valve.VR.VRControllerState_t::ulButtonPressed
	uint64_t ___ulButtonPressed_1;
	// System.UInt64 Valve.VR.VRControllerState_t::ulButtonTouched
	uint64_t ___ulButtonTouched_2;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis0
	VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  ___rAxis0_3;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis1
	VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  ___rAxis1_4;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis2
	VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  ___rAxis2_5;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis3
	VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  ___rAxis3_6;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis4
	VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  ___rAxis4_7;

public:
	inline static int32_t get_offset_of_unPacketNum_0() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___unPacketNum_0)); }
	inline uint32_t get_unPacketNum_0() const { return ___unPacketNum_0; }
	inline uint32_t* get_address_of_unPacketNum_0() { return &___unPacketNum_0; }
	inline void set_unPacketNum_0(uint32_t value)
	{
		___unPacketNum_0 = value;
	}

	inline static int32_t get_offset_of_ulButtonPressed_1() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___ulButtonPressed_1)); }
	inline uint64_t get_ulButtonPressed_1() const { return ___ulButtonPressed_1; }
	inline uint64_t* get_address_of_ulButtonPressed_1() { return &___ulButtonPressed_1; }
	inline void set_ulButtonPressed_1(uint64_t value)
	{
		___ulButtonPressed_1 = value;
	}

	inline static int32_t get_offset_of_ulButtonTouched_2() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___ulButtonTouched_2)); }
	inline uint64_t get_ulButtonTouched_2() const { return ___ulButtonTouched_2; }
	inline uint64_t* get_address_of_ulButtonTouched_2() { return &___ulButtonTouched_2; }
	inline void set_ulButtonTouched_2(uint64_t value)
	{
		___ulButtonTouched_2 = value;
	}

	inline static int32_t get_offset_of_rAxis0_3() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___rAxis0_3)); }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  get_rAxis0_3() const { return ___rAxis0_3; }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 * get_address_of_rAxis0_3() { return &___rAxis0_3; }
	inline void set_rAxis0_3(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  value)
	{
		___rAxis0_3 = value;
	}

	inline static int32_t get_offset_of_rAxis1_4() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___rAxis1_4)); }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  get_rAxis1_4() const { return ___rAxis1_4; }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 * get_address_of_rAxis1_4() { return &___rAxis1_4; }
	inline void set_rAxis1_4(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  value)
	{
		___rAxis1_4 = value;
	}

	inline static int32_t get_offset_of_rAxis2_5() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___rAxis2_5)); }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  get_rAxis2_5() const { return ___rAxis2_5; }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 * get_address_of_rAxis2_5() { return &___rAxis2_5; }
	inline void set_rAxis2_5(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  value)
	{
		___rAxis2_5 = value;
	}

	inline static int32_t get_offset_of_rAxis3_6() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___rAxis3_6)); }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  get_rAxis3_6() const { return ___rAxis3_6; }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 * get_address_of_rAxis3_6() { return &___rAxis3_6; }
	inline void set_rAxis3_6(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  value)
	{
		___rAxis3_6 = value;
	}

	inline static int32_t get_offset_of_rAxis4_7() { return static_cast<int32_t>(offsetof(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1, ___rAxis4_7)); }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  get_rAxis4_7() const { return ___rAxis4_7; }
	inline VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754 * get_address_of_rAxis4_7() { return &___rAxis4_7; }
	inline void set_rAxis4_7(VRControllerAxis_t_tEC29DC46A785B800F96BA3CC48A6174E760CD754  value)
	{
		___rAxis4_7 = value;
	}
};


// Valve.VR.VRMessageOverlayResponse
struct  VRMessageOverlayResponse_tE5BDB0F8A3B21046F825EA0F319D459769B01BF9 
{
public:
	// System.Int32 Valve.VR.VRMessageOverlayResponse::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VRMessageOverlayResponse_tE5BDB0F8A3B21046F825EA0F319D459769B01BF9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VROverlayFlags
struct  VROverlayFlags_t9EA64894D2A21A9D6080E775FC9BD0E860416CB7 
{
public:
	// System.Int32 Valve.VR.VROverlayFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayFlags_t9EA64894D2A21A9D6080E775FC9BD0E860416CB7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VROverlayInputMethod
struct  VROverlayInputMethod_t750A341CAE8A5373D778C2EBC4829646233A3659 
{
public:
	// System.Int32 Valve.VR.VROverlayInputMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayInputMethod_t750A341CAE8A5373D778C2EBC4829646233A3659, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t
struct  VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskRectangle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Rectangle
			IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70  ___m_Rectangle_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70  ___m_Rectangle_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskCircle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Circle
			IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C  ___m_Circle_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C  ___m_Circle_1_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_m_Rectangle_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92, ___m_Rectangle_0)); }
	inline IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70  get_m_Rectangle_0() const { return ___m_Rectangle_0; }
	inline IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70 * get_address_of_m_Rectangle_0() { return &___m_Rectangle_0; }
	inline void set_m_Rectangle_0(IntersectionMaskRectangle_t_t061B13DC8845034E6ABBF8A96A9279E1592B4D70  value)
	{
		___m_Rectangle_0 = value;
	}

	inline static int32_t get_offset_of_m_Circle_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92, ___m_Circle_1)); }
	inline IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C  get_m_Circle_1() const { return ___m_Circle_1; }
	inline IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C * get_address_of_m_Circle_1() { return &___m_Circle_1; }
	inline void set_m_Circle_1(IntersectionMaskCircle_t_t39C0B84DECD8CF5AEE9A12CD20BE2D88E57ABA2C  value)
	{
		___m_Circle_1 = value;
	}
};


// Valve.VR.VROverlayIntersectionResults_t
struct  VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F 
{
public:
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionResults_t::vPoint
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vPoint_0;
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionResults_t::vNormal
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vNormal_1;
	// Valve.VR.HmdVector2_t Valve.VR.VROverlayIntersectionResults_t::vUVs
	HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___vUVs_2;
	// System.Single Valve.VR.VROverlayIntersectionResults_t::fDistance
	float ___fDistance_3;

public:
	inline static int32_t get_offset_of_vPoint_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F, ___vPoint_0)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vPoint_0() const { return ___vPoint_0; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vPoint_0() { return &___vPoint_0; }
	inline void set_vPoint_0(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vPoint_0 = value;
	}

	inline static int32_t get_offset_of_vNormal_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F, ___vNormal_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vNormal_1() const { return ___vNormal_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vNormal_1() { return &___vNormal_1; }
	inline void set_vNormal_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vNormal_1 = value;
	}

	inline static int32_t get_offset_of_vUVs_2() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F, ___vUVs_2)); }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  get_vUVs_2() const { return ___vUVs_2; }
	inline HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * get_address_of_vUVs_2() { return &___vUVs_2; }
	inline void set_vUVs_2(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  value)
	{
		___vUVs_2 = value;
	}

	inline static int32_t get_offset_of_fDistance_3() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F, ___fDistance_3)); }
	inline float get_fDistance_3() const { return ___fDistance_3; }
	inline float* get_address_of_fDistance_3() { return &___fDistance_3; }
	inline void set_fDistance_3(float value)
	{
		___fDistance_3 = value;
	}
};


// Valve.VR.VROverlayTransformType
struct  VROverlayTransformType_t0D09E5D670CD6E250A5E89B47D0F6F4B38BDC6F7 
{
public:
	// System.Int32 Valve.VR.VROverlayTransformType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayTransformType_t0D09E5D670CD6E250A5E89B47D0F6F4B38BDC6F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// Valve.VR.Texture_t
struct  Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 
{
public:
	// System.IntPtr Valve.VR.Texture_t::handle
	intptr_t ___handle_0;
	// Valve.VR.ETextureType Valve.VR.Texture_t::eType
	int32_t ___eType_1;
	// Valve.VR.EColorSpace Valve.VR.Texture_t::eColorSpace
	int32_t ___eColorSpace_2;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_eType_1() { return static_cast<int32_t>(offsetof(Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6, ___eType_1)); }
	inline int32_t get_eType_1() const { return ___eType_1; }
	inline int32_t* get_address_of_eType_1() { return &___eType_1; }
	inline void set_eType_1(int32_t value)
	{
		___eType_1 = value;
	}

	inline static int32_t get_offset_of_eColorSpace_2() { return static_cast<int32_t>(offsetof(Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6, ___eColorSpace_2)); }
	inline int32_t get_eColorSpace_2() const { return ___eColorSpace_2; }
	inline int32_t* get_address_of_eColorSpace_2() { return &___eColorSpace_2; }
	inline void set_eColorSpace_2(int32_t value)
	{
		___eColorSpace_2 = value;
	}
};


// Valve.VR.VREvent_DualAnalog_t
struct  VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 
{
public:
	// System.Single Valve.VR.VREvent_DualAnalog_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_DualAnalog_t::y
	float ___y_1;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedX
	float ___transformedX_2;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedY
	float ___transformedY_3;
	// Valve.VR.EDualAnalogWhich Valve.VR.VREvent_DualAnalog_t::which
	int32_t ___which_4;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_transformedX_2() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedX_2)); }
	inline float get_transformedX_2() const { return ___transformedX_2; }
	inline float* get_address_of_transformedX_2() { return &___transformedX_2; }
	inline void set_transformedX_2(float value)
	{
		___transformedX_2 = value;
	}

	inline static int32_t get_offset_of_transformedY_3() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___transformedY_3)); }
	inline float get_transformedY_3() const { return ___transformedY_3; }
	inline float* get_address_of_transformedY_3() { return &___transformedY_3; }
	inline void set_transformedY_3(float value)
	{
		___transformedY_3 = value;
	}

	inline static int32_t get_offset_of_which_4() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137, ___which_4)); }
	inline int32_t get_which_4() const { return ___which_4; }
	inline int32_t* get_address_of_which_4() { return &___which_4; }
	inline void set_which_4(int32_t value)
	{
		___which_4 = value;
	}
};


// Valve.VR.VREvent_HDCPError_t
struct  VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E 
{
public:
	// Valve.VR.EHDCPError Valve.VR.VREvent_HDCPError_t::eCode
	int32_t ___eCode_0;

public:
	inline static int32_t get_offset_of_eCode_0() { return static_cast<int32_t>(offsetof(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E, ___eCode_0)); }
	inline int32_t get_eCode_0() const { return ___eCode_0; }
	inline int32_t* get_address_of_eCode_0() { return &___eCode_0; }
	inline void set_eCode_0(int32_t value)
	{
		___eCode_0 = value;
	}
};


// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};


// Valve.VR.VREvent_ShowUI_t
struct  VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 
{
public:
	// Valve.VR.EShowUIType Valve.VR.VREvent_ShowUI_t::eType
	int32_t ___eType_0;

public:
	inline static int32_t get_offset_of_eType_0() { return static_cast<int32_t>(offsetof(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997, ___eType_0)); }
	inline int32_t get_eType_0() const { return ___eType_0; }
	inline int32_t* get_address_of_eType_0() { return &___eType_0; }
	inline void set_eType_0(int32_t value)
	{
		___eType_0 = value;
	}
};


// Valve.VR.VROverlayIntersectionMaskPrimitive_t
struct  VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 
{
public:
	// Valve.VR.EVROverlayIntersectionMaskPrimitiveType Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_nPrimitiveType
	int32_t ___m_nPrimitiveType_0;
	// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_Primitive
	VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92  ___m_Primitive_1;

public:
	inline static int32_t get_offset_of_m_nPrimitiveType_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6, ___m_nPrimitiveType_0)); }
	inline int32_t get_m_nPrimitiveType_0() const { return ___m_nPrimitiveType_0; }
	inline int32_t* get_address_of_m_nPrimitiveType_0() { return &___m_nPrimitiveType_0; }
	inline void set_m_nPrimitiveType_0(int32_t value)
	{
		___m_nPrimitiveType_0 = value;
	}

	inline static int32_t get_offset_of_m_Primitive_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6, ___m_Primitive_1)); }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92  get_m_Primitive_1() const { return ___m_Primitive_1; }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92 * get_address_of_m_Primitive_1() { return &___m_Primitive_1; }
	inline void set_m_Primitive_1(VROverlayIntersectionMaskPrimitive_Data_t_tC4046F3F031B12DD5A6A6DBEF36FCFBA73106D92  value)
	{
		___m_Primitive_1 = value;
	}
};


// Valve.VR.VROverlayIntersectionParams_t
struct  VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C 
{
public:
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionParams_t::vSource
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vSource_0;
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionParams_t::vDirection
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vDirection_1;
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.VROverlayIntersectionParams_t::eOrigin
	int32_t ___eOrigin_2;

public:
	inline static int32_t get_offset_of_vSource_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C, ___vSource_0)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vSource_0() const { return ___vSource_0; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vSource_0() { return &___vSource_0; }
	inline void set_vSource_0(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vSource_0 = value;
	}

	inline static int32_t get_offset_of_vDirection_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C, ___vDirection_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vDirection_1() const { return ___vDirection_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vDirection_1() { return &___vDirection_1; }
	inline void set_vDirection_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vDirection_1 = value;
	}

	inline static int32_t get_offset_of_eOrigin_2() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C, ___eOrigin_2)); }
	inline int32_t get_eOrigin_2() const { return ___eOrigin_2; }
	inline int32_t* get_address_of_eOrigin_2() { return &___eOrigin_2; }
	inline void set_eOrigin_2(int32_t value)
	{
		___eOrigin_2 = value;
	}
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ClearOverlayTexture
struct  _ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__CloseMessageOverlay
struct  _CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ComputeOverlayIntersection
struct  _ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__CreateDashboardOverlay
struct  _CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__CreateOverlay
struct  _CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__DestroyOverlay
struct  _DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__FindOverlay
struct  _FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess
struct  _GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetKeyboardText
struct  _GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayAlpha
struct  _GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayColor
struct  _GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayCurvature
struct  _GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayDualAnalogTransform
struct  _GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum
struct  _GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayFlag
struct  _GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayFlags
struct  _GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayImageData
struct  _GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayInputMethod
struct  _GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayKey
struct  _GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayMouseScale
struct  _GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayName
struct  _GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayRenderModel
struct  _GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayRenderingPid
struct  _GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlaySortOrder
struct  _GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTexelAspect
struct  _GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTexture
struct  _GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTextureBounds
struct  _GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTextureColorSpace
struct  _GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTextureSize
struct  _GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTransformAbsolute
struct  _GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative
struct  _GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent
struct  _GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative
struct  _GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayTransformType
struct  _GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetOverlayWidthInMeters
struct  _GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetPrimaryDashboardDevice
struct  _GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__GetTransformForOverlayCoordinates
struct  _GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__HideKeyboard
struct  _HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__HideOverlay
struct  _HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__IsActiveDashboardOverlay
struct  _IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__IsDashboardVisible
struct  _IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__IsHoverTargetOverlay
struct  _IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__IsOverlayVisible
struct  _IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ReleaseNativeOverlayHandle
struct  _ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess
struct  _SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetKeyboardPositionForOverlay
struct  _SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetKeyboardTransformAbsolute
struct  _SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayAlpha
struct  _SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayColor
struct  _SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayCurvature
struct  _SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayDualAnalogTransform
struct  _SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayFlag
struct  _SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayFromFile
struct  _SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayInputMethod
struct  _SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayIntersectionMask
struct  _SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayMouseScale
struct  _SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayName
struct  _SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayRaw
struct  _SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayRenderModel
struct  _SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayRenderingPid
struct  _SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlaySortOrder
struct  _SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTexelAspect
struct  _SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTexture
struct  _SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTextureBounds
struct  _SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTextureColorSpace
struct  _SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTransformAbsolute
struct  _SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative
struct  _SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent
struct  _SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative
struct  _SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__SetOverlayWidthInMeters
struct  _SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ShowDashboard
struct  _ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ShowKeyboard
struct  _ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ShowKeyboardForOverlay
struct  _ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ShowMessageOverlay
struct  _ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVROverlay__ShowOverlay
struct  _ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__FreeRenderModel
struct  _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__FreeTexture
struct  _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__FreeTextureD3D11
struct  _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentButtonMask
struct  _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentCount
struct  _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentName
struct  _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentRenderModelName
struct  _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentState
struct  _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetComponentStateForDevicePath
struct  _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetRenderModelCount
struct  _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum
struct  _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetRenderModelName
struct  _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetRenderModelOriginalPath
struct  _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL
struct  _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async
struct  _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__LoadRenderModel_Async
struct  _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__LoadTextureD3D11_Async
struct  _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__LoadTexture_Async
struct  _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRRenderModels__RenderModelHasComponent
struct  _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRResources__GetResourceFullPath
struct  _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRResources__LoadSharedResource
struct  _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename
struct  _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__GetScreenshotPropertyType
struct  _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__HookScreenshot
struct  _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__RequestScreenshot
struct  _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__SubmitScreenshot
struct  _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__TakeStereoScreenshot
struct  _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRScreenshots__UpdateScreenshotProgress
struct  _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__GetBool
struct  _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__GetFloat
struct  _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__GetInt32
struct  _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum
struct  _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__GetString
struct  _GetString_t0C69AFED057772F90E19D351974F9DA664771905  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__RemoveKeyInSection
struct  _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__RemoveSection
struct  _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__SetBool
struct  _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__SetFloat
struct  _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__SetInt32
struct  _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__SetString
struct  _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSettings__Sync
struct  _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor
struct  _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose
struct  _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor
struct  _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.IVRSpatialAnchors__GetSpatialAnchorPose
struct  _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_DualAnalog_t Valve.VR.VREvent_Data_t::dualAnalog
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  ___dualAnalog_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  ___hapticVibration_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_WebConsole_t Valve.VR.VREvent_Data_t::webConsole
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  ___webConsole_21_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputBindingLoad_t Valve.VR.VREvent_Data_t::inputBinding
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  ___inputBinding_22_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SpatialAnchor_t Valve.VR.VREvent_Data_t::spatialAnchor
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  ___spatialAnchor_23_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_InputActionManifestLoad_t Valve.VR.VREvent_Data_t::actionManifest
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  ___actionManifest_24_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ProgressUpdate_t Valve.VR.VREvent_Data_t::progressUpdate
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  ___progressUpdate_25_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowUI_t Valve.VR.VREvent_Data_t::showUi
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  ___showUi_26_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ShowDevTools_t Valve.VR.VREvent_Data_t::showDevTools
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  ___showDevTools_27_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HDCPError_t Valve.VR.VREvent_Data_t::hdcpError
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  ___hdcpError_28_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  ___keyboard_29_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___reserved_0)); }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3 * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_tD7AEEC778A329391A4DB25E9EACFC350464E7AB3  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___controller_1)); }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_t5976E21986D7CBB3313289F60169F60680DF5D05  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___mouse_2)); }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_t6A0AB81EE408C60C23B2347B2D54DF92EB389B1B  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___scroll_3)); }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t5F4F013D4311FA0416A98AAE7B1C67794857D160  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___process_4)); }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t83E4C3D9CAE8D898B914245BF7E34E2FD47EBE1E  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___notification_5)); }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_t3307E55FBD25A98BF78C740FE9494406A45F94BB  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___overlay_6)); }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t6D2D8442E708459C57882EA5E5D6EE0912FAD76C  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___status_7)); }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t157A58D59F35CB5B07E1A83BA7E41C425AB766FB  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___ipd_8)); }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tA834CF90F72C0F1C4905DCCCA0D7AF0A3043B400  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___chaperone_9)); }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85 * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_tCFAB4B0381A4EF5741D86EF3A75514337B44EA85  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t7907E419EE035B684299AF08075DE02A6D9AA7AA  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t239FBA15A2154F0A535575CDF1CF22A8F3EDEA3D  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t4FE5B07657B5DD9A609F7A755C4592806767D323  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshot_13)); }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_t1459B9F3FCD91BFF2A03D1F0DBC012594714BE97  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t9CD059D8FF2215EBC3F9014DE35F8847B904ECED  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t19D5E8E56A4A34EBA9497F8560DDBC045BC22389  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t001B622D6CDFD7226DB4337AEE63DB317E6420FC  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1 * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_t527A27CE8C9CDC089759AEF6257E7F5803D72BA1  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___property_18)); }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5 * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_tDA1B42C6B679945C10CE6A3E37ECAE1D03E586F5  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_dualAnalog_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___dualAnalog_19)); }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  get_dualAnalog_19() const { return ___dualAnalog_19; }
	inline VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137 * get_address_of_dualAnalog_19() { return &___dualAnalog_19; }
	inline void set_dualAnalog_19(VREvent_DualAnalog_t_tC3619C1896674578643AE38536F4DA3B79B49137  value)
	{
		___dualAnalog_19 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hapticVibration_20)); }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  get_hapticVibration_20() const { return ___hapticVibration_20; }
	inline VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F * get_address_of_hapticVibration_20() { return &___hapticVibration_20; }
	inline void set_hapticVibration_20(VREvent_HapticVibration_t_tC31D4D068A151263ADCB11D4C8349D5774AC246F  value)
	{
		___hapticVibration_20 = value;
	}

	inline static int32_t get_offset_of_webConsole_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___webConsole_21)); }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  get_webConsole_21() const { return ___webConsole_21; }
	inline VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75 * get_address_of_webConsole_21() { return &___webConsole_21; }
	inline void set_webConsole_21(VREvent_WebConsole_t_tB082ED62757425E442A9D3D77878DE178AE3DC75  value)
	{
		___webConsole_21 = value;
	}

	inline static int32_t get_offset_of_inputBinding_22() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___inputBinding_22)); }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  get_inputBinding_22() const { return ___inputBinding_22; }
	inline VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED * get_address_of_inputBinding_22() { return &___inputBinding_22; }
	inline void set_inputBinding_22(VREvent_InputBindingLoad_t_tC758CE9776D2810CD958CB23032BE745D51E1EED  value)
	{
		___inputBinding_22 = value;
	}

	inline static int32_t get_offset_of_spatialAnchor_23() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___spatialAnchor_23)); }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  get_spatialAnchor_23() const { return ___spatialAnchor_23; }
	inline VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473 * get_address_of_spatialAnchor_23() { return &___spatialAnchor_23; }
	inline void set_spatialAnchor_23(VREvent_SpatialAnchor_t_tEF1C8EF84EEA707BC3393810ECAF468F3B3B9473  value)
	{
		___spatialAnchor_23 = value;
	}

	inline static int32_t get_offset_of_actionManifest_24() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___actionManifest_24)); }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  get_actionManifest_24() const { return ___actionManifest_24; }
	inline VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76 * get_address_of_actionManifest_24() { return &___actionManifest_24; }
	inline void set_actionManifest_24(VREvent_InputActionManifestLoad_t_t80FAEB7CDAA5F4A1992C9701923F26D79C3E3A76  value)
	{
		___actionManifest_24 = value;
	}

	inline static int32_t get_offset_of_progressUpdate_25() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___progressUpdate_25)); }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  get_progressUpdate_25() const { return ___progressUpdate_25; }
	inline VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE * get_address_of_progressUpdate_25() { return &___progressUpdate_25; }
	inline void set_progressUpdate_25(VREvent_ProgressUpdate_t_tE2EE0FDAEB40796B73B8477434588652690495AE  value)
	{
		___progressUpdate_25 = value;
	}

	inline static int32_t get_offset_of_showUi_26() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showUi_26)); }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  get_showUi_26() const { return ___showUi_26; }
	inline VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997 * get_address_of_showUi_26() { return &___showUi_26; }
	inline void set_showUi_26(VREvent_ShowUI_t_tE3EDB9F7A3BCAC0C9A3812B850DA4F4A45933997  value)
	{
		___showUi_26 = value;
	}

	inline static int32_t get_offset_of_showDevTools_27() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___showDevTools_27)); }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  get_showDevTools_27() const { return ___showDevTools_27; }
	inline VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6 * get_address_of_showDevTools_27() { return &___showDevTools_27; }
	inline void set_showDevTools_27(VREvent_ShowDevTools_t_t39141238FE64295EF3CBCCF82984ACB8C97FABE6  value)
	{
		___showDevTools_27 = value;
	}

	inline static int32_t get_offset_of_hdcpError_28() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___hdcpError_28)); }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  get_hdcpError_28() const { return ___hdcpError_28; }
	inline VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E * get_address_of_hdcpError_28() { return &___hdcpError_28; }
	inline void set_hdcpError_28(VREvent_HDCPError_t_tB01E1AF666EA64FA9D948BC11978D08B58C7201E  value)
	{
		___hdcpError_28 = value;
	}

	inline static int32_t get_offset_of_keyboard_29() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0, ___keyboard_29)); }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  get_keyboard_29() const { return ___keyboard_29; }
	inline VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297 * get_address_of_keyboard_29() { return &___keyboard_29; }
	inline void set_keyboard_29(VREvent_Keyboard_t_t0FAA9B97A441A22EC65002BC6FDEB4AF7A045297  value)
	{
		___keyboard_29 = value;
	}
};


// Valve.VR.VREvent_t
struct  VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C, ___data_3)); }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0 * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t38985E196F3FFB84A2EC25F5F5300A1A465435F0  value)
	{
		___data_3 = value;
	}
};


// Valve.VR.IVROverlay__PollNextOverlayEvent
struct  _PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};



#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 (_ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ClearOverlayTexture::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ClearOverlayTexture__ctor_mE270A83F425C513D03F0C4480301ED0971332550 (_ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ClearOverlayTexture::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ClearOverlayTexture_Invoke_m3A68D820F816281891C0CCADFA98EEBA6D9314C7 (_ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ClearOverlayTexture::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ClearOverlayTexture_BeginInvoke_mEB336BBBAD11225FB97F17E0CFF14E8A01172DD6 (_ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ClearOverlayTexture_BeginInvoke_mEB336BBBAD11225FB97F17E0CFF14E8A01172DD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ClearOverlayTexture::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ClearOverlayTexture_EndInvoke_mB3B816D1DA25A42C5ACE38310B82423DF858330B (_ClearOverlayTexture_tE5E26512D80C61AEFE9B005D37521B6F1A3F85D0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 (_CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CloseMessageOverlay__ctor_mAE2777A7472D36EC464E0B1EF7513D61B0C45540 (_CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CloseMessageOverlay_Invoke_mAB2DF3E14BD9512FC44D2989291E61DB8B6852F6 (_CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__CloseMessageOverlay::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _CloseMessageOverlay_BeginInvoke_mA114F5040FDDA3871940FEA5FFEA807AFFCC23BB (_CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CloseMessageOverlay_EndInvoke_m1CF8EC1D6AA790DD3EC71A336BD42C15A09BC00F (_CloseMessageOverlay_tA3C672678BC77977BDB4693A58B2B4967741D842 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 (_ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C * ___pParams1, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * ___pResults2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pParams1, ___pResults2);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__ComputeOverlayIntersection::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ComputeOverlayIntersection__ctor_mA16F3258CF59C674E2E2F0DE960B3F6AC2F39CBB (_ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__ComputeOverlayIntersection::Invoke(System.UInt64,Valve.VR.VROverlayIntersectionParams_t&,Valve.VR.VROverlayIntersectionResults_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _ComputeOverlayIntersection_Invoke_m4D11F34B71487ED99D2D3CED7E5D13A46F0D84BF (_ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C * ___pParams1, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * ___pResults2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
					else
						result = GenericVirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
					else
						result = VirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pParams1, ___pResults2, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C *, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ComputeOverlayIntersection::BeginInvoke(System.UInt64,Valve.VR.VROverlayIntersectionParams_t&,Valve.VR.VROverlayIntersectionResults_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ComputeOverlayIntersection_BeginInvoke_m446B4827B769F27E30D41E7D146253F4ED4F3786 (_ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C * ___pParams1, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * ___pResults2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ComputeOverlayIntersection_BeginInvoke_m446B4827B769F27E30D41E7D146253F4ED4F3786_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C_il2cpp_TypeInfo_var, &*___pParams1);
	__d_args[2] = Box(VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F_il2cpp_TypeInfo_var, &*___pResults2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVROverlay__ComputeOverlayIntersection::EndInvoke(Valve.VR.VROverlayIntersectionParams_t&,Valve.VR.VROverlayIntersectionResults_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _ComputeOverlayIntersection_EndInvoke_m62C162A0E8F320ABA58EC0265C6C6F7C8A4F8AC4 (_ComputeOverlayIntersection_t251DEFD745CF9A6FF89D0B2C63951210A1B995E1 * __this, VROverlayIntersectionParams_t_t279DAB15AA12C1CB72581C1D8EEF9FB3817DD73C * ___pParams0, VROverlayIntersectionResults_t_t64B30F4F40DF05AA2E39CDA736230EC3628F241F * ___pResults1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pParams0,
	___pResults1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 (_CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, uint64_t*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchOverlayKey0' to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Marshaling of parameter '___pchOverlayFriendlyName1' to native representation
	char* ____pchOverlayFriendlyName1_marshaled = NULL;
	____pchOverlayFriendlyName1_marshaled = il2cpp_codegen_marshal_string(___pchOverlayFriendlyName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ____pchOverlayFriendlyName1_marshaled, ___pMainHandle2, ___pThumbnailHandle3);

	// Marshaling cleanup of parameter '___pchOverlayKey0' native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchOverlayFriendlyName1' native representation
	il2cpp_codegen_marshal_free(____pchOverlayFriendlyName1_marshaled);
	____pchOverlayFriendlyName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__CreateDashboardOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CreateDashboardOverlay__ctor_m79A688722F6009521ED5EBA375848902663554BB (_CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateDashboardOverlay::Invoke(System.String,System.String,System.UInt64&,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateDashboardOverlay_Invoke_m07F4B8F9A0BF52AF5559266B7FA6C72B388869C7 (_CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					else
						result = GenericVirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					else
						result = VirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayFriendlyName1) - 1), ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					else
						result = GenericVirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					else
						result = VirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayKey0) - 1), ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__CreateDashboardOverlay::BeginInvoke(System.String,System.String,System.UInt64&,System.UInt64&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _CreateDashboardOverlay_BeginInvoke_m04A9E835E2384EFB187F6EB1AB8AB797F0839DC1 (_CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateDashboardOverlay_BeginInvoke_m04A9E835E2384EFB187F6EB1AB8AB797F0839DC1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = ___pchOverlayFriendlyName1;
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pMainHandle2);
	__d_args[3] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pThumbnailHandle3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateDashboardOverlay::EndInvoke(System.UInt64&,System.UInt64&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateDashboardOverlay_EndInvoke_mBDBCA1B320D073AA586E957C2FED2814AC573A45 (_CreateDashboardOverlay_t4984CE63F5576C2FE3ECB4B63CBAC795B62F7FD2 * __this, uint64_t* ___pMainHandle0, uint64_t* ___pThumbnailHandle1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMainHandle0,
	___pThumbnailHandle1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 (_CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchOverlayKey0' to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Marshaling of parameter '___pchOverlayName1' to native representation
	char* ____pchOverlayName1_marshaled = NULL;
	____pchOverlayName1_marshaled = il2cpp_codegen_marshal_string(___pchOverlayName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ____pchOverlayName1_marshaled, ___pOverlayHandle2);

	// Marshaling cleanup of parameter '___pchOverlayKey0' native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchOverlayName1' native representation
	il2cpp_codegen_marshal_free(____pchOverlayName1_marshaled);
	____pchOverlayName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__CreateOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CreateOverlay__ctor_mE736E8B52AB1B8A2F870FE8D5DDEE0AF71C13646 (_CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateOverlay::Invoke(System.String,System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateOverlay_Invoke_m00CD1828746C69AD40B52DBCF397EEB51E80C87F (_CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					else
						result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					else
						result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayName1) - 1), ___pOverlayHandle2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					else
						result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					else
						result = VirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayKey0) - 1), ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__CreateOverlay::BeginInvoke(System.String,System.String,System.UInt64&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _CreateOverlay_BeginInvoke_m8D591D20022ABC599592093B7A398457D2D7BD82 (_CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateOverlay_BeginInvoke_m8D591D20022ABC599592093B7A398457D2D7BD82_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = ___pchOverlayName1;
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pOverlayHandle2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateOverlay::EndInvoke(System.UInt64&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateOverlay_EndInvoke_m7D162A2C358BAD074405ED0A3B43BAFE94E5801C (_CreateOverlay_tC8049EC8012C584AC8F841D0A0229E75414B2149 * __this, uint64_t* ___pOverlayHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 (_DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__DestroyOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _DestroyOverlay__ctor_m158544DA02B9A74C116CEA0DCB814502CE5766E1 (_DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__DestroyOverlay::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _DestroyOverlay_Invoke_m7B2427C96391E1EE7B139F42863A34FA1BDFD109 (_DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__DestroyOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _DestroyOverlay_BeginInvoke_m9B7F2B2EAF88D027017C9D6532DB6C02964EEF74 (_DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_DestroyOverlay_BeginInvoke_m9B7F2B2EAF88D027017C9D6532DB6C02964EEF74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__DestroyOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _DestroyOverlay_EndInvoke_m7A4EB6DD491CBDBF4EBB73110471F910225DDBDE (_DestroyOverlay_t1D24F01C9131EF5375B0BF49FD8A81B7C1A53D51 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 (_FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchOverlayKey0' to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ___pOverlayHandle1);

	// Marshaling cleanup of parameter '___pchOverlayKey0' native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__FindOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FindOverlay__ctor_m5C4011A97D982C344F9677E0298224F174F3F8D6 (_FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__FindOverlay::Invoke(System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _FindOverlay_Invoke_m27601372DBA49649C9739C2239366EDE10C28DAA (_FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
					else
						result = VirtFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pOverlayHandle1) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
					else
						result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
					else
						result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayKey0) - 1), ___pOverlayHandle1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__FindOverlay::BeginInvoke(System.String,System.UInt64&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _FindOverlay_BeginInvoke_m174D54C7D519765AFC0F7DB3610E782A0592305B (_FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FindOverlay_BeginInvoke_m174D54C7D519765AFC0F7DB3610E782A0592305B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pOverlayHandle1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__FindOverlay::EndInvoke(System.UInt64&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _FindOverlay_EndInvoke_mBF4117626B950D53042441EBB2FED246408EF0EF (_FindOverlay_tB9CD963EEB5574B509664043C86093FA3D94F0D5 * __this, uint64_t* ___pOverlayHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF (_GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punProcessId1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetDashboardOverlaySceneProcess__ctor_m945D98777D5087C725B06E1D301898EBF23BA024 (_GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::Invoke(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetDashboardOverlaySceneProcess_Invoke_m035DA674B00933AF0CD358661441373A22D043E6 (_GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___punProcessId1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::BeginInvoke(System.UInt64,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetDashboardOverlaySceneProcess_BeginInvoke_m5DC8223B656DB72AC5175B52B98A1EDEA90CE2B2 (_GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetDashboardOverlaySceneProcess_BeginInvoke_m5DC8223B656DB72AC5175B52B98A1EDEA90CE2B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punProcessId1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetDashboardOverlaySceneProcess_EndInvoke_mE61B96D97E4231A14AE519C0DDDF99D18FFB276A (_GetDashboardOverlaySceneProcess_t2705A49E84DBB07CED5546CF77909E421CE4EDBF * __this, uint32_t* ___punProcessId0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punProcessId0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 (_GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchText0' to native representation
	char* ____pchText0_marshaled = NULL;
	____pchText0_marshaled = il2cpp_codegen_marshal_string_builder(___pchText0);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchText0_marshaled, ___cchText1);

	// Marshaling of parameter '___pchText0' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchText0, ____pchText0_marshaled);

	// Marshaling cleanup of parameter '___pchText0' native representation
	il2cpp_codegen_marshal_free(____pchText0_marshaled);
	____pchText0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetKeyboardText::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetKeyboardText__ctor_m3FC28C9B4FB65A7131B1840AE252DC8D0CC49F5D (_GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetKeyboardText::Invoke(System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetKeyboardText_Invoke_mE4406A2DC64AC19ABCD42C72BFEF789DAFF42AF1 (_GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
					else
						result = GenericVirtFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___cchText1);
					else
						result = VirtFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___cchText1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___cchText1) - 1), targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
					else
						result = GenericVirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___cchText1);
					else
						result = VirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___cchText1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchText0) - 1), ___cchText1, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetKeyboardText::BeginInvoke(System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetKeyboardText_BeginInvoke_m5683612DFD09E9822139A63802701BAB8C551FCE (_GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetKeyboardText_BeginInvoke_m5683612DFD09E9822139A63802701BAB8C551FCE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchText0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___cchText1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt32 Valve.VR.IVROverlay__GetKeyboardText::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetKeyboardText_EndInvoke_mD3B3E5EAB196D35F2E558FAE969533D1802EDE1C (_GetKeyboardText_t0E8CA6C6AFEC939B64DACC4FB62D6D4AF5231825 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A (_GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfAlpha1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayAlpha::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayAlpha__ctor_m8F44C6817464E8A76FE271488FA70FB2187F546F (_GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAlpha::Invoke(System.UInt64,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayAlpha_Invoke_m1280E4ADBC744B3129C9FFEA90E9E3ECF070CA96 (_GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pfAlpha1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayAlpha::BeginInvoke(System.UInt64,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayAlpha_BeginInvoke_mB3DBCB095FFC2BDCC57A38E2458AC6E7D90989DC (_GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayAlpha_BeginInvoke_mB3DBCB095FFC2BDCC57A38E2458AC6E7D90989DC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfAlpha1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAlpha::EndInvoke(System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayAlpha_EndInvoke_mEE187008003039C1175D376B74CBEB9E3FA4C07D (_GetOverlayAlpha_t804A7F5CA22BDB4079A456645382AF443BD2A72A * __this, float* ___pfAlpha0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfAlpha0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE (_GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*, float*, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayColor::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayColor__ctor_m116597678CF0FDA262E77552CA258E444BEB24B0 (_GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayColor::Invoke(System.UInt64,System.Single&,System.Single&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayColor_Invoke_m2E7A6D06524BE0BF1AB62018C86980766876B938 (_GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayColor::BeginInvoke(System.UInt64,System.Single&,System.Single&,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayColor_BeginInvoke_m17642E8444D83209038425AF87AABB0AB6DAC568 (_GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayColor_BeginInvoke_m17642E8444D83209038425AF87AABB0AB6DAC568_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfRed1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfGreen2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfBlue3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayColor::EndInvoke(System.Single&,System.Single&,System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayColor_EndInvoke_mB5F8A488AB2B6CE7CF23E99E1AE31EB920A944D3 (_GetOverlayColor_tF5300100FA0166A15DE7BB033BAD8C79506BBEFE * __this, float* ___pfRed0, float* ___pfGreen1, float* ___pfBlue2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfRed0,
	___pfGreen1,
	___pfBlue2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 (_GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 * __this, uint64_t ___ulOverlayHandle0, float* ___pfCurvature1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfCurvature1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayCurvature::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayCurvature__ctor_m04A678689D0AFB078C8E9CA4BEA25B8FF829062B (_GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayCurvature::Invoke(System.UInt64,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayCurvature_Invoke_mC3225F8AA67D9C1FED2F029CCBFE7ECAD4AFDCE2 (_GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 * __this, uint64_t ___ulOverlayHandle0, float* ___pfCurvature1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfCurvature1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfCurvature1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfCurvature1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfCurvature1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfCurvature1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfCurvature1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfCurvature1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pfCurvature1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfCurvature1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayCurvature::BeginInvoke(System.UInt64,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayCurvature_BeginInvoke_mB672D3797FC3578A4CCDA2AF585FD49B87F7AD61 (_GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 * __this, uint64_t ___ulOverlayHandle0, float* ___pfCurvature1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayCurvature_BeginInvoke_mB672D3797FC3578A4CCDA2AF585FD49B87F7AD61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfCurvature1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayCurvature::EndInvoke(System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayCurvature_EndInvoke_m71F930C77F398B9BC48EB6622E6D85AD7FAEBA46 (_GetOverlayCurvature_t0C986BB3A244590562F4F0F040D053361B70F591 * __this, float* ___pfCurvature0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfCurvature0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 (_GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float* ___pfRadius3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayDualAnalogTransform__ctor_m927FCB1ED8E5FDD009AF606E3F534AD2D22821B1 (_GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::Invoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_t&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayDualAnalogTransform_Invoke_m99654D76638C52CCA6574F70EFACD7E7335C6A19 (_GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float* ___pfRadius3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlay0) - 1), ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::BeginInvoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_t&,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayDualAnalogTransform_BeginInvoke_m9EB4866ECAEEAA63F6B46588112D01E7277797D5 (_GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float* ___pfRadius3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayDualAnalogTransform_BeginInvoke_m9EB4866ECAEEAA63F6B46588112D01E7277797D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlay0);
	__d_args[1] = Box(EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8_il2cpp_TypeInfo_var, &___eWhich1);
	__d_args[2] = Box(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var, &*___pvCenter2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfRadius3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::EndInvoke(Valve.VR.HmdVector2_t&,System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayDualAnalogTransform_EndInvoke_mD1586BC1AFCC0DD515A3C02D7A5AE6DA38F71209 (_GetOverlayDualAnalogTransform_t064D7B527B75224805D0AA5BD6B239CD17139828 * __this, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter0, float* ___pfRadius1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvCenter0,
	___pfRadius1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  intptr_t DelegatePInvokeWrapper__GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E (_GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E * __this, int32_t ___error0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___error0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayErrorNameFromEnum__ctor_m1B604C2DB3534808D27D6EF4DDEE8BC92D2321F8 (_GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::Invoke(Valve.VR.EVROverlayError)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetOverlayErrorNameFromEnum_Invoke_m122B1E594C0EC5B96A936A60C71749AD87ECF7AD (_GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E * __this, int32_t ___error0, const RuntimeMethod* method)
{
	intptr_t result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
					else
						result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
					else
						result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef intptr_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___error0) - 1), targetMethod);
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::BeginInvoke(Valve.VR.EVROverlayError,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayErrorNameFromEnum_BeginInvoke_m32A57AFD0113D584E82EC7845F0BB1C6443C47CF (_GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E * __this, int32_t ___error0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayErrorNameFromEnum_BeginInvoke_m32A57AFD0113D584E82EC7845F0BB1C6443C47CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99_il2cpp_TypeInfo_var, &___error0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetOverlayErrorNameFromEnum_EndInvoke_m5B9CA36F207263A0A1C06AA39D2B637F7FA426ED (_GetOverlayErrorNameFromEnum_t8C05E6C2AC2B5E4CC0B4286AE55026C63F81DF6E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 (_GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pbEnabled2' to native representation
	int32_t* ____pbEnabled2_marshaled = NULL;
	int32_t ____pbEnabled2_marshaled_dereferenced = 0;
	____pbEnabled2_marshaled_dereferenced = static_cast<int32_t>(*___pbEnabled2);
	____pbEnabled2_marshaled = &____pbEnabled2_marshaled_dereferenced;

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eOverlayFlag1, ____pbEnabled2_marshaled);

	// Marshaling of parameter '___pbEnabled2' back from native representation
	bool _____pbEnabled2_marshaled_unmarshaled_dereferenced = false;
	_____pbEnabled2_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____pbEnabled2_marshaled);
	*___pbEnabled2 = _____pbEnabled2_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayFlag::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayFlag__ctor_m9A1580FACC2974EA331A4E31B053D638493E3AD3 (_GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlag::Invoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayFlag_Invoke_m7A9A2085FDD05778D423C594A79B63FFF57E0620 (_GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayFlag::BeginInvoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayFlag_BeginInvoke_m52AD76BD0F713A9925A186C1449A29A82B3C8710 (_GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayFlag_BeginInvoke_m52AD76BD0F713A9925A186C1449A29A82B3C8710_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayFlags_t9EA64894D2A21A9D6080E775FC9BD0E860416CB7_il2cpp_TypeInfo_var, &___eOverlayFlag1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &*___pbEnabled2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlag::EndInvoke(System.Boolean&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayFlag_EndInvoke_m400574B99B9EFE8D223081F971F319CCA31F76DC (_GetOverlayFlag_t00D45C88414C3EA9D4E18C95742582304A81B963 * __this, bool* ___pbEnabled0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pbEnabled0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 (_GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pFlags1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayFlags::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayFlags__ctor_m78DCFFA8234C48063F0D2F1222998B3ACB1A0ACA (_GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlags::Invoke(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayFlags_Invoke_mF04B68011A660192B7C2C66FCBB2904957DE3035 (_GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pFlags1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayFlags::BeginInvoke(System.UInt64,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayFlags_BeginInvoke_m10187FFFEDBE9B26CCC47E887B93E62F5EE70193 (_GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayFlags_BeginInvoke_m10187FFFEDBE9B26CCC47E887B93E62F5EE70193_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pFlags1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlags::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayFlags_EndInvoke_m12D20D7241DAA03602C3E24A01F562BA0B174D40 (_GetOverlayFlags_t7BF9708E92264612108A7F476E92250CFED0AE68 * __this, uint32_t* ___pFlags0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pFlags0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C (_GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayImageData::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayImageData__ctor_m576B11C7F448C5AD8F5A6429DBA3BC7C023D3A3A (_GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayImageData::Invoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayImageData_Invoke_mB85AB5A97E028B6277487D8AA64B67E97B15B6B3 (_GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
					else
						result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
					else
						result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayImageData::BeginInvoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32&,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayImageData_BeginInvoke_mE401C2CE415FC7AC292862D9AB1A27D9C54AD366 (_GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayImageData_BeginInvoke_mE401C2CE415FC7AC292862D9AB1A27D9C54AD366_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pvBuffer1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punWidth3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punHeight4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayImageData::EndInvoke(System.UInt32&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayImageData_EndInvoke_mC5D39785321847BB2C33C59D85C6E530CED4BEE2 (_GetOverlayImageData_tF3953A6D20EC2C7B179ECF786432EF5D52A0CA3C * __this, uint32_t* ___punWidth0, uint32_t* ___punHeight1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punWidth0,
	___punHeight1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 (_GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peInputMethod1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayInputMethod::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayInputMethod__ctor_mC2C232B4162A896DA30750572BAB7E4A2CB26F2A (_GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayInputMethod::Invoke(System.UInt64,Valve.VR.VROverlayInputMethod&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayInputMethod_Invoke_m35FD4EB227653AB808B15794656CBBAF90929493 (_GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___peInputMethod1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayInputMethod::BeginInvoke(System.UInt64,Valve.VR.VROverlayInputMethod&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayInputMethod_BeginInvoke_m9E69B7759BB409CDC56826DA3446EF7C3D9AAE04 (_GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayInputMethod_BeginInvoke_m9E69B7759BB409CDC56826DA3446EF7C3D9AAE04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayInputMethod_t750A341CAE8A5373D778C2EBC4829646233A3659_il2cpp_TypeInfo_var, &*___peInputMethod1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayInputMethod::EndInvoke(Valve.VR.VROverlayInputMethod&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayInputMethod_EndInvoke_m5CE6C01F70937975AB157D0494972E3122FE75C4 (_GetOverlayInputMethod_t42DA638F7821F153ED73F3AF70942F908366D864 * __this, int32_t* ___peInputMethod0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peInputMethod0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 (_GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchValue1' to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pError3);

	// Marshaling of parameter '___pchValue1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter '___pchValue1' native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayKey::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayKey__ctor_mB88DBCD485F93942519484EC122E20957AB27538 (_GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayKey::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayKey_Invoke_m173189A37DF628C28DD1637C1ED253D93985F127 (_GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					else
						result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayKey::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayKey_BeginInvoke_m91F8B8B7DE36BD7264AFD390966F99FB03965492 (_GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayKey_BeginInvoke_m91F8B8B7DE36BD7264AFD390966F99FB03965492_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99_il2cpp_TypeInfo_var, &*___pError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayKey::EndInvoke(Valve.VR.EVROverlayError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayKey_EndInvoke_m2889719B454462917404B8F2EF51818E51A05661 (_GetOverlayKey_t9EC489312E4FABDAB9F48D9E03F3819BC1F9C472 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 (_GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvecMouseScale1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayMouseScale::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayMouseScale__ctor_mF1A3CCC61D71F64A1126C8B433648B16B19DF1B9 (_GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayMouseScale::Invoke(System.UInt64,Valve.VR.HmdVector2_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayMouseScale_Invoke_mC298482192D453551AAD841BEB11DD7D6B611135 (_GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pvecMouseScale1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayMouseScale::BeginInvoke(System.UInt64,Valve.VR.HmdVector2_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayMouseScale_BeginInvoke_m17F3B100EECE1E2272DE3C4DAFE1AB73C4E194B1 (_GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayMouseScale_BeginInvoke_m17F3B100EECE1E2272DE3C4DAFE1AB73C4E194B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var, &*___pvecMouseScale1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayMouseScale::EndInvoke(Valve.VR.HmdVector2_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayMouseScale_EndInvoke_m10D8A45DA8C7725EC1CA086F9571D3E8899A374E (_GetOverlayMouseScale_t583ACED0FEC4B307F286EC3C0C3AEFC6D0841825 * __this, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvecMouseScale0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 (_GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchValue1' to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pError3);

	// Marshaling of parameter '___pchValue1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter '___pchValue1' native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayName::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayName__ctor_m7935DD93909A4533DD7048E1014B456D9C6FEFF3 (_GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayName::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayName_Invoke_m5AFAFB6633DABBA47691CB7BDFBB26483B6726B8 (_GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					else
						result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayName::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayName_BeginInvoke_mB34BC68B6A65BB19751E5980EF2C67B79577846E (_GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayName_BeginInvoke_mB34BC68B6A65BB19751E5980EF2C67B79577846E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99_il2cpp_TypeInfo_var, &*___pError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayName::EndInvoke(Valve.VR.EVROverlayError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayName_EndInvoke_m9BAA39F69499927709E1AFEE61A55338132A431D (_GetOverlayName_tDAAC75576A6BCB941BEB82A70904C104E9728F43 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 (_GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor3, int32_t* ___pError4, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchValue1' to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pColor3, ___pError4);

	// Marshaling of parameter '___pchValue1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter '___pchValue1' native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayRenderModel::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayRenderModel__ctor_m53F65C19B0DCCB14FCECB66697CE96CD8E1A37F6 (_GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderModel::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.HmdColor_t&,Valve.VR.EVROverlayError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderModel_Invoke_m97166F5FEEA9F44F2985B22CA7FFE0E48256E26B (_GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor3, int32_t* ___pError4, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
					else
						result = GenericVirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
					else
						result = VirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayRenderModel::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.HmdColor_t&,Valve.VR.EVROverlayError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayRenderModel_BeginInvoke_m65100A24A061007F1141EBE93606774289B0F83A (_GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor3, int32_t* ___pError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayRenderModel_BeginInvoke_m65100A24A061007F1141EBE93606774289B0F83A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15_il2cpp_TypeInfo_var, &*___pColor3);
	__d_args[4] = Box(EVROverlayError_t050A834F6C0CF03351D3138A098D2D2BFE63CD99_il2cpp_TypeInfo_var, &*___pError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderModel::EndInvoke(Valve.VR.HmdColor_t&,Valve.VR.EVROverlayError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderModel_EndInvoke_m36D4E6B827B5E303FEEF01B8E9D480942440D1DB (_GetOverlayRenderModel_tDC7ED36882468D1A3963F5810552595FC7ED9440 * __this, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor0, int32_t* ___pError1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pColor0,
	___pError1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 (_GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayRenderingPid::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayRenderingPid__ctor_mEC5F92F6F6DC9ACEA4672286FA1B1F4BE76BB58D (_GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderingPid::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderingPid_Invoke_m9A4D9509E14E0F4B8BE8C6E5443CA37DB634C14E (_GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayRenderingPid::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayRenderingPid_BeginInvoke_m01FF2590F0E0F74E36F3E77F9C6E20E71CF91DB0 (_GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayRenderingPid_BeginInvoke_m01FF2590F0E0F74E36F3E77F9C6E20E71CF91DB0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderingPid::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderingPid_EndInvoke_mB6056CF05E4E84D9D53C833A2C74ACEF34208B09 (_GetOverlayRenderingPid_tE37DB4EA14CC7D7503FF2A07A579A54866030560 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 (_GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punSortOrder1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlaySortOrder::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlaySortOrder__ctor_m9560B16B452CD340AE634FC9ADF2E9D1129DAAF8 (_GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlaySortOrder::Invoke(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlaySortOrder_Invoke_m239A4DE7DFE2FC32584326B0287D4C0985F22723 (_GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___punSortOrder1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlaySortOrder::BeginInvoke(System.UInt64,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlaySortOrder_BeginInvoke_mA45DF1997E0FF2294EAA49224AEC1175C8E97E8E (_GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlaySortOrder_BeginInvoke_mA45DF1997E0FF2294EAA49224AEC1175C8E97E8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punSortOrder1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlaySortOrder::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlaySortOrder_EndInvoke_m4963055F7BE6B7841785B7C78386E7EBA2E0662E (_GetOverlaySortOrder_t5FD5E47C221553C77E13097561EC45A72C7EF4D8 * __this, uint32_t* ___punSortOrder0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punSortOrder0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F (_GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfTexelAspect1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTexelAspect::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTexelAspect__ctor_mF5237FADFD8EC385544C15D94DE1FA51D6EF0556 (_GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexelAspect::Invoke(System.UInt64,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTexelAspect_Invoke_m1A464BB64B6E7A950C4DC7D8C11571ECDDBA752D (_GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pfTexelAspect1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTexelAspect::BeginInvoke(System.UInt64,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTexelAspect_BeginInvoke_m8616E5584B5FDDFD95DAB2721B85B1D17C67F6DE (_GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTexelAspect_BeginInvoke_m8616E5584B5FDDFD95DAB2721B85B1D17C67F6DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfTexelAspect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexelAspect::EndInvoke(System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTexelAspect_EndInvoke_m69AF0D2322363BC1BECC5EE9A62D17BB933A9E17 (_GetOverlayTexelAspect_t4E60275C5B6664CEB47EFCAC63221111626AD49F * __this, float* ___pfTexelAspect0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfTexelAspect0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 (_GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pTextureBounds8, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTexture::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTexture__ctor_m76EC4D5A08BD6738C81973BA947067F956E3B2FB (_GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexture::Invoke(System.UInt64,System.IntPtr&,System.IntPtr,System.UInt32&,System.UInt32&,System.UInt32&,Valve.VR.ETextureType&,Valve.VR.EColorSpace&,Valve.VR.VRTextureBounds_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTexture_Invoke_m166677A80CAC3479E52CFC37D512E2326CED716B (_GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pTextureBounds8, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 9)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
					else
						result = GenericVirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
					else
						result = VirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTexture::BeginInvoke(System.UInt64,System.IntPtr&,System.IntPtr,System.UInt32&,System.UInt32&,System.UInt32&,Valve.VR.ETextureType&,Valve.VR.EColorSpace&,Valve.VR.VRTextureBounds_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTexture_BeginInvoke_mF3EBC760965B5C8D6C3428842BD912D648678399 (_GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pTextureBounds8, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback9, RuntimeObject * ___object10, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTexture_BeginInvoke_mF3EBC760965B5C8D6C3428842BD912D648678399_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[10] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___pNativeTextureHandle1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pNativeTextureRef2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pWidth3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHeight4);
	__d_args[5] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pNativeFormat5);
	__d_args[6] = Box(ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400_il2cpp_TypeInfo_var, &*___pAPIType6);
	__d_args[7] = Box(EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448_il2cpp_TypeInfo_var, &*___pColorSpace7);
	__d_args[8] = Box(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779_il2cpp_TypeInfo_var, &*___pTextureBounds8);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback9, (RuntimeObject*)___object10);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexture::EndInvoke(System.IntPtr&,System.UInt32&,System.UInt32&,System.UInt32&,Valve.VR.ETextureType&,Valve.VR.EColorSpace&,Valve.VR.VRTextureBounds_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTexture_EndInvoke_m3FF6BE70A43E46BCC5F4D3450600B2D8E3B8803E (_GetOverlayTexture_t6468E37E249423DBADAE505396E270B3B9669DA1 * __this, intptr_t* ___pNativeTextureHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, uint32_t* ___pNativeFormat3, int32_t* ___pAPIType4, int32_t* ___pColorSpace5, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pTextureBounds6, RuntimeObject* ___result7, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pNativeTextureHandle0,
	___pWidth1,
	___pHeight2,
	___pNativeFormat3,
	___pAPIType4,
	___pColorSpace5,
	___pTextureBounds6,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result7, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 (_GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pOverlayTextureBounds1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureBounds::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTextureBounds__ctor_mF73274B25923FAB2C759F4770DCA7315E97385FE (_GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureBounds::Invoke(System.UInt64,Valve.VR.VRTextureBounds_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureBounds_Invoke_mB5305EDF2F78AF5148077BB6D4580E451DF132BD (_GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pOverlayTextureBounds1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureBounds::BeginInvoke(System.UInt64,Valve.VR.VRTextureBounds_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureBounds_BeginInvoke_mD527657050553630243CF8907CC46C288EEDFBF2 (_GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureBounds_BeginInvoke_mD527657050553630243CF8907CC46C288EEDFBF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779_il2cpp_TypeInfo_var, &*___pOverlayTextureBounds1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureBounds::EndInvoke(Valve.VR.VRTextureBounds_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureBounds_EndInvoke_mF315137866A63F3528FE0BB2662B0D4F23AC8712 (_GetOverlayTextureBounds_tBC4AD38E01405BA5135C25BEE32770C1E8273173 * __this, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayTextureBounds0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB (_GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTextureColorSpace1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureColorSpace::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTextureColorSpace__ctor_m0FB2B91FF43E26AE3C1E8F3182D136125BD51F06 (_GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureColorSpace::Invoke(System.UInt64,Valve.VR.EColorSpace&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureColorSpace_Invoke_m1C0EDEFF1E8F09BB944F16D10522D3701F2BF0F1 (_GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___peTextureColorSpace1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureColorSpace::BeginInvoke(System.UInt64,Valve.VR.EColorSpace&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureColorSpace_BeginInvoke_mEFAF87C9A925FFB7E74F11F31D665C173828FCC8 (_GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureColorSpace_BeginInvoke_mEFAF87C9A925FFB7E74F11F31D665C173828FCC8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448_il2cpp_TypeInfo_var, &*___peTextureColorSpace1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureColorSpace::EndInvoke(Valve.VR.EColorSpace&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureColorSpace_EndInvoke_m9577B9ED1E25AEB901EEE16483979FA688C33DCC (_GetOverlayTextureColorSpace_t3C715E35B1269AC5DD8FB228AAA38E9FE7D153DB * __this, int32_t* ___peTextureColorSpace0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTextureColorSpace0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A (_GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pWidth1, ___pHeight2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureSize::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTextureSize__ctor_mE3BDB55D60491D0724795D56F9BE46BA87BD0F4B (_GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureSize::Invoke(System.UInt64,System.UInt32&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureSize_Invoke_m4E44C1D90BED062DA3B984306D487830A00CEEA0 (_GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pWidth1, ___pHeight2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureSize::BeginInvoke(System.UInt64,System.UInt32&,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureSize_BeginInvoke_m70456B9AE71A91561400634E2D1BBDBF5DFD3974 (_GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureSize_BeginInvoke_m70456B9AE71A91561400634E2D1BBDBF5DFD3974_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pWidth1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHeight2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureSize::EndInvoke(System.UInt32&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureSize_EndInvoke_mB85633CC5481B6799185AA4908563AFC8700F5DE (_GetOverlayTextureSize_tBD5CE6E5F1290C72C3F348E326A1FD77375CBC5A * __this, uint32_t* ___pWidth0, uint32_t* ___pHeight1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pWidth0,
	___pHeight1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED (_GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformAbsolute::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTransformAbsolute__ctor_m6B2079B856D8E66B7CD2813B238CA0043BEEE935 (_GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformAbsolute::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin&,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformAbsolute_Invoke_mB8131E63CCE4274BFE5B38E899F5BAA38886A81A (_GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformAbsolute::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin&,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformAbsolute_BeginInvoke_m8E9DF3F25A3B2FBDC3C9CA00C572AF496FDEAD80 (_GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformAbsolute_BeginInvoke_m8E9DF3F25A3B2FBDC3C9CA00C572AF496FDEAD80_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var, &*___peTrackingOrigin1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformAbsolute::EndInvoke(Valve.VR.ETrackingUniverseOrigin&,Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformAbsolute_EndInvoke_mA656CE2847F01ADE5D84E571B14E0401D4D5FBF4 (_GetOverlayTransformAbsolute_t25B20A2C05F21BEB3C1C8854183AB22B8E757DED * __this, int32_t* ___peTrackingOrigin0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTrackingOrigin0,
	___pmatTrackingOriginToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 (_GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTransformOverlayRelative__ctor_m318DC5A5768314869A2CEB8FFC1516DD92DAD1DB (_GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::Invoke(System.UInt64,System.UInt64&,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformOverlayRelative_Invoke_mD7CBDFEA89B36DC4FA95817C6A235250BBC93113 (_GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::BeginInvoke(System.UInt64,System.UInt64&,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformOverlayRelative_BeginInvoke_m608C9517E835FB2EA1F39D24957AE61CD3212914 (_GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformOverlayRelative_BeginInvoke_m608C9517E835FB2EA1F39D24957AE61CD3212914_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___ulOverlayHandleParent1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatParentOverlayToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::EndInvoke(System.UInt64&,Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformOverlayRelative_EndInvoke_m8877297AAB288AB695609BE9CCD2CBB3EA2C5385 (_GetOverlayTransformOverlayRelative_tC9C25A68A56154065D14925A7A7850F85FFC2511 * __this, uint64_t* ___ulOverlayHandleParent0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ulOverlayHandleParent0,
	___pmatParentOverlayToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 (_GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchComponentName2' to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentName2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punDeviceIndex1, ____pchComponentName2_marshaled, ___unComponentNameSize3);

	// Marshaling of parameter '___pchComponentName2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentName2, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter '___pchComponentName2' native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTransformTrackedDeviceComponent__ctor_mDB49A2D24369B25D773830BCF1FE7EA829181619 (_GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::Invoke(System.UInt64,System.UInt32&,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceComponent_Invoke_m1CA08827071D90383803A1C8897A69F17D14E4AB (_GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::BeginInvoke(System.UInt64,System.UInt32&,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformTrackedDeviceComponent_BeginInvoke_m9DDF6D45DFDD0F35020EDA90D0DFBCAB57F1B389 (_GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformTrackedDeviceComponent_BeginInvoke_m9DDF6D45DFDD0F35020EDA90D0DFBCAB57F1B389_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punDeviceIndex1);
	__d_args[2] = ___pchComponentName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentNameSize3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceComponent_EndInvoke_m61F931AED58ABAD6EA99006B1A5E10F7AD735A3F (_GetOverlayTransformTrackedDeviceComponent_tC540E813032758E43B553DA4233B5A411EF29CA6 * __this, uint32_t* ___punDeviceIndex0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punDeviceIndex0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 (_GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTransformTrackedDeviceRelative__ctor_mE02023CFCC53D36BA3D15229C98835145AE51873 (_GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::Invoke(System.UInt64,System.UInt32&,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceRelative_Invoke_m8A9A5E004AE77065B10A6483D221B65C506A1160 (_GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::BeginInvoke(System.UInt64,System.UInt32&,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformTrackedDeviceRelative_BeginInvoke_mAF0469EBEB428A93E896CE5D1C54862796D055C5 (_GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformTrackedDeviceRelative_BeginInvoke_mAF0469EBEB428A93E896CE5D1C54862796D055C5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punTrackedDevice1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTrackedDeviceToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::EndInvoke(System.UInt32&,Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceRelative_EndInvoke_mB856FAA56F25EE51E5F036D6D0A704A3357ADF45 (_GetOverlayTransformTrackedDeviceRelative_tC7A36DDFD3877F99635032BD95F02ED6B6F8F039 * __this, uint32_t* ___punTrackedDevice0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punTrackedDevice0,
	___pmatTrackedDeviceToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 (_GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTransformType1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformType::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayTransformType__ctor_mDF17186188AD42DAA006C4C6F0C088F8B8F81867 (_GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformType::Invoke(System.UInt64,Valve.VR.VROverlayTransformType&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformType_Invoke_m3BE682ABF7E467B7FEB49D2E624E8AE2ECAA0C18 (_GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___peTransformType1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformType::BeginInvoke(System.UInt64,Valve.VR.VROverlayTransformType&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformType_BeginInvoke_mE01DB8C5FE613916942B80F7EC2F7F71EDC861E2 (_GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformType_BeginInvoke_mE01DB8C5FE613916942B80F7EC2F7F71EDC861E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayTransformType_t0D09E5D670CD6E250A5E89B47D0F6F4B38BDC6F7_il2cpp_TypeInfo_var, &*___peTransformType1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformType::EndInvoke(Valve.VR.VROverlayTransformType&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformType_EndInvoke_m858BD1DB30EFEE859590B7D7993E00530FDE8A09 (_GetOverlayTransformType_tE8317A1630F0B0595B95D59315BB7780F96C6348 * __this, int32_t* ___peTransformType0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTransformType0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 (_GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfWidthInMeters1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayWidthInMeters::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetOverlayWidthInMeters__ctor_m773895835CFC2197035DBBF7E0CB3351B11D0639 (_GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayWidthInMeters::Invoke(System.UInt64,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayWidthInMeters_Invoke_mCC4D25D95ACED83F00231590198ECE62A8E84FE4 (_GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pfWidthInMeters1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayWidthInMeters::BeginInvoke(System.UInt64,System.Single&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayWidthInMeters_BeginInvoke_m2911385F4488C1C9A767B3AEDFAFCF2329E65BA7 (_GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayWidthInMeters_BeginInvoke_m2911385F4488C1C9A767B3AEDFAFCF2329E65BA7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfWidthInMeters1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayWidthInMeters::EndInvoke(System.Single&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetOverlayWidthInMeters_EndInvoke_m7C9353F22740EFF18224D57D11AE7A2B8D5BB66F (_GetOverlayWidthInMeters_t7DCA462BF0E64EA4628CD6A1EBDF761DFA90E245 * __this, float* ___pfWidthInMeters0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfWidthInMeters0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 (_GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetPrimaryDashboardDevice::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetPrimaryDashboardDevice__ctor_mF0AD6A8781911B464EFFA26377434FF293873DE7 (_GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetPrimaryDashboardDevice::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetPrimaryDashboardDevice_Invoke_m7767F34A046D95C4A43B7BE9AAC4AC0FA5118D3C (_GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					else
						result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetPrimaryDashboardDevice::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetPrimaryDashboardDevice_BeginInvoke_mD21567F46BFCED12293FB7BC986CA01E12970B47 (_GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVROverlay__GetPrimaryDashboardDevice::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetPrimaryDashboardDevice_EndInvoke_mF31D29F0454D1C5FDE9CF18986C55F770CC97225 (_GetPrimaryDashboardDevice_tECC32051BCAEB217CB7CAC3E203F687D9DED5929 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 (_GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___coordinatesInOverlay2, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTransform3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetTransformForOverlayCoordinates__ctor_m435231D865D266B72824EDC994061A8315F5C005 (_GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdVector2_t,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetTransformForOverlayCoordinates_Invoke_m471E341ABAA15B0D384281BF5BD648A5CBD5E2F4 (_GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___coordinatesInOverlay2, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTransform3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 , HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdVector2_t,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetTransformForOverlayCoordinates_BeginInvoke_m31693500B87325CA6963309965913BDCC9767F75 (_GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9  ___coordinatesInOverlay2, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTransform3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetTransformForOverlayCoordinates_BeginInvoke_m31693500B87325CA6963309965913BDCC9767F75_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var, &___eTrackingOrigin1);
	__d_args[2] = Box(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var, &___coordinatesInOverlay2);
	__d_args[3] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTransform3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::EndInvoke(Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetTransformForOverlayCoordinates_EndInvoke_mF86614A0B2998AEAD38BB2F7A8AC94512229CFC1 (_GetTransformForOverlayCoordinates_tE9FED67F9F223459E859C18D9E380078B9640F94 * __this, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 (_HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVROverlay__HideKeyboard::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _HideKeyboard__ctor_m6C0ABE78FE2C9B60028830182ECC602D72540A64 (_HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__HideKeyboard::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _HideKeyboard_Invoke_mA5946F6865A0AF1C616529403CEE33A9BA8F5542 (_HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__HideKeyboard::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _HideKeyboard_BeginInvoke_mC5AD8668F816EAE748B177F1F4A95EA95F53F26B (_HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVROverlay__HideKeyboard::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _HideKeyboard_EndInvoke_m147765ACE27C1FBEFF7097EFBFEB256D61C34D42 (_HideKeyboard_t6A7C2383037DFAAE30114E58261D8251C2F25895 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 (_HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__HideOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _HideOverlay__ctor_m15524641B4BFEC303391280EFB0109C3F8C61FA2 (_HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__HideOverlay::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _HideOverlay_Invoke_mB3B0978C8D8F3C4CCBE2704B6765ADC7861D5ACA (_HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__HideOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _HideOverlay_BeginInvoke_m96CF36F0E1916D5707D0EB52CADAD5801FDE7F7F (_HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_HideOverlay_BeginInvoke_m96CF36F0E1916D5707D0EB52CADAD5801FDE7F7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__HideOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _HideOverlay_EndInvoke_m02C290606D9DCDC5A6183402E581BB0870CA6D14 (_HideOverlay_tDA08A5BE14B5B40ED008470DCE149BE5E7E438B2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 (_IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsActiveDashboardOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _IsActiveDashboardOverlay__ctor_m530820349231F854267F5C8AF27F9BD4DF03E514 (_IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsActiveDashboardOverlay::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsActiveDashboardOverlay_Invoke_mBF9473120B5C240C02EADE25B9462A76EC31AB7B (_IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsActiveDashboardOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _IsActiveDashboardOverlay_BeginInvoke_m8BF868D2013411E0CB2993E42D069F9D3C1FD005 (_IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsActiveDashboardOverlay_BeginInvoke_m8BF868D2013411E0CB2993E42D069F9D3C1FD005_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsActiveDashboardOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsActiveDashboardOverlay_EndInvoke_mA02E60E78FABE5AC48DF9EB94FB6A3A1FD2E1622 (_IsActiveDashboardOverlay_t6D08435EFCBB3F656685454CC4C03A0664B31B68 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 (_IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsDashboardVisible::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _IsDashboardVisible__ctor_mB4DC7C561273D7A74BD6149EDAB240B043359161 (_IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsDashboardVisible::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsDashboardVisible_Invoke_m8235E989948B1F058F90DE991F19DB6517248F38 (_IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					else
						result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsDashboardVisible::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _IsDashboardVisible_BeginInvoke_m3FF383507425883B1C26B1F0559C8C024EA19F34 (_IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVROverlay__IsDashboardVisible::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsDashboardVisible_EndInvoke_m227342808F2002D08F287417ADE344A1CF7B42A5 (_IsDashboardVisible_tCD3403B5D488FD8C000E94230ECC7AB736FDA338 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D (_IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsHoverTargetOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _IsHoverTargetOverlay__ctor_m37C26F5D292FB30E686A23435CAD9555C582BB78 (_IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsHoverTargetOverlay::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsHoverTargetOverlay_Invoke_mEBF65C9EBC31F8EECE8676A71C377A4520CF2D2B (_IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsHoverTargetOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _IsHoverTargetOverlay_BeginInvoke_mF2C7D56D0F07E2D95D6CDCFE0CCA455360556DE6 (_IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsHoverTargetOverlay_BeginInvoke_mF2C7D56D0F07E2D95D6CDCFE0CCA455360556DE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsHoverTargetOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsHoverTargetOverlay_EndInvoke_mCFF52D2F41423D268E9884663E919850DDC40651 (_IsHoverTargetOverlay_t9353818F7C8DA43BC2A02F9A55ED0525A6CC8F8D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D (_IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsOverlayVisible::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _IsOverlayVisible__ctor_m2B53ECF107550BE5E9080E33BF4C0249DA4BFDFE (_IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsOverlayVisible::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsOverlayVisible_Invoke_m97FCD750E289934F2B90BD3A1AF3B88DD6BF1B6F (_IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsOverlayVisible::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _IsOverlayVisible_BeginInvoke_m7F52ED5C96CCB87B2FFF321AA20266CFFFE408B4 (_IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsOverlayVisible_BeginInvoke_m7F52ED5C96CCB87B2FFF321AA20266CFFFE408B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsOverlayVisible::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _IsOverlayVisible_EndInvoke_m6378FEA519822416F851D5F2DC8DE51C67A9FA61 (_IsOverlayVisible_t2B974235AD0B72C4F3C29FD433906FBD87CAB58D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 (_PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C * ___pEvent1, uint32_t ___uncbVREvent2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__PollNextOverlayEvent::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _PollNextOverlayEvent__ctor_m30984A8515673B661C5392083C9FFEFD25A27826 (_PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__PollNextOverlayEvent::Invoke(System.UInt64,Valve.VR.VREvent_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _PollNextOverlayEvent_Invoke_mE8C0FDD000DA47AF8A5CDC860D8426935D5B4F57 (_PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C * ___pEvent1, uint32_t ___uncbVREvent2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
					else
						result = GenericVirtFuncInvoker3< bool, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
					else
						result = VirtFuncInvoker3< bool, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pEvent1, ___uncbVREvent2, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__PollNextOverlayEvent::BeginInvoke(System.UInt64,Valve.VR.VREvent_t&,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _PollNextOverlayEvent_BeginInvoke_m60C62AA28ECF3B1F5F9160312CEBC2214791E6E0 (_PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C * ___pEvent1, uint32_t ___uncbVREvent2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_PollNextOverlayEvent_BeginInvoke_m60C62AA28ECF3B1F5F9160312CEBC2214791E6E0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C_il2cpp_TypeInfo_var, &*___pEvent1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___uncbVREvent2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVROverlay__PollNextOverlayEvent::EndInvoke(Valve.VR.VREvent_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _PollNextOverlayEvent_EndInvoke_m6C920DB361C958222FEC1E4531EE4AE28788FD61 (_PollNextOverlayEvent_t0EDC657BCDA4D53A29E9EFE82A3BC847621643A2 * __this, VREvent_t_t4F330058D4B87093309E1043D17F8A3DB1BA925C * ___pEvent0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pEvent0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 (_ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pNativeTextureHandle1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ReleaseNativeOverlayHandle__ctor_mA7CAE67BBB53F898011C4F286AE8EFA802C16936 (_ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::Invoke(System.UInt64,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ReleaseNativeOverlayHandle_Invoke_mC6458E972DD7159260C39BE78319EAEDAE5C69BE (_ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pNativeTextureHandle1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::BeginInvoke(System.UInt64,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ReleaseNativeOverlayHandle_BeginInvoke_m6910C87E6831C64AA3F1CCFEB9ED6185D10CD2B5 (_ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ReleaseNativeOverlayHandle_BeginInvoke_m6910C87E6831C64AA3F1CCFEB9ED6185D10CD2B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pNativeTextureHandle1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ReleaseNativeOverlayHandle_EndInvoke_m044DCAE14F0A48E2EB4C62B843D1E6938637A3E7 (_ReleaseNativeOverlayHandle_t8AEF55D73294BB0551719A0A40253BD082C37DE9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA (_SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unProcessId1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetDashboardOverlaySceneProcess__ctor_mD1D6FDE876873A616DC5C1C972A96BDEEA3791B0 (_SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::Invoke(System.UInt64,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetDashboardOverlaySceneProcess_Invoke_m986AC3BAF5458972BBD7535F5DEFB4B257C75C0B (_SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___unProcessId1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetDashboardOverlaySceneProcess_BeginInvoke_m752040E26C14297449EB841AFB3AB6E6057A2984 (_SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetDashboardOverlaySceneProcess_BeginInvoke_m752040E26C14297449EB841AFB3AB6E6057A2984_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unProcessId1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetDashboardOverlaySceneProcess_EndInvoke_mAF41F06AC6DEAF8E53845D8F13EF00332F150F7F (_SetDashboardOverlaySceneProcess_t33622E08EA792DEE9EBDD2CCAE4AB2ED29A761CA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE (_SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  ___avoidRect1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___ulOverlayHandle0, ___avoidRect1);

}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay__ctor_mF756C0E1EBF9210BE40E7AD17359C92C6CF47E05 (_SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::Invoke(System.UInt64,Valve.VR.HmdRect2_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay_Invoke_mEBF5FF580152F7C99B76E5AC5DC78ED41FD347F1 (_SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  ___avoidRect1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
					else
						GenericVirtActionInvoker2< uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
					else
						VirtActionInvoker2< uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___avoidRect1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::BeginInvoke(System.UInt64,Valve.VR.HmdRect2_t,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetKeyboardPositionForOverlay_BeginInvoke_m1F23E74A0BDC5FCABA688BBC5FED68EFB08B6791 (_SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68  ___avoidRect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetKeyboardPositionForOverlay_BeginInvoke_m1F23E74A0BDC5FCABA688BBC5FED68EFB08B6791_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdRect2_t_tBA3A5C3DCD77BAC0DF871D2F17C7C284779CAF68_il2cpp_TypeInfo_var, &___avoidRect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay_EndInvoke_m2B3344CBE97C843D80100F89D83A91BED5CE09C1 (_SetKeyboardPositionForOverlay_t3730738F9D405CF77E7C1CB8F923A1CB509D23FE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 (_SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToKeyboardTransform1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);

}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute__ctor_m897DA9AFF2FE2CFBD4B281ECB5A72A466E75FE22 (_SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::Invoke(Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute_Invoke_m8266C10BDC321A3C20DD60593DEAF58665547F5D (_SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToKeyboardTransform1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
					else
						GenericVirtActionInvoker2< int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
					else
						VirtActionInvoker2< int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___eTrackingOrigin0) - 1), ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::BeginInvoke(Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetKeyboardTransformAbsolute_BeginInvoke_mDDB6F5E35BE83B001022B50B7CB1D9F7020F5F45 (_SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToKeyboardTransform1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetKeyboardTransformAbsolute_BeginInvoke_mDDB6F5E35BE83B001022B50B7CB1D9F7020F5F45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var, &___eTrackingOrigin0);
	__d_args[1] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToKeyboardTransform1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::EndInvoke(Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute_EndInvoke_m99031026B92BEE21AF319BB8207DB5C986D04F3F (_SetKeyboardTransformAbsolute_t8EE5D0CBA29EA696A68742D42BADAAA27C213F51 * __this, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToKeyboardTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackingOriginToKeyboardTransform0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE (_SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fAlpha1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayAlpha::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayAlpha__ctor_m999DF9176BF59660535C53B84CA1D7ED4A7A32D0 (_SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAlpha::Invoke(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayAlpha_Invoke_m9C35A999EA5CA2D25239A6D4A1B117D60C2DA326 (_SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___fAlpha1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayAlpha::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayAlpha_BeginInvoke_mB007B9BB5F4954CEDE94E4887A0B0E180844D279 (_SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayAlpha_BeginInvoke_mB007B9BB5F4954CEDE94E4887A0B0E180844D279_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fAlpha1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAlpha::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayAlpha_EndInvoke_m77119295782F1E62C8148356C8BECE8EC64AA910 (_SetOverlayAlpha_t4E507DF97BAD8C044490D39E66F729A6C9B41BFE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D (_SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float, float, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayColor::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayColor__ctor_mED81847A17977A7F4E6973C6200690865926E1A3 (_SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayColor::Invoke(System.UInt64,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayColor_Invoke_mC5403F78C8A5793ABCC623A671EE15D8395E358D (_SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayColor::BeginInvoke(System.UInt64,System.Single,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayColor_BeginInvoke_mF0C23FCDE90E280A4FEB25DDC89BA9C23FC980E8 (_SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayColor_BeginInvoke_mF0C23FCDE90E280A4FEB25DDC89BA9C23FC980E8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fRed1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fGreen2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fBlue3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayColor::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayColor_EndInvoke_m9551957FC404439D07ADCEBC8765B339EE04BC83 (_SetOverlayColor_t774A672F72D941002A574895B1AE12769AE6DB7D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 (_SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 * __this, uint64_t ___ulOverlayHandle0, float ___fCurvature1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fCurvature1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayCurvature::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayCurvature__ctor_mD97E2766BDC3C09FD8BF98FDF4AB46D09BDFF40D (_SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayCurvature::Invoke(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayCurvature_Invoke_mC422B254F621A4C4FEF83D9EDD66ADA5B2AC2FD0 (_SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 * __this, uint64_t ___ulOverlayHandle0, float ___fCurvature1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fCurvature1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fCurvature1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fCurvature1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fCurvature1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fCurvature1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fCurvature1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fCurvature1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___fCurvature1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fCurvature1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayCurvature::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayCurvature_BeginInvoke_m4D9FC461F7E26000203C87EBE7E5F5901AB1A412 (_SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 * __this, uint64_t ___ulOverlayHandle0, float ___fCurvature1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayCurvature_BeginInvoke_m4D9FC461F7E26000203C87EBE7E5F5901AB1A412_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fCurvature1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayCurvature::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayCurvature_EndInvoke_mB95E3F54A21618C1D3D0344144E1030E53339E49 (_SetOverlayCurvature_t015169CEFD7E42B6ECAE7BF5D66E1EA2F9358476 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 (_SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float ___fRadius3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayDualAnalogTransform__ctor_mCE7E1FE29920BECA3080CD612E03DC0544C14CCA (_SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::Invoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_t&,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayDualAnalogTransform_Invoke_mEA85FADC77006A27A54C8A09DB6EFFBD6F4F341A (_SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float ___fRadius3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlay0) - 1), ___eWhich1, ___pvCenter2, ___fRadius3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___fRadius3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::BeginInvoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_t&,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayDualAnalogTransform_BeginInvoke_m902D590F0EEBF96E7BFA84A74F71D57C2362421A (_SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter2, float ___fRadius3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayDualAnalogTransform_BeginInvoke_m902D590F0EEBF96E7BFA84A74F71D57C2362421A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlay0);
	__d_args[1] = Box(EDualAnalogWhich_t844CFA5C049DB47CB2E9E69E900CE2AD45FC22A8_il2cpp_TypeInfo_var, &___eWhich1);
	__d_args[2] = Box(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var, &*___pvCenter2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fRadius3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::EndInvoke(Valve.VR.HmdVector2_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayDualAnalogTransform_EndInvoke_m2FD945D80522A8AEED3C58249E8FC203FCF78002 (_SetOverlayDualAnalogTransform_tB9A9DC9BF8A60256D9230791B05E6C5E2ADA1E24 * __this, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvCenter0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvCenter0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 (_SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eOverlayFlag1, static_cast<int32_t>(___bEnabled2));

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayFlag::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayFlag__ctor_m5D892D167BCD7D8BC5D4681FAEFD79FC7CA0CC2B (_SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFlag::Invoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayFlag_Invoke_mF4C2A31C34779D28350319C9FF0B98A82F7B1630 (_SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayFlag::BeginInvoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayFlag_BeginInvoke_mE842C745526EA169C9D4AD9AD4AE875961B4463F (_SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayFlag_BeginInvoke_mE842C745526EA169C9D4AD9AD4AE875961B4463F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayFlags_t9EA64894D2A21A9D6080E775FC9BD0E860416CB7_il2cpp_TypeInfo_var, &___eOverlayFlag1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bEnabled2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFlag::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayFlag_EndInvoke_mEE0D078304AD78FF30D4CD9CB7E90B8A6944E245 (_SetOverlayFlag_t362C826D0B1E58BBE4726EC56E25775669C6F4D0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 (_SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchFilePath1' to native representation
	char* ____pchFilePath1_marshaled = NULL;
	____pchFilePath1_marshaled = il2cpp_codegen_marshal_string(___pchFilePath1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchFilePath1_marshaled);

	// Marshaling cleanup of parameter '___pchFilePath1' native representation
	il2cpp_codegen_marshal_free(____pchFilePath1_marshaled);
	____pchFilePath1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayFromFile::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayFromFile__ctor_m545592BEFBB5A3E77257C44E05E7689AA9A88F46 (_SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFromFile::Invoke(System.UInt64,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayFromFile_Invoke_mF11290174483853988B9227EC4A7F17FD2F49453 (_SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchFilePath1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayFromFile::BeginInvoke(System.UInt64,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayFromFile_BeginInvoke_m4B322EA3E78CBD9F71EC4D442DC12BE534C5A738 (_SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayFromFile_BeginInvoke_m4B322EA3E78CBD9F71EC4D442DC12BE534C5A738_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchFilePath1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFromFile::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayFromFile_EndInvoke_mA7FB1B72A272B2AF3B819B4F0F2ABDE0FF5E7190 (_SetOverlayFromFile_t6F62FAAB580CAB2DACCDF3C92BED3F725B5F1640 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 (_SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eInputMethod1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayInputMethod::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayInputMethod__ctor_mB15C58F8D4A75489A74A82CFF883D599787389EF (_SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayInputMethod::Invoke(System.UInt64,Valve.VR.VROverlayInputMethod)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayInputMethod_Invoke_mFB2769F82259C0B2DC400871775D055620BD18BF (_SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eInputMethod1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayInputMethod::BeginInvoke(System.UInt64,Valve.VR.VROverlayInputMethod,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayInputMethod_BeginInvoke_m7B9C7981EE739086F0E288800386DA8FF02C1443 (_SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayInputMethod_BeginInvoke_m7B9C7981EE739086F0E288800386DA8FF02C1443_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayInputMethod_t750A341CAE8A5373D778C2EBC4829646233A3659_il2cpp_TypeInfo_var, &___eInputMethod1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayInputMethod::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayInputMethod_EndInvoke_mF9BF992D217850079A2963FB5413FAA46F5D283E (_SetOverlayInputMethod_t6F7B234EAE60767ECF05F9400607AEB2229C6E02 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 (_SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayIntersectionMask::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayIntersectionMask__ctor_m89ECE42FB8A9C271169C9E3496F9734D6D282E54 (_SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayIntersectionMask::Invoke(System.UInt64,Valve.VR.VROverlayIntersectionMaskPrimitive_t&,System.UInt32,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayIntersectionMask_Invoke_mE0F4BEB4FC67AC0282AE2E2441A34F6A53D9444E (_SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
					else
						result = VirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayIntersectionMask::BeginInvoke(System.UInt64,Valve.VR.VROverlayIntersectionMaskPrimitive_t&,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayIntersectionMask_BeginInvoke_m9268603B9DDB513AD08EE9DC8E9BC96F96BCD9EF (_SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayIntersectionMask_BeginInvoke_m9268603B9DDB513AD08EE9DC8E9BC96F96BCD9EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6_il2cpp_TypeInfo_var, &*___pMaskPrimitives1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unNumMaskPrimitives2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unPrimitiveSize3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayIntersectionMask::EndInvoke(Valve.VR.VROverlayIntersectionMaskPrimitive_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayIntersectionMask_EndInvoke_m22EB1EF2470BEFD6DC9C712B2645733C8B157DDD (_SetOverlayIntersectionMask_tA6DBFBC6D0F42A1628780B04391C143A2E962388 * __this, VROverlayIntersectionMaskPrimitive_t_tF8C3A936825F6931BB72670A5BC15CEE9EEDF1D6 * ___pMaskPrimitives0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMaskPrimitives0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E (_SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvecMouseScale1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayMouseScale::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayMouseScale__ctor_m848427D161CCC96EF19F8A3958194CA97051AC69 (_SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayMouseScale::Invoke(System.UInt64,Valve.VR.HmdVector2_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayMouseScale_Invoke_m984B7D3F194871BB8684878D2F801E7C06BF7187 (_SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pvecMouseScale1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayMouseScale::BeginInvoke(System.UInt64,Valve.VR.HmdVector2_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayMouseScale_BeginInvoke_mF6DE909113215C8A9BE0236A06739AC840204CAD (_SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayMouseScale_BeginInvoke_mF6DE909113215C8A9BE0236A06739AC840204CAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9_il2cpp_TypeInfo_var, &*___pvecMouseScale1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayMouseScale::EndInvoke(Valve.VR.HmdVector2_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayMouseScale_EndInvoke_m34AC6C319A3529DCD063C564EB954E615ECB6585 (_SetOverlayMouseScale_tB86F6D0BC2E1611CB7746B8100180BF086A4C53E * __this, HmdVector2_t_t31420BF8B0ACBF9B44B789BA341CCF9F4A909FF9 * ___pvecMouseScale0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvecMouseScale0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 (_SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchName1' to native representation
	char* ____pchName1_marshaled = NULL;
	____pchName1_marshaled = il2cpp_codegen_marshal_string(___pchName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchName1_marshaled);

	// Marshaling cleanup of parameter '___pchName1' native representation
	il2cpp_codegen_marshal_free(____pchName1_marshaled);
	____pchName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayName::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayName__ctor_mCA08BDAD9CAABB914AF1EAF598F85F75801F8F23 (_SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayName::Invoke(System.UInt64,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayName_Invoke_m356BF2E6F417988555479FFB9D6CB5CC8D938AC5 (_SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchName1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayName::BeginInvoke(System.UInt64,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayName_BeginInvoke_m8D99905E8D264A33E3B6378BB6B9BF8B7F3F7A53 (_SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayName_BeginInvoke_m8D99905E8D264A33E3B6378BB6B9BF8B7F3F7A53_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayName::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayName_EndInvoke_mA132E7877D010AB007561500A9C0025931EEAD0B (_SetOverlayName_t5CA339F974CFB370D787C8938FCFC9CB67972703 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F (_SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t, uint32_t, uint32_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRaw::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayRaw__ctor_m94A99B7FDD859DCE4D92F83D25912D73CCA89320 (_SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRaw::Invoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRaw_Invoke_mB4A8F477FA22D89956B2E797F4856A2E7C6DF393 (_SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
					else
						result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
					else
						result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRaw::BeginInvoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRaw_BeginInvoke_mD458637A632F6C9E00264403C738019DE9E32D18 (_SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRaw_BeginInvoke_mD458637A632F6C9E00264403C738019DE9E32D18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pvBuffer1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unWidth2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unHeight3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDepth4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRaw::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRaw_EndInvoke_m8315C69B7AF86AB8F3D7B65AFB8F9E2FB0B1D96B (_SetOverlayRaw_tE63ABB64378ACD8246667F06813D428AAFEE438F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F (_SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModel1' to native representation
	char* ____pchRenderModel1_marshaled = NULL;
	____pchRenderModel1_marshaled = il2cpp_codegen_marshal_string(___pchRenderModel1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchRenderModel1_marshaled, ___pColor2);

	// Marshaling cleanup of parameter '___pchRenderModel1' native representation
	il2cpp_codegen_marshal_free(____pchRenderModel1_marshaled);
	____pchRenderModel1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRenderModel::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayRenderModel__ctor_m0D5AEBD91A3A0A7F1D469DA873B6C13FB18074BE (_SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderModel::Invoke(System.UInt64,System.String,Valve.VR.HmdColor_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderModel_Invoke_mD1485AB17F96D93832906FAA1C13C61202D9D59A (_SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pchRenderModel1, ___pColor2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRenderModel::BeginInvoke(System.UInt64,System.String,Valve.VR.HmdColor_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRenderModel_BeginInvoke_m9087BC2DA95F34ED6D04F8373BDA7975924426C4 (_SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRenderModel_BeginInvoke_m9087BC2DA95F34ED6D04F8373BDA7975924426C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchRenderModel1;
	__d_args[2] = Box(HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15_il2cpp_TypeInfo_var, &*___pColor2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderModel::EndInvoke(Valve.VR.HmdColor_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderModel_EndInvoke_mA14202F4DA6F8DF13A264DA32CA90E10E66CF792 (_SetOverlayRenderModel_t05132570FEA0DDA50788DA49A9374147299F3C3F * __this, HmdColor_t_t914B9271AB1D89C1F555A8C243B657E98C622C15 * ___pColor0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pColor0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 (_SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unPID1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRenderingPid::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayRenderingPid__ctor_mB508455A332E406FCBB753F0BEAA6D6B68CDBB72 (_SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderingPid::Invoke(System.UInt64,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderingPid_Invoke_m19FCBCFBE486B62E5F7A2ECD647051B6FB2A7990 (_SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___unPID1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRenderingPid::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRenderingPid_BeginInvoke_m6088108F6F947BA2C1A83F7DAB04EF7503583504 (_SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRenderingPid_BeginInvoke_m6088108F6F947BA2C1A83F7DAB04EF7503583504_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unPID1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderingPid::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderingPid_EndInvoke_m3F4C730B65F8A4B54C8CD03A6FB1D04016EED04E (_SetOverlayRenderingPid_tEDF504066C9879349ECBC1A282ECFB0A41DB6F39 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 (_SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unSortOrder1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlaySortOrder::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlaySortOrder__ctor_mEE5F34235B2B9F6DB65336EDF12C3DC201ABD72B (_SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlaySortOrder::Invoke(System.UInt64,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlaySortOrder_Invoke_mE13FCF1DC3A3D030351B6C291A71155608817CE6 (_SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___unSortOrder1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlaySortOrder::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlaySortOrder_BeginInvoke_m3A8112705592B35900896B83F017F4EF9610EE5E (_SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlaySortOrder_BeginInvoke_m3A8112705592B35900896B83F017F4EF9610EE5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unSortOrder1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlaySortOrder::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlaySortOrder_EndInvoke_m368B8F6D2AC4BD7219874E1950FBFDEFA904FFF3 (_SetOverlaySortOrder_t010873D3209BACA155A276700EB3E6E58C5E6163 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 (_SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fTexelAspect1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTexelAspect::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTexelAspect__ctor_m57E013E9D613735FEECFD717A15D0B7F18AB04B6 (_SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexelAspect::Invoke(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTexelAspect_Invoke_mCB3BEFED51A998B4588C3CDEC342B0AF357DB02E (_SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___fTexelAspect1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTexelAspect::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTexelAspect_BeginInvoke_m62BE594510848EC5CC09FB8B3CC392F4408BD92F (_SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTexelAspect_BeginInvoke_m62BE594510848EC5CC09FB8B3CC392F4408BD92F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fTexelAspect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexelAspect::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTexelAspect_EndInvoke_m7F49537EECC822F2B66A47D5A34E69577248F4E2 (_SetOverlayTexelAspect_tC5628991DAA530701F90FC23A651FC63BC1D17E0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB (_SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB * __this, uint64_t ___ulOverlayHandle0, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * ___pTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTexture::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTexture__ctor_m80EEF2A7B5C541CC87E40CA311419A65FCB53AF3 (_SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexture::Invoke(System.UInt64,Valve.VR.Texture_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTexture_Invoke_mBF7B2420DD599B736EFCB20B37A52431D9F7F4E0 (_SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB * __this, uint64_t ___ulOverlayHandle0, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * ___pTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pTexture1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTexture::BeginInvoke(System.UInt64,Valve.VR.Texture_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTexture_BeginInvoke_m66F72B1631803B3328AF234AF94FDD5ABCA2A33B (_SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB * __this, uint64_t ___ulOverlayHandle0, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * ___pTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTexture_BeginInvoke_m66F72B1631803B3328AF234AF94FDD5ABCA2A33B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6_il2cpp_TypeInfo_var, &*___pTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexture::EndInvoke(Valve.VR.Texture_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTexture_EndInvoke_mF3AA1E90F206572BF0C9351375E2DE4B2794493A (_SetOverlayTexture_tEC92A2875490CF5E50B738DF3EA52CF844E4DBEB * __this, Texture_t_tE21B3D0880093881A7DED8A00B1D0B1A962D8BA6 * ___pTexture0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pTexture0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 (_SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pOverlayTextureBounds1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTextureBounds::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTextureBounds__ctor_m1ADCE250DF7BE15D21D3F30B5141340ED6CEB24D (_SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureBounds::Invoke(System.UInt64,Valve.VR.VRTextureBounds_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureBounds_Invoke_mA8590D5E26EC4B8E994EDB2315A5EA18A7862BDC (_SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___pOverlayTextureBounds1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTextureBounds::BeginInvoke(System.UInt64,Valve.VR.VRTextureBounds_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTextureBounds_BeginInvoke_m7356831655501E50DD5C7604BD93E51A00FCE195 (_SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTextureBounds_BeginInvoke_m7356831655501E50DD5C7604BD93E51A00FCE195_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779_il2cpp_TypeInfo_var, &*___pOverlayTextureBounds1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureBounds::EndInvoke(Valve.VR.VRTextureBounds_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureBounds_EndInvoke_mF0F8CC8A678203ACF85832738FF113FDBF656650 (_SetOverlayTextureBounds_t176E6B3D23C74F0013E8B6D03C39276CCE59D8C4 * __this, VRTextureBounds_t_tCA2820CB638F8B6C480011D70D708F75632E1779 * ___pOverlayTextureBounds0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayTextureBounds0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 (_SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTextureColorSpace1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTextureColorSpace::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTextureColorSpace__ctor_m16328D34305C13B741BA3DDDFCA1869D9A75090D (_SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureColorSpace::Invoke(System.UInt64,Valve.VR.EColorSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureColorSpace_Invoke_mDFDA06A761B5891A96601A4C9780579A898D1E20 (_SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eTextureColorSpace1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTextureColorSpace::BeginInvoke(System.UInt64,Valve.VR.EColorSpace,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTextureColorSpace_BeginInvoke_mAC450FE53DD8BE60CB8C991435D53BC138EEF6C6 (_SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTextureColorSpace_BeginInvoke_mAC450FE53DD8BE60CB8C991435D53BC138EEF6C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(EColorSpace_t1ACDC1E7A320D28E1C96C785CFCF9810689E7448_il2cpp_TypeInfo_var, &___eTextureColorSpace1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureColorSpace::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureColorSpace_EndInvoke_m9992A3C358610454858DECB9C0171C15CEFF12E8 (_SetOverlayTextureColorSpace_tDA1317926E4550CF511AA7603453D7E58BDEBFC0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC (_SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformAbsolute::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTransformAbsolute__ctor_m67C569D9612ADFCCEA2F9B87CB9ED989C1FEC2EB (_SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformAbsolute::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformAbsolute_Invoke_m3BD9877CCBDBAA69F1EA81252A9883B78D840D83 (_SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformAbsolute::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformAbsolute_BeginInvoke_m2D7D649830AF55C7AD6DF47DBC972EAD7C2D6CAB (_SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformAbsolute_BeginInvoke_m2D7D649830AF55C7AD6DF47DBC972EAD7C2D6CAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var, &___eTrackingOrigin1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformAbsolute::EndInvoke(Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformAbsolute_EndInvoke_m2063690A92BE1092F6314F1F565490EC06644F94 (_SetOverlayTransformAbsolute_t3E9315E097C0C526574437808A273688CDB0A5AC * __this, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackingOriginToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackingOriginToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 (_SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTransformOverlayRelative__ctor_m989B4A19C0C893B0F3991CBFCBD4E63AD30F9CA6 (_SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::Invoke(System.UInt64,System.UInt64,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformOverlayRelative_Invoke_mF284574B9DED2FD2DF73EDF6891F0F143E781276 (_SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::BeginInvoke(System.UInt64,System.UInt64,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformOverlayRelative_BeginInvoke_m31BB4ECF00AAECD11F7E0EFF6A6D88EF2B26BED8 (_SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformOverlayRelative_BeginInvoke_m31BB4ECF00AAECD11F7E0EFF6A6D88EF2B26BED8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandleParent1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatParentOverlayToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::EndInvoke(Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformOverlayRelative_EndInvoke_mD1FD118953FA1EF3704D590C2D75C45B22ADB8CC (_SetOverlayTransformOverlayRelative_tC8D9FAA8CEC21956318E8711101C691BE2C63124 * __this, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatParentOverlayToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatParentOverlayToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB (_SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchComponentName2' to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string(___pchComponentName2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unDeviceIndex1, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter '___pchComponentName2' native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTransformTrackedDeviceComponent__ctor_m801FE76DCD0D420AFFE45D543AE4B672D52671C8 (_SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::Invoke(System.UInt64,System.UInt32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceComponent_Invoke_m61BE7F0E789E068EC8D3BBE117ED7E59817CB249 (_SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::BeginInvoke(System.UInt64,System.UInt32,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformTrackedDeviceComponent_BeginInvoke_mF00379E5B0E5956852287D70ED96004D298CC84A (_SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformTrackedDeviceComponent_BeginInvoke_mF00379E5B0E5956852287D70ED96004D298CC84A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDeviceIndex1);
	__d_args[2] = ___pchComponentName2;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceComponent_EndInvoke_mDADDDD3E186F825E41B4790A99FDD1EEFF343AB9 (_SetOverlayTransformTrackedDeviceComponent_t12D0FF332B14213D844756C09A0787DEE6CF10CB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F (_SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayTransformTrackedDeviceRelative__ctor_m5E7CA8FCAD899BC96557F13711D8218F0FA20525 (_SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::Invoke(System.UInt64,System.UInt32,Valve.VR.HmdMatrix34_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceRelative_Invoke_mCE88BEFC4BB6F0D6900974183339AAAE41A0FF63 (_SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					else
						result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::BeginInvoke(System.UInt64,System.UInt32,Valve.VR.HmdMatrix34_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m71927E2B1F9CAE058B9D49B8B5B90104161D1CA1 (_SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m71927E2B1F9CAE058B9D49B8B5B90104161D1CA1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unTrackedDevice1);
	__d_args[2] = Box(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669_il2cpp_TypeInfo_var, &*___pmatTrackedDeviceToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::EndInvoke(Valve.VR.HmdMatrix34_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceRelative_EndInvoke_m0F858526CB3404F78CAE9966B69EBDB27DD36527 (_SetOverlayTransformTrackedDeviceRelative_tF67067CF8016DE994899147E0D5DD5BBDD573F3F * __this, HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * ___pmatTrackedDeviceToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackedDeviceToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F (_SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fWidthInMeters1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayWidthInMeters::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetOverlayWidthInMeters__ctor_mFD4E34790D2F2139BB39A5B1156D738B4111B811 (_SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayWidthInMeters::Invoke(System.UInt64,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayWidthInMeters_Invoke_m3F558ED4567A1C0828570CC244AA8A6A467FDB26 (_SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
					else
						result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___fWidthInMeters1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayWidthInMeters::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayWidthInMeters_BeginInvoke_m38DF8589895C441B58B23C4C3D2621397AEC78E7 (_SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayWidthInMeters_BeginInvoke_m38DF8589895C441B58B23C4C3D2621397AEC78E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fWidthInMeters1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayWidthInMeters::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SetOverlayWidthInMeters_EndInvoke_m8E1792FF4D45CA1E417D9ACE091326CCB22F9431 (_SetOverlayWidthInMeters_t544CC5C25F894DA72F0CFB9B7859FFF50BA9000F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D (_ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D * __this, String_t* ___pchOverlayToShow0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchOverlayToShow0' to native representation
	char* ____pchOverlayToShow0_marshaled = NULL;
	____pchOverlayToShow0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayToShow0);

	// Native function invocation
	il2cppPInvokeFunc(____pchOverlayToShow0_marshaled);

	// Marshaling cleanup of parameter '___pchOverlayToShow0' native representation
	il2cpp_codegen_marshal_free(____pchOverlayToShow0_marshaled);
	____pchOverlayToShow0_marshaled = NULL;

}
// System.Void Valve.VR.IVROverlay__ShowDashboard::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowDashboard__ctor_mA2B9AFFDC44E18FCE20B02344C00C1B7F1A5B75D (_ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__ShowDashboard::Invoke(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowDashboard_Invoke_m46EFEFC6ADE132ED781DEF0CF706EAEDD0F17F1B (_ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D * __this, String_t* ___pchOverlayToShow0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayToShow0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayToShow0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
					else
						GenericVirtActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayToShow0);
					else
						VirtActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayToShow0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOverlayToShow0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowDashboard::BeginInvoke(System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ShowDashboard_BeginInvoke_mB4E4873E6B5EBB6D23A57ADAA29F0123C6E7FA17 (_ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D * __this, String_t* ___pchOverlayToShow0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___pchOverlayToShow0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVROverlay__ShowDashboard::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowDashboard_EndInvoke_m55A422CBF790633D0397DB58B3F2E0DED6413E7B (_ShowDashboard_t98D2052AAB1C7CEF3220EC26EF15E750F1D4258D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D (_ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, int32_t, char*, uint32_t, char*, int32_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchDescription2' to native representation
	char* ____pchDescription2_marshaled = NULL;
	____pchDescription2_marshaled = il2cpp_codegen_marshal_string(___pchDescription2);

	// Marshaling of parameter '___pchExistingText4' to native representation
	char* ____pchExistingText4_marshaled = NULL;
	____pchExistingText4_marshaled = il2cpp_codegen_marshal_string(___pchExistingText4);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eInputMode0, ___eLineInputMode1, ____pchDescription2_marshaled, ___unCharMax3, ____pchExistingText4_marshaled, static_cast<int32_t>(___bUseMinimalMode5), ___uUserValue6);

	// Marshaling cleanup of parameter '___pchDescription2' native representation
	il2cpp_codegen_marshal_free(____pchDescription2_marshaled);
	____pchDescription2_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchExistingText4' native representation
	il2cpp_codegen_marshal_free(____pchExistingText4_marshaled);
	____pchExistingText4_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowKeyboard::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowKeyboard__ctor_mB57D481E8DE89C0596A9741026652CBF1F7BEBC0 (_ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboard::Invoke(System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowKeyboard_Invoke_mF32251CAC213B436424DE4D86DD67D9B458E474C (_ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 7)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
					else
						result = GenericVirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
					else
						result = VirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___eInputMode0) - 1), ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowKeyboard::BeginInvoke(System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ShowKeyboard_BeginInvoke_m974C0B860A556AA69288FDBE6CBF13BA5AB15B93 (_ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback7, RuntimeObject * ___object8, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowKeyboard_BeginInvoke_m974C0B860A556AA69288FDBE6CBF13BA5AB15B93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[8] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eInputMode0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eLineInputMode1);
	__d_args[2] = ___pchDescription2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unCharMax3);
	__d_args[4] = ___pchExistingText4;
	__d_args[5] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bUseMinimalMode5);
	__d_args[6] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___uUserValue6);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback7, (RuntimeObject*)___object8);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboard::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowKeyboard_EndInvoke_mEA88100F9F87A5816DAC34017C0C4022FFF35C35 (_ShowKeyboard_t6435ED8345814EEF33A79714A5A39C3E6547522D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C (_ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t, char*, uint32_t, char*, int32_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchDescription3' to native representation
	char* ____pchDescription3_marshaled = NULL;
	____pchDescription3_marshaled = il2cpp_codegen_marshal_string(___pchDescription3);

	// Marshaling of parameter '___pchExistingText5' to native representation
	char* ____pchExistingText5_marshaled = NULL;
	____pchExistingText5_marshaled = il2cpp_codegen_marshal_string(___pchExistingText5);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ____pchDescription3_marshaled, ___unCharMax4, ____pchExistingText5_marshaled, static_cast<int32_t>(___bUseMinimalMode6), ___uUserValue7);

	// Marshaling cleanup of parameter '___pchDescription3' native representation
	il2cpp_codegen_marshal_free(____pchDescription3_marshaled);
	____pchDescription3_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchExistingText5' native representation
	il2cpp_codegen_marshal_free(____pchExistingText5_marshaled);
	____pchExistingText5_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowKeyboardForOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowKeyboardForOverlay__ctor_mFFC17D66D76FA6C5AA23F80C433A371111FB968E (_ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboardForOverlay::Invoke(System.UInt64,System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowKeyboardForOverlay_Invoke_mF59A4E036091B87246E755E6D33AC029643B806C (_ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 8)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
					else
						result = GenericVirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
					else
						result = VirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowKeyboardForOverlay::BeginInvoke(System.UInt64,System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ShowKeyboardForOverlay_BeginInvoke_mE2EC4790CFEF1307E2DD1ABA721E228F53FB7F8D (_ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback8, RuntimeObject * ___object9, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowKeyboardForOverlay_BeginInvoke_mE2EC4790CFEF1307E2DD1ABA721E228F53FB7F8D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[9] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eInputMode1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eLineInputMode2);
	__d_args[3] = ___pchDescription3;
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unCharMax4);
	__d_args[5] = ___pchExistingText5;
	__d_args[6] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bUseMinimalMode6);
	__d_args[7] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___uUserValue7);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback8, (RuntimeObject*)___object9);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboardForOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowKeyboardForOverlay_EndInvoke_m4F097F406846C4DAFBBCAD2AE841F6DC83DC324A (_ShowKeyboardForOverlay_tB7EDADED996C8388EDFC62312C6EA45E284A9E0C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B (_ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, char*, char*, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchText0' to native representation
	char* ____pchText0_marshaled = NULL;
	____pchText0_marshaled = il2cpp_codegen_marshal_string(___pchText0);

	// Marshaling of parameter '___pchCaption1' to native representation
	char* ____pchCaption1_marshaled = NULL;
	____pchCaption1_marshaled = il2cpp_codegen_marshal_string(___pchCaption1);

	// Marshaling of parameter '___pchButton0Text2' to native representation
	char* ____pchButton0Text2_marshaled = NULL;
	____pchButton0Text2_marshaled = il2cpp_codegen_marshal_string(___pchButton0Text2);

	// Marshaling of parameter '___pchButton1Text3' to native representation
	char* ____pchButton1Text3_marshaled = NULL;
	____pchButton1Text3_marshaled = il2cpp_codegen_marshal_string(___pchButton1Text3);

	// Marshaling of parameter '___pchButton2Text4' to native representation
	char* ____pchButton2Text4_marshaled = NULL;
	____pchButton2Text4_marshaled = il2cpp_codegen_marshal_string(___pchButton2Text4);

	// Marshaling of parameter '___pchButton3Text5' to native representation
	char* ____pchButton3Text5_marshaled = NULL;
	____pchButton3Text5_marshaled = il2cpp_codegen_marshal_string(___pchButton3Text5);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchText0_marshaled, ____pchCaption1_marshaled, ____pchButton0Text2_marshaled, ____pchButton1Text3_marshaled, ____pchButton2Text4_marshaled, ____pchButton3Text5_marshaled);

	// Marshaling cleanup of parameter '___pchText0' native representation
	il2cpp_codegen_marshal_free(____pchText0_marshaled);
	____pchText0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchCaption1' native representation
	il2cpp_codegen_marshal_free(____pchCaption1_marshaled);
	____pchCaption1_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchButton0Text2' native representation
	il2cpp_codegen_marshal_free(____pchButton0Text2_marshaled);
	____pchButton0Text2_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchButton1Text3' native representation
	il2cpp_codegen_marshal_free(____pchButton1Text3_marshaled);
	____pchButton1Text3_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchButton2Text4' native representation
	il2cpp_codegen_marshal_free(____pchButton2Text4_marshaled);
	____pchButton2Text4_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchButton3Text5' native representation
	il2cpp_codegen_marshal_free(____pchButton3Text5_marshaled);
	____pchButton3Text5_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowMessageOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowMessageOverlay__ctor_m415FAF43E6ECD5FB31F931204EAD6F19D5A2403C (_ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.VRMessageOverlayResponse Valve.VR.IVROverlay__ShowMessageOverlay::Invoke(System.String,System.String,System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowMessageOverlay_Invoke_m99EBF82310CAF4C83A33E8BC30DC7C15738E832A (_ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
		}
		else if (___parameterCount != 6)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					else
						result = GenericVirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					else
						result = VirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchCaption1) - 1), ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					else
						result = GenericVirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					else
						result = VirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchText0) - 1), ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowMessageOverlay::BeginInvoke(System.String,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ShowMessageOverlay_BeginInvoke_mD9D6F31CB2B3FA78C0E06C799730790696CBF608 (_ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	void *__d_args[7] = {0};
	__d_args[0] = ___pchText0;
	__d_args[1] = ___pchCaption1;
	__d_args[2] = ___pchButton0Text2;
	__d_args[3] = ___pchButton1Text3;
	__d_args[4] = ___pchButton2Text4;
	__d_args[5] = ___pchButton3Text5;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// Valve.VR.VRMessageOverlayResponse Valve.VR.IVROverlay__ShowMessageOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowMessageOverlay_EndInvoke_mEB9842C18C2E0ADDE4C4BB7FFCDCBCAA8E196014 (_ShowMessageOverlay_t6A142B93574D3FD8694156ED46A77938BBCF899B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 (_ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowOverlay::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _ShowOverlay__ctor_m2610FEF1566302139B2134256DBD53B280695952 (_ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowOverlay::Invoke(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowOverlay_Invoke_m20B15A95A64E66FC622306F3F95969E292ECE99F (_ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
					else
						result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___ulOverlayHandle0) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _ShowOverlay_BeginInvoke_mBB1A7366A7CA38B52B6736C3A78FBA1639292DCC (_ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowOverlay_BeginInvoke_mBB1A7366A7CA38B52B6736C3A78FBA1639292DCC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowOverlay::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _ShowOverlay_EndInvoke_m32A3A6B74C6B0A96AFB14A499763D69D6537DC7F (_ShowOverlay_t009DFD225D03C2A6407C26719368999B0E64FFD5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRRenderModels
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_pinvoke(const IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25& unmarshaled, IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_pinvoke& marshaled)
{
	marshaled.___LoadRenderModel_Async_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadRenderModel_Async_0()));
	marshaled.___FreeRenderModel_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeRenderModel_1()));
	marshaled.___LoadTexture_Async_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTexture_Async_2()));
	marshaled.___FreeTexture_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTexture_3()));
	marshaled.___LoadTextureD3D11_Async_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTextureD3D11_Async_4()));
	marshaled.___LoadIntoTextureD3D11_Async_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadIntoTextureD3D11_Async_5()));
	marshaled.___FreeTextureD3D11_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTextureD3D11_6()));
	marshaled.___GetRenderModelName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelName_7()));
	marshaled.___GetRenderModelCount_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelCount_8()));
	marshaled.___GetComponentCount_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentCount_9()));
	marshaled.___GetComponentName_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentName_10()));
	marshaled.___GetComponentButtonMask_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentButtonMask_11()));
	marshaled.___GetComponentRenderModelName_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentRenderModelName_12()));
	marshaled.___GetComponentStateForDevicePath_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentStateForDevicePath_13()));
	marshaled.___GetComponentState_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentState_14()));
	marshaled.___RenderModelHasComponent_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RenderModelHasComponent_15()));
	marshaled.___GetRenderModelThumbnailURL_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelThumbnailURL_16()));
	marshaled.___GetRenderModelOriginalPath_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelOriginalPath_17()));
	marshaled.___GetRenderModelErrorNameFromEnum_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelErrorNameFromEnum_18()));
}
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_pinvoke_back(const IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_pinvoke& marshaled, IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadRenderModel_Async_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69>(marshaled.___LoadRenderModel_Async_0, _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeRenderModel_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2>(marshaled.___FreeRenderModel_1, _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTexture_Async_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5>(marshaled.___LoadTexture_Async_2, _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTexture_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF>(marshaled.___FreeTexture_3, _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTextureD3D11_Async_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470>(marshaled.___LoadTextureD3D11_Async_4, _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadIntoTextureD3D11_Async_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1>(marshaled.___LoadIntoTextureD3D11_Async_5, _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTextureD3D11_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0>(marshaled.___FreeTextureD3D11_6, _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8>(marshaled.___GetRenderModelName_7, _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelCount_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596>(marshaled.___GetRenderModelCount_8, _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentCount_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32>(marshaled.___GetComponentCount_9, _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentName_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA>(marshaled.___GetComponentName_10, _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentButtonMask_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE>(marshaled.___GetComponentButtonMask_11, _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentRenderModelName_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3>(marshaled.___GetComponentRenderModelName_12, _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentStateForDevicePath_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582>(marshaled.___GetComponentStateForDevicePath_13, _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentState_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B>(marshaled.___GetComponentState_14, _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B_il2cpp_TypeInfo_var));
	unmarshaled.set_RenderModelHasComponent_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0>(marshaled.___RenderModelHasComponent_15, _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelThumbnailURL_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE>(marshaled.___GetRenderModelThumbnailURL_16, _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelOriginalPath_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF>(marshaled.___GetRenderModelOriginalPath_17, _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelErrorNameFromEnum_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B>(marshaled.___GetRenderModelErrorNameFromEnum_18, _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRRenderModels
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_pinvoke_cleanup(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRRenderModels
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_com(const IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25& unmarshaled, IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_com& marshaled)
{
	marshaled.___LoadRenderModel_Async_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadRenderModel_Async_0()));
	marshaled.___FreeRenderModel_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeRenderModel_1()));
	marshaled.___LoadTexture_Async_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTexture_Async_2()));
	marshaled.___FreeTexture_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTexture_3()));
	marshaled.___LoadTextureD3D11_Async_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTextureD3D11_Async_4()));
	marshaled.___LoadIntoTextureD3D11_Async_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadIntoTextureD3D11_Async_5()));
	marshaled.___FreeTextureD3D11_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTextureD3D11_6()));
	marshaled.___GetRenderModelName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelName_7()));
	marshaled.___GetRenderModelCount_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelCount_8()));
	marshaled.___GetComponentCount_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentCount_9()));
	marshaled.___GetComponentName_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentName_10()));
	marshaled.___GetComponentButtonMask_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentButtonMask_11()));
	marshaled.___GetComponentRenderModelName_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentRenderModelName_12()));
	marshaled.___GetComponentStateForDevicePath_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentStateForDevicePath_13()));
	marshaled.___GetComponentState_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentState_14()));
	marshaled.___RenderModelHasComponent_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RenderModelHasComponent_15()));
	marshaled.___GetRenderModelThumbnailURL_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelThumbnailURL_16()));
	marshaled.___GetRenderModelOriginalPath_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelOriginalPath_17()));
	marshaled.___GetRenderModelErrorNameFromEnum_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelErrorNameFromEnum_18()));
}
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_com_back(const IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_com& marshaled, IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadRenderModel_Async_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69>(marshaled.___LoadRenderModel_Async_0, _LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeRenderModel_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2>(marshaled.___FreeRenderModel_1, _FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTexture_Async_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5>(marshaled.___LoadTexture_Async_2, _LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTexture_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF>(marshaled.___FreeTexture_3, _FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTextureD3D11_Async_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470>(marshaled.___LoadTextureD3D11_Async_4, _LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadIntoTextureD3D11_Async_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1>(marshaled.___LoadIntoTextureD3D11_Async_5, _LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTextureD3D11_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0>(marshaled.___FreeTextureD3D11_6, _FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8>(marshaled.___GetRenderModelName_7, _GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelCount_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596>(marshaled.___GetRenderModelCount_8, _GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentCount_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32>(marshaled.___GetComponentCount_9, _GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentName_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA>(marshaled.___GetComponentName_10, _GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentButtonMask_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE>(marshaled.___GetComponentButtonMask_11, _GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentRenderModelName_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3>(marshaled.___GetComponentRenderModelName_12, _GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentStateForDevicePath_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582>(marshaled.___GetComponentStateForDevicePath_13, _GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentState_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B>(marshaled.___GetComponentState_14, _GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B_il2cpp_TypeInfo_var));
	unmarshaled.set_RenderModelHasComponent_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0>(marshaled.___RenderModelHasComponent_15, _RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelThumbnailURL_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE>(marshaled.___GetRenderModelThumbnailURL_16, _GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelOriginalPath_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF>(marshaled.___GetRenderModelOriginalPath_17, _GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelErrorNameFromEnum_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B>(marshaled.___GetRenderModelErrorNameFromEnum_18, _GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRRenderModels
IL2CPP_EXTERN_C void IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshal_com_cleanup(IVRRenderModels_tF0FBFCA1974CFB0715C773193C5D6937F2B42C25_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 (_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * __this, intptr_t ___pRenderModel0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pRenderModel0);

}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeRenderModel__ctor_m45AAE75953C80BA46BF9D4BE5A1FF951A615F33B (_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::Invoke(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeRenderModel_Invoke_mE6CD900DC3CD300F7BE402861B9A2612D4EEC8EF (_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * __this, intptr_t ___pRenderModel0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
					else
						GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderModel0);
					else
						VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderModel0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___pRenderModel0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeRenderModel::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _FreeRenderModel_BeginInvoke_mB495C71312FBDA182EE697B65330F6F28B3B2942 (_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * __this, intptr_t ___pRenderModel0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeRenderModel_BeginInvoke_mB495C71312FBDA182EE697B65330F6F28B3B2942_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pRenderModel0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeRenderModel_EndInvoke_m1B70CDE7D8D71F15D21B471AA4B650BD50D5A2D2 (_FreeRenderModel_tE88A06C13DB6C198903E33059AD304C9381C51F2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF (_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * __this, intptr_t ___pTexture0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pTexture0);

}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTexture__ctor_m1A7683243FFFA57550DF4C63734F2834C94061CB (_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::Invoke(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTexture_Invoke_mFE5DDD4B116FF2685ACD320E59959FE43A626455 (_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * __this, intptr_t ___pTexture0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
					else
						GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTexture0);
					else
						VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTexture0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___pTexture0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeTexture::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _FreeTexture_BeginInvoke_mB05E73C55AF1AD30DDED3504235C36CDA7B730E1 (_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * __this, intptr_t ___pTexture0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeTexture_BeginInvoke_mB05E73C55AF1AD30DDED3504235C36CDA7B730E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pTexture0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTexture_EndInvoke_m3439C516B2D8CCD35F334EC0DAB11ABA8C9F5716 (_FreeTexture_t66AAE47E6F522FD25ED2A4F2C1839B56F2521DCF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 (_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * __this, intptr_t ___pD3D11Texture2D0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pD3D11Texture2D0);

}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTextureD3D11__ctor_m5B88D70224A95DE00C7FBC3A316EAF481EFCFEA1 (_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::Invoke(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTextureD3D11_Invoke_m2A96583FDC0550F29C94C0C105B491BC76ADE21D (_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * __this, intptr_t ___pD3D11Texture2D0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
					else
						GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pD3D11Texture2D0);
					else
						VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pD3D11Texture2D0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___pD3D11Texture2D0) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeTextureD3D11::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _FreeTextureD3D11_BeginInvoke_m743DA408154C2635D8B94D14B942AFA1713393D4 (_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * __this, intptr_t ___pD3D11Texture2D0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeTextureD3D11_BeginInvoke_m743DA408154C2635D8B94D14B942AFA1713393D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11Texture2D0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _FreeTextureD3D11_EndInvoke_m16B2C6FF79AC1A70900C11BB171F0527C39AF5B6 (_FreeTextureD3D11_t421C6F8E4BBC8C12557392D50274FF44784674B0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint64_t DelegatePInvokeWrapper__GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE (_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	typedef uint64_t (STDCALL *PInvokeFunc)(char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName1' to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	uint64_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchComponentName1' native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentButtonMask::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentButtonMask__ctor_mEBCA8A2A884C860AAF0CE38BA6E89B2483237CBB (_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt64 Valve.VR.IVRRenderModels__GetComponentButtonMask::Invoke(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t _GetComponentButtonMask_Invoke_m571B280537D1EA822B963BA885550919A8D3D7C8 (_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	uint64_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
			else
			{
				// closed
				typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = GenericVirtFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
					else
						result = VirtFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint64_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchComponentName1) - 1), targetMethod);
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = GenericVirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = VirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint64_t (*FunctionPointerType) (RuntimeObject*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchComponentName1, targetMethod);
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentButtonMask::BeginInvoke(System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentButtonMask_BeginInvoke_m4F247116259857DF4BAA6439AA2257CAF9668288 (_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt64 Valve.VR.IVRRenderModels__GetComponentButtonMask::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t _GetComponentButtonMask_EndInvoke_m530E91478FB5E35F250D172F7F92C37B783F5FCF (_GetComponentButtonMask_t74284BEB7AD8BBD46940DA320DF74413919355EE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint64_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 (_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * __this, String_t* ___pchRenderModelName0, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentCount::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentCount__ctor_m6ADE8D9DA0B5755CF2718B3D5AC3D708A940F0D1 (_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentCount::Invoke(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentCount_Invoke_m16BF45AF70D8D276792F10821C672FBFC94214DE (_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * __this, String_t* ___pchRenderModelName0, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
					else
						result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0);
					else
						result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0);
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
					else
						result = GenericVirtFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0);
					else
						result = VirtFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentCount::BeginInvoke(System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentCount_BeginInvoke_m2D67C6A867C58549497AA6DA10DA96E595B2A5FB (_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * __this, String_t* ___pchRenderModelName0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___pchRenderModelName0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentCount::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentCount_EndInvoke_mED5B97B600C103114E673A6A11C7A66A34B2CCCE (_GetComponentCount_tCFCEA5E23A542EFE29EF509C7C4C3985D3F9FC32 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA (_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, uint32_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName2' to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentName2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ___unComponentIndex1, ____pchComponentName2_marshaled, ___unComponentNameLen3);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter '___pchComponentName2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentName2, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter '___pchComponentName2' native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentName::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentName__ctor_m4B9C74253E6C04AD18A505C697511870A9994D5E (_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentName::Invoke(System.String,System.UInt32,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentName_Invoke_m76B176E7C52C3FA53D0F522AD7306D02A8F71744 (_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					else
						result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					else
						result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___unComponentIndex1) - 1), ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					else
						result = VirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentName::BeginInvoke(System.String,System.UInt32,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentName_BeginInvoke_mF762FCB5F4656A0C673378FB800E7314AE4E3E26 (_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentName_BeginInvoke_mF762FCB5F4656A0C673378FB800E7314AE4E3E26_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentIndex1);
	__d_args[2] = ___pchComponentName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentNameLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentName::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentName_EndInvoke_m64E498D7D6D49BAD73558068E45826835D6D25D2 (_GetComponentName_t1240D7D85AAB6ED36C963A5772F810C56550ABCA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 (_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName1' to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Marshaling of parameter '___pchComponentRenderModelName2' to native representation
	char* ____pchComponentRenderModelName2_marshaled = NULL;
	____pchComponentRenderModelName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentRenderModelName2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled, ____pchComponentRenderModelName2_marshaled, ___unComponentRenderModelNameLen3);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchComponentName1' native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	// Marshaling of parameter '___pchComponentRenderModelName2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentRenderModelName2, ____pchComponentRenderModelName2_marshaled);

	// Marshaling cleanup of parameter '___pchComponentRenderModelName2' native representation
	il2cpp_codegen_marshal_free(____pchComponentRenderModelName2_marshaled);
	____pchComponentRenderModelName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentRenderModelName::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentRenderModelName__ctor_m0D7098E5A24A617B53AF52A0CC1706197A28B086 (_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentRenderModelName::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentRenderModelName_Invoke_m035BC5158C8CD71F4BB8A0EDF703ED0089DA6EF8 (_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					else
						result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					else
						result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchComponentName1) - 1), ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					else
						result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentRenderModelName::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentRenderModelName_BeginInvoke_m972B5C9FC4420EC4E3E532CD8C6F68A0164ADD54 (_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentRenderModelName_BeginInvoke_m972B5C9FC4420EC4E3E532CD8C6F68A0164ADD54_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	__d_args[2] = ___pchComponentRenderModelName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentRenderModelNameLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentRenderModelName::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetComponentRenderModelName_EndInvoke_mD787CD05BF3DD41F3CB2B321AF13E8A0E8A0924C (_GetComponentRenderModelName_t07F89FE763351F213F69513329064E99767AA2B3 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B (_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 * ___pControllerState2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName1' to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled, ___pControllerState2, ___pState3, ___pComponentState4);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchComponentName1' native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRRenderModels__GetComponentState::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentState__ctor_m8ABD7CF71E705C2FE482EBE36AB58F9B6A033829 (_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentState::Invoke(System.String,System.String,Valve.VR.VRControllerState_t&,Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetComponentState_Invoke_mC9895CC19E028DD7D6EFFAB9F08CB1AEBEDECC13 (_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 * ___pControllerState2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
		}
		else if (___parameterCount != 5)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					else
						result = GenericVirtFuncInvoker4< bool, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					else
						result = VirtFuncInvoker4< bool, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchComponentName1) - 1), ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					else
						result = GenericVirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					else
						result = VirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 *, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentState::BeginInvoke(System.String,System.String,Valve.VR.VRControllerState_t&,Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentState_BeginInvoke_mFF95FD86AE6DF58714A20C92A21FE4560645FE84 (_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 * ___pControllerState2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentState_BeginInvoke_mFF95FD86AE6DF58714A20C92A21FE4560645FE84_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	__d_args[2] = Box(VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1_il2cpp_TypeInfo_var, &*___pControllerState2);
	__d_args[3] = Box(RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767_il2cpp_TypeInfo_var, &*___pState3);
	__d_args[4] = Box(RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F_il2cpp_TypeInfo_var, &*___pComponentState4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentState::EndInvoke(Valve.VR.VRControllerState_t&,Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetComponentState_EndInvoke_m996EA60880FF6EFC9820C34D0041434A051721D6 (_GetComponentState_t9FE92CB11D43397FB303E65D9E037389197BF17B * __this, VRControllerState_t_t7DA56F805D6286AD969A09E744E8C241976038F1 * ___pControllerState0, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState1, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pControllerState0,
	___pState1,
	___pComponentState2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 (_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, uint64_t ___devicePath2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName1' to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled, ___devicePath2, ___pState3, ___pComponentState4);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchComponentName1' native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRRenderModels__GetComponentStateForDevicePath::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetComponentStateForDevicePath__ctor_m75B59AA4F36B2E702528BE50FCF821F1989EB04E (_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentStateForDevicePath::Invoke(System.String,System.String,System.UInt64,Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetComponentStateForDevicePath_Invoke_m823512B0885921848552BAA03FD908CBA721CAC0 (_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, uint64_t ___devicePath2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
			}
		}
		else if (___parameterCount != 5)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< bool, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
					else
						result = GenericVirtFuncInvoker4< bool, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< bool, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
					else
						result = VirtFuncInvoker4< bool, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchComponentName1) - 1), ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< bool, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
					else
						result = GenericVirtFuncInvoker5< bool, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< bool, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
					else
						result = VirtFuncInvoker5< bool, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 *, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___devicePath2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentStateForDevicePath::BeginInvoke(System.String,System.String,System.UInt64,Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentStateForDevicePath_BeginInvoke_m681F02C7E2C21B593978406C9E84244B9DC70050 (_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, uint64_t ___devicePath2, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState3, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentStateForDevicePath_BeginInvoke_m681F02C7E2C21B593978406C9E84244B9DC70050_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___devicePath2);
	__d_args[3] = Box(RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767_il2cpp_TypeInfo_var, &*___pState3);
	__d_args[4] = Box(RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F_il2cpp_TypeInfo_var, &*___pComponentState4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentStateForDevicePath::EndInvoke(Valve.VR.RenderModel_ControllerMode_State_t&,Valve.VR.RenderModel_ComponentState_t&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetComponentStateForDevicePath_EndInvoke_mC35B68A9C13C1B65B3590C55FDE0D6450EBD1673 (_GetComponentStateForDevicePath_t8903BE3AED3FE3133C64B1D2B9FCEF56C316C582 * __this, RenderModel_ControllerMode_State_t_t760982BADF9C6C41903EC4558AA46079358E2767 * ___pState0, RenderModel_ComponentState_t_tFB0C23F0D4373794417EE350C6AE18B00CCE645F * ___pComponentState1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pState0,
	___pComponentState1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 (_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelCount::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetRenderModelCount__ctor_m96BAEC9FE6EE3CEE04F4EC44C43909FAF18927A4 (_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelCount::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelCount_Invoke_mECDE816B0FF3E824649074706929946384DE26EB (_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					else
						result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelCount::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelCount_BeginInvoke_mB827EA2702D9F604193B60B2E3AC833629B3FE42 (_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelCount::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelCount_EndInvoke_mB64EB8057A43A24A34FE3EF846734097A79B2895 (_GetRenderModelCount_t26E91C58144E507FB2EE66A8FB807D9366F6D596 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  intptr_t DelegatePInvokeWrapper__GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B (_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * __this, int32_t ___error0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___error0);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetRenderModelErrorNameFromEnum__ctor_mFC8C642C0FCA5F29B0BF7E44DD0BD23886E2B543 (_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::Invoke(Valve.VR.EVRRenderModelError)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetRenderModelErrorNameFromEnum_Invoke_m1D7BC12180B81BCC7F0870B0137AEBFC5829B3C9 (_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * __this, int32_t ___error0, const RuntimeMethod* method)
{
	intptr_t result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
					else
						result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
					else
						result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef intptr_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___error0) - 1), targetMethod);
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::BeginInvoke(Valve.VR.EVRRenderModelError,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelErrorNameFromEnum_BeginInvoke_m8B0BB8811D503842CBFA29985594909DF2BDF1A2 (_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * __this, int32_t ___error0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelErrorNameFromEnum_BeginInvoke_m8B0BB8811D503842CBFA29985594909DF2BDF1A2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626_il2cpp_TypeInfo_var, &___error0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetRenderModelErrorNameFromEnum_EndInvoke_m7FEA8C2911F419D4CCB1068C89898D90AAAB474E (_GetRenderModelErrorNameFromEnum_t69987C2DDA1161B5AD206A2E634F97D65BF4E46B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 (_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint32_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName1' to native representation
	char* ____pchRenderModelName1_marshaled = NULL;
	____pchRenderModelName1_marshaled = il2cpp_codegen_marshal_string_builder(___pchRenderModelName1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___unRenderModelIndex0, ____pchRenderModelName1_marshaled, ___unRenderModelNameLen2);

	// Marshaling of parameter '___pchRenderModelName1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchRenderModelName1, ____pchRenderModelName1_marshaled);

	// Marshaling cleanup of parameter '___pchRenderModelName1' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName1_marshaled);
	____pchRenderModelName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelName::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetRenderModelName__ctor_m0DC1499CED1188B97BD978ABAA44BD662E023009 (_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelName::Invoke(System.UInt32,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelName_Invoke_m1C57DEA526C4F2C91769B59F16846BBC7656CB0E (_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
					else
						result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
					else
						result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___unRenderModelIndex0) - 1), ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelName::BeginInvoke(System.UInt32,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelName_BeginInvoke_mE9ED1BE3CA883EA3EC9FA116C4B4A9AB001AF7B5 (_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelName_BeginInvoke_mE9ED1BE3CA883EA3EC9FA116C4B4A9AB001AF7B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderModelIndex0);
	__d_args[1] = ___pchRenderModelName1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderModelNameLen2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelName::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelName_EndInvoke_m295FADC72907B93BC98ACE60DD51C2DB5DD0390B (_GetRenderModelName_tC313EBED2733088FE9324E22B456EED9285E3BE8 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF (_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchOriginalPath1' to native representation
	char* ____pchOriginalPath1_marshaled = NULL;
	____pchOriginalPath1_marshaled = il2cpp_codegen_marshal_string_builder(___pchOriginalPath1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchOriginalPath1_marshaled, ___unOriginalPathLen2, ___peError3);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter '___pchOriginalPath1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchOriginalPath1, ____pchOriginalPath1_marshaled);

	// Marshaling cleanup of parameter '___pchOriginalPath1' native representation
	il2cpp_codegen_marshal_free(____pchOriginalPath1_marshaled);
	____pchOriginalPath1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetRenderModelOriginalPath__ctor_m1B6B34FF2E94DE2A844730EAF4EAF63C6F82396D (_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::Invoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelOriginalPath_Invoke_m5259C2084735AE89F805D5555231F59F340B83E3 (_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					else
						result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					else
						result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchOriginalPath1) - 1), ___unOriginalPathLen2, ___peError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					else
						result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::BeginInvoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelOriginalPath_BeginInvoke_m337BF301783BF9E47E71C9E292FB07DF36E78B1B (_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelOriginalPath_BeginInvoke_m337BF301783BF9E47E71C9E292FB07DF36E78B1B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchOriginalPath1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unOriginalPathLen2);
	__d_args[3] = Box(EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::EndInvoke(Valve.VR.EVRRenderModelError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelOriginalPath_EndInvoke_m062FA6CCF9ED0A3376C5178D458B5AC73987E7BD (_GetRenderModelOriginalPath_t7C0A669065DE9EF792639859A836D15C4BB9C9AF * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE (_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchThumbnailURL1' to native representation
	char* ____pchThumbnailURL1_marshaled = NULL;
	____pchThumbnailURL1_marshaled = il2cpp_codegen_marshal_string_builder(___pchThumbnailURL1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchThumbnailURL1_marshaled, ___unThumbnailURLLen2, ___peError3);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter '___pchThumbnailURL1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchThumbnailURL1, ____pchThumbnailURL1_marshaled);

	// Marshaling cleanup of parameter '___pchThumbnailURL1' native representation
	il2cpp_codegen_marshal_free(____pchThumbnailURL1_marshaled);
	____pchThumbnailURL1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetRenderModelThumbnailURL__ctor_mCA1E3158E184B0C7C24442DDC03AEFBA717F031E (_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::Invoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelThumbnailURL_Invoke_mAED6FEDF6C4EA16EEF1E8017F659003331FD87AF (_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					else
						result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					else
						result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchThumbnailURL1) - 1), ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					else
						result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::BeginInvoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelThumbnailURL_BeginInvoke_m67D2E5A94AF4862E78ED98EC92CFCC88F3641A3F (_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelThumbnailURL_BeginInvoke_m67D2E5A94AF4862E78ED98EC92CFCC88F3641A3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchThumbnailURL1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unThumbnailURLLen2);
	__d_args[3] = Box(EVRRenderModelError_t3AC1AB2894EB91CF04806F802BBDB110992E2626_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::EndInvoke(Valve.VR.EVRRenderModelError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetRenderModelThumbnailURL_EndInvoke_m7F6B74211C4B212501ACEAF20F5975FF9DD8F36E (_GetRenderModelThumbnailURL_t610A8AC10F9750D55265331A1FC5DC2AD6CDAECE * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 (_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___pDstTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _LoadIntoTextureD3D11_Async__ctor_m494FE3160BC8BBD1F72AF0D1BD230A87B4CA3798 (_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::Invoke(System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadIntoTextureD3D11_Async_Invoke_m2355CAB3127A5DE07FBDA1E58F29E899ED028738 (_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
					else
						result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
					else
						result = VirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___textureId0) - 1), ___pDstTexture1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::BeginInvoke(System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _LoadIntoTextureD3D11_Async_BeginInvoke_mC9F3348B8F5779B89AAFFA5BF1BB515E94B9F98D (_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadIntoTextureD3D11_Async_BeginInvoke_mC9F3348B8F5779B89AAFFA5BF1BB515E94B9F98D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pDstTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadIntoTextureD3D11_Async_EndInvoke_m0AFB7E91EC1BBF67D90E24B54FAE750F7E746B67 (_LoadIntoTextureD3D11_Async_t5D286A08FF52D75C7787E6C25205CF765B2BC4B1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 (_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ___ppRenderModel1);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadRenderModel_Async::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _LoadRenderModel_Async__ctor_mCF4BCDF31432EA789B5E07A31F182B965EF187E9 (_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadRenderModel_Async::Invoke(System.String,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadRenderModel_Async_Invoke_mFF96FFBF0D9EE7D2B3440F28ED32597741330660 (_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
					else
						result = GenericVirtFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
					else
						result = VirtFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___ppRenderModel1) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
					else
						result = GenericVirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
					else
						result = VirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___ppRenderModel1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadRenderModel_Async::BeginInvoke(System.String,System.IntPtr&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _LoadRenderModel_Async_BeginInvoke_m3209521234765ABEEA94CA75DC488A5948FFF93C (_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadRenderModel_Async_BeginInvoke_m3209521234765ABEEA94CA75DC488A5948FFF93C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppRenderModel1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadRenderModel_Async::EndInvoke(System.IntPtr&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadRenderModel_Async_EndInvoke_m7F7F039231C88DE2FDBF3C5703FE5148DC0813A2 (_LoadRenderModel_Async_tE3421B76939A25884C1F8AAAA3A7E4114F0ECE69 * __this, intptr_t* ___ppRenderModel0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppRenderModel0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 (_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _LoadTextureD3D11_Async__ctor_mE3B4BA3F500385DBB09447EFB75E8CF233686C76 (_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::Invoke(System.Int32,System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadTextureD3D11_Async_Invoke_m0ECC6D5DE96EBDA16BF674C96E8493BDF2AB8127 (_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
					else
						result = GenericVirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
					else
						result = VirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___textureId0) - 1), ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::BeginInvoke(System.Int32,System.IntPtr,System.IntPtr&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _LoadTextureD3D11_Async_BeginInvoke_m2BC821343222E7A991713078136236E0C8C330FB (_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadTextureD3D11_Async_BeginInvoke_m2BC821343222E7A991713078136236E0C8C330FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11Device1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppD3D11Texture2D2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::EndInvoke(System.IntPtr&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadTextureD3D11_Async_EndInvoke_m36171DB32894DF5CC5BE22B7B19A98695869A21E (_LoadTextureD3D11_Async_tA4A2BD4B71ED3105300F4A577E83607279FDE470 * __this, intptr_t* ___ppD3D11Texture2D0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppD3D11Texture2D0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 (_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___ppTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadTexture_Async::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _LoadTexture_Async__ctor_m1A8EA5F744BE632B1F9FAAD01F54292B464A6E1D (_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTexture_Async::Invoke(System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadTexture_Async_Invoke_m7AE85ACE0B872BD5EFDA3E01189E62997F90ECE9 (_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
					else
						result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___ppTexture1);
					else
						result = VirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___ppTexture1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___textureId0) - 1), ___ppTexture1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadTexture_Async::BeginInvoke(System.Int32,System.IntPtr&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _LoadTexture_Async_BeginInvoke_m435CF6AF9F81AA8ED743BCA9A1BFC9072C52F7C1 (_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadTexture_Async_BeginInvoke_m435CF6AF9F81AA8ED743BCA9A1BFC9072C52F7C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTexture_Async::EndInvoke(System.IntPtr&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _LoadTexture_Async_EndInvoke_m581A11AF91ADCCCC941A4E45EDE80F4F6A9D1AB3 (_LoadTexture_Async_tE6A4A1798EC9AC222F0FC770802BBF73ED7B48E5 * __this, intptr_t* ___ppTexture0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppTexture0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 (_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchRenderModelName0' to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter '___pchComponentName1' to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled);

	// Marshaling cleanup of parameter '___pchRenderModelName0' native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchComponentName1' native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRRenderModels__RenderModelHasComponent::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RenderModelHasComponent__ctor_m1B801DE05E0FA978C52AB3A392FECA8B6A047541 (_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRRenderModels__RenderModelHasComponent::Invoke(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _RenderModelHasComponent_Invoke_mED615762CD1BBCFE4035420DA51B488F5A451304 (_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = GenericVirtFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
					else
						result = VirtFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchComponentName1) - 1), targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = GenericVirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
					else
						result = VirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchRenderModelName0) - 1), ___pchComponentName1, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__RenderModelHasComponent::BeginInvoke(System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _RenderModelHasComponent_BeginInvoke_mAC21D4B45047054A4435D4BCC2ADF02D8947822E (_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRRenderModels__RenderModelHasComponent::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _RenderModelHasComponent_EndInvoke_mFCF98D49A86F68F83FA267CAB9E23E09A6B0AED6 (_RenderModelHasComponent_t752A6E5A2A4B7E669AE2E54CB4013DA8729AE4A0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRResources
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_pinvoke(const IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C& unmarshaled, IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_pinvoke& marshaled)
{
	marshaled.___LoadSharedResource_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadSharedResource_0()));
	marshaled.___GetResourceFullPath_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetResourceFullPath_1()));
}
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_pinvoke_back(const IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_pinvoke& marshaled, IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadSharedResource_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D>(marshaled.___LoadSharedResource_0, _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetResourceFullPath_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6>(marshaled.___GetResourceFullPath_1, _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRResources
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_pinvoke_cleanup(IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRResources
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_com(const IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C& unmarshaled, IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_com& marshaled)
{
	marshaled.___LoadSharedResource_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadSharedResource_0()));
	marshaled.___GetResourceFullPath_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetResourceFullPath_1()));
}
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_com_back(const IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_com& marshaled, IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadSharedResource_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D>(marshaled.___LoadSharedResource_0, _LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetResourceFullPath_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6>(marshaled.___GetResourceFullPath_1, _GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRResources
IL2CPP_EXTERN_C void IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshal_com_cleanup(IVRResources_tD0BF1139AA9EDE2BC323396E69DB9972D9CEDC8C_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 (_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchResourceName0' to native representation
	char* ____pchResourceName0_marshaled = NULL;
	____pchResourceName0_marshaled = il2cpp_codegen_marshal_string(___pchResourceName0);

	// Marshaling of parameter '___pchResourceTypeDirectory1' to native representation
	char* ____pchResourceTypeDirectory1_marshaled = NULL;
	____pchResourceTypeDirectory1_marshaled = il2cpp_codegen_marshal_string(___pchResourceTypeDirectory1);

	// Marshaling of parameter '___pchPathBuffer2' to native representation
	char* ____pchPathBuffer2_marshaled = NULL;
	____pchPathBuffer2_marshaled = il2cpp_codegen_marshal_string_builder(___pchPathBuffer2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchResourceName0_marshaled, ____pchResourceTypeDirectory1_marshaled, ____pchPathBuffer2_marshaled, ___unBufferLen3);

	// Marshaling cleanup of parameter '___pchResourceName0' native representation
	il2cpp_codegen_marshal_free(____pchResourceName0_marshaled);
	____pchResourceName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchResourceTypeDirectory1' native representation
	il2cpp_codegen_marshal_free(____pchResourceTypeDirectory1_marshaled);
	____pchResourceTypeDirectory1_marshaled = NULL;

	// Marshaling of parameter '___pchPathBuffer2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchPathBuffer2, ____pchPathBuffer2_marshaled);

	// Marshaling cleanup of parameter '___pchPathBuffer2' native representation
	il2cpp_codegen_marshal_free(____pchPathBuffer2_marshaled);
	____pchPathBuffer2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRResources__GetResourceFullPath::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetResourceFullPath__ctor_m7F2A732754AAC5562833BF4F6B7EED1973F60DEF (_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRResources__GetResourceFullPath::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetResourceFullPath_Invoke_m9D14175E1C14901A4A690488303AFE6A940C25FA (_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					else
						result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					else
						result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchResourceTypeDirectory1) - 1), ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					else
						result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					else
						result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchResourceName0) - 1), ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRResources__GetResourceFullPath::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetResourceFullPath_BeginInvoke_mBC50132593E10070074116033DE95639A289D419 (_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetResourceFullPath_BeginInvoke_mBC50132593E10070074116033DE95639A289D419_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchResourceName0;
	__d_args[1] = ___pchResourceTypeDirectory1;
	__d_args[2] = ___pchPathBuffer2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRResources__GetResourceFullPath::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetResourceFullPath_EndInvoke_mEA3931DFE18CC6FF2596D989C0F30A733E62A305 (_GetResourceFullPath_t4F77D9BCEC889FD828D64CAF9A17497A4BEA19D6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D (_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchResourceName0' to native representation
	char* ____pchResourceName0_marshaled = NULL;
	____pchResourceName0_marshaled = il2cpp_codegen_marshal_string(___pchResourceName0);

	// Marshaling of parameter '___pchBuffer1' to native representation
	char* ____pchBuffer1_marshaled = NULL;
	____pchBuffer1_marshaled = il2cpp_codegen_marshal_string(___pchBuffer1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchResourceName0_marshaled, ____pchBuffer1_marshaled, ___unBufferLen2);

	// Marshaling cleanup of parameter '___pchResourceName0' native representation
	il2cpp_codegen_marshal_free(____pchResourceName0_marshaled);
	____pchResourceName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchBuffer1' native representation
	il2cpp_codegen_marshal_free(____pchBuffer1_marshaled);
	____pchBuffer1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRResources__LoadSharedResource::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _LoadSharedResource__ctor_mEF3F97DCD9DD49627C22AC1CB243D30FA7D55101 (_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRResources__LoadSharedResource::Invoke(System.String,System.String,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _LoadSharedResource_Invoke_m6010F916117931AC4E5CC3148B4EE9040F8CADC7 (_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					else
						result = GenericVirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					else
						result = VirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchBuffer1) - 1), ___unBufferLen2, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					else
						result = GenericVirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					else
						result = VirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchResourceName0) - 1), ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRResources__LoadSharedResource::BeginInvoke(System.String,System.String,System.UInt32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _LoadSharedResource_BeginInvoke_m28E3CA827E46CCC89F01AB7FC1F683150B2469F3 (_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadSharedResource_BeginInvoke_m28E3CA827E46CCC89F01AB7FC1F683150B2469F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchResourceName0;
	__d_args[1] = ___pchBuffer1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferLen2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRResources__LoadSharedResource::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _LoadSharedResource_EndInvoke_m97D31981A1E60437BF255D270C246643DA3314CC (_LoadSharedResource_t06EF3AC5FADFAC8D0B3DE6B1449793870F23EC3D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRScreenshots
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_pinvoke(const IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92& unmarshaled, IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_pinvoke& marshaled)
{
	marshaled.___RequestScreenshot_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RequestScreenshot_0()));
	marshaled.___HookScreenshot_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HookScreenshot_1()));
	marshaled.___GetScreenshotPropertyType_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyType_2()));
	marshaled.___GetScreenshotPropertyFilename_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyFilename_3()));
	marshaled.___UpdateScreenshotProgress_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UpdateScreenshotProgress_4()));
	marshaled.___TakeStereoScreenshot_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TakeStereoScreenshot_5()));
	marshaled.___SubmitScreenshot_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitScreenshot_6()));
}
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_pinvoke_back(const IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_pinvoke& marshaled, IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_RequestScreenshot_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2>(marshaled.___RequestScreenshot_0, _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2_il2cpp_TypeInfo_var));
	unmarshaled.set_HookScreenshot_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF>(marshaled.___HookScreenshot_1, _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyType_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4>(marshaled.___GetScreenshotPropertyType_2, _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyFilename_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F>(marshaled.___GetScreenshotPropertyFilename_3, _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F_il2cpp_TypeInfo_var));
	unmarshaled.set_UpdateScreenshotProgress_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503>(marshaled.___UpdateScreenshotProgress_4, _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503_il2cpp_TypeInfo_var));
	unmarshaled.set_TakeStereoScreenshot_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2>(marshaled.___TakeStereoScreenshot_5, _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitScreenshot_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95>(marshaled.___SubmitScreenshot_6, _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRScreenshots
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_pinvoke_cleanup(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRScreenshots
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_com(const IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92& unmarshaled, IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_com& marshaled)
{
	marshaled.___RequestScreenshot_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RequestScreenshot_0()));
	marshaled.___HookScreenshot_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HookScreenshot_1()));
	marshaled.___GetScreenshotPropertyType_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyType_2()));
	marshaled.___GetScreenshotPropertyFilename_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyFilename_3()));
	marshaled.___UpdateScreenshotProgress_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UpdateScreenshotProgress_4()));
	marshaled.___TakeStereoScreenshot_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TakeStereoScreenshot_5()));
	marshaled.___SubmitScreenshot_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitScreenshot_6()));
}
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_com_back(const IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_com& marshaled, IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_RequestScreenshot_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2>(marshaled.___RequestScreenshot_0, _RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2_il2cpp_TypeInfo_var));
	unmarshaled.set_HookScreenshot_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF>(marshaled.___HookScreenshot_1, _HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyType_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4>(marshaled.___GetScreenshotPropertyType_2, _GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyFilename_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F>(marshaled.___GetScreenshotPropertyFilename_3, _GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F_il2cpp_TypeInfo_var));
	unmarshaled.set_UpdateScreenshotProgress_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503>(marshaled.___UpdateScreenshotProgress_4, _UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503_il2cpp_TypeInfo_var));
	unmarshaled.set_TakeStereoScreenshot_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2>(marshaled.___TakeStereoScreenshot_5, _TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitScreenshot_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95>(marshaled.___SubmitScreenshot_6, _SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRScreenshots
IL2CPP_EXTERN_C void IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshal_com_cleanup(IVRScreenshots_tA874411A34E1896EB1CB27487C5B5E79D207DC92_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  uint32_t DelegatePInvokeWrapper__GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F (_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchFilename2' to native representation
	char* ____pchFilename2_marshaled = NULL;
	____pchFilename2_marshaled = il2cpp_codegen_marshal_string_builder(___pchFilename2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___filenameType1, ____pchFilename2_marshaled, ___cchFilename3, ___pError4);

	// Marshaling of parameter '___pchFilename2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchFilename2, ____pchFilename2_marshaled);

	// Marshaling cleanup of parameter '___pchFilename2' native representation
	il2cpp_codegen_marshal_free(____pchFilename2_marshaled);
	____pchFilename2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetScreenshotPropertyFilename__ctor_m971E507900F5650B3ED4A7DAB70B728C0B0C40CD (_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::Invoke(System.UInt32,Valve.VR.EVRScreenshotPropertyFilenames,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRScreenshotError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetScreenshotPropertyFilename_Invoke_mF40AF0B253D14E2DCCDA2EA544854A57E37F0815 (_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
					else
						result = GenericVirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
					else
						result = VirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef uint32_t (*FunctionPointerType) (RuntimeObject*, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___screenshotHandle0) - 1), ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotPropertyFilenames,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRScreenshotError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetScreenshotPropertyFilename_BeginInvoke_m7641D57A1F024157725F34984F9AEED94B44B728 (_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetScreenshotPropertyFilename_BeginInvoke_m7641D57A1F024157725F34984F9AEED94B44B728_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotPropertyFilenames_t7FF4C5017769DFF38DD212F4BB9207C172FC0914_il2cpp_TypeInfo_var, &___filenameType1);
	__d_args[2] = ___pchFilename2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___cchFilename3);
	__d_args[4] = Box(EVRScreenshotError_t6B97B51D59EE40AE0F8B28ACB608825D2058B86B_il2cpp_TypeInfo_var, &*___pError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.UInt32 Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::EndInvoke(Valve.VR.EVRScreenshotError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t _GetScreenshotPropertyFilename_EndInvoke_mA7420D2841D9261CB3C77745256B4B9AB6E9C45D (_GetScreenshotPropertyFilename_tC009FB44D9C0AFFD26120EB504AB2CA0F337BE0F * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 (_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___pError1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__GetScreenshotPropertyType::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetScreenshotPropertyType__ctor_m43D7FA063FAA2A1D055503FB7BCD396394F05CF4 (_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotType Valve.VR.IVRScreenshots__GetScreenshotPropertyType::Invoke(System.UInt32,Valve.VR.EVRScreenshotError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetScreenshotPropertyType_Invoke_m56F25BF6F021220C7D855474F9D3F5750809E7C2 (_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
					else
						result = VirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___screenshotHandle0) - 1), ___pError1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__GetScreenshotPropertyType::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetScreenshotPropertyType_BeginInvoke_mC87F32D2EC607FF5F20B224724D11A2A749BBA92 (_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetScreenshotPropertyType_BeginInvoke_mC87F32D2EC607FF5F20B224724D11A2A749BBA92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotError_t6B97B51D59EE40AE0F8B28ACB608825D2058B86B_il2cpp_TypeInfo_var, &*___pError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotType Valve.VR.IVRScreenshots__GetScreenshotPropertyType::EndInvoke(Valve.VR.EVRScreenshotError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetScreenshotPropertyType_EndInvoke_m8CADBDC5B7AF09629449D04E75423A6F8B94B07C (_GetScreenshotPropertyType_tD1C65DC1181001510670C732134611AEBAA04EE4 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF (_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * __this, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___pSupportedTypes0, int32_t ___numTypes1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t*, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pSupportedTypes0' to native representation
	int32_t* ____pSupportedTypes0_marshaled = NULL;
	if (___pSupportedTypes0 != NULL)
	{
		____pSupportedTypes0_marshaled = reinterpret_cast<int32_t*>((___pSupportedTypes0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pSupportedTypes0_marshaled, ___numTypes1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__HookScreenshot::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _HookScreenshot__ctor_m467364084FD381D22629D8ADEC494B52CE820532 (_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__HookScreenshot::Invoke(Valve.VR.EVRScreenshotType[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _HookScreenshot_Invoke_m85A0AACEF818C55D9AB3FE959AA9D04DA26211C0 (_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * __this, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___pSupportedTypes0, int32_t ___numTypes1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
					else
						result = GenericVirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
					else
						result = VirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pSupportedTypes0) - 1), ___numTypes1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__HookScreenshot::BeginInvoke(Valve.VR.EVRScreenshotType[],System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _HookScreenshot_BeginInvoke_mB37F6C8C0B002D4723D98AF78342F4C87DB22DB1 (_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * __this, EVRScreenshotTypeU5BU5D_tD8F931B82D9D29E97B71BB630996E1E3F713D74E* ___pSupportedTypes0, int32_t ___numTypes1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_HookScreenshot_BeginInvoke_mB37F6C8C0B002D4723D98AF78342F4C87DB22DB1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pSupportedTypes0;
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___numTypes1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__HookScreenshot::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _HookScreenshot_EndInvoke_mD02110557DEA11AD96C127C5099E0E4EB5A295A5 (_HookScreenshot_tC7D94646FE58F26D056951773A44EA20A58E5BFF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 (_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t*, int32_t, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchPreviewFilename2' to native representation
	char* ____pchPreviewFilename2_marshaled = NULL;
	____pchPreviewFilename2_marshaled = il2cpp_codegen_marshal_string(___pchPreviewFilename2);

	// Marshaling of parameter '___pchVRFilename3' to native representation
	char* ____pchVRFilename3_marshaled = NULL;
	____pchVRFilename3_marshaled = il2cpp_codegen_marshal_string(___pchVRFilename3);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___pOutScreenshotHandle0, ___type1, ____pchPreviewFilename2_marshaled, ____pchVRFilename3_marshaled);

	// Marshaling cleanup of parameter '___pchPreviewFilename2' native representation
	il2cpp_codegen_marshal_free(____pchPreviewFilename2_marshaled);
	____pchPreviewFilename2_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchVRFilename3' native representation
	il2cpp_codegen_marshal_free(____pchVRFilename3_marshaled);
	____pchVRFilename3_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__RequestScreenshot::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RequestScreenshot__ctor_mB24D1345AE6B67E95F623F3B5952DCB1F7952014 (_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__RequestScreenshot::Invoke(System.UInt32&,Valve.VR.EVRScreenshotType,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _RequestScreenshot_Invoke_m2FB3803C92D922C92F6D9A1DC21C5040A3E420FC (_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
					else
						result = VirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pOutScreenshotHandle0) - 1), ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__RequestScreenshot::BeginInvoke(System.UInt32&,Valve.VR.EVRScreenshotType,System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _RequestScreenshot_BeginInvoke_m144F10F62D898B50D77F36C2AD2AD1668F39DBF2 (_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RequestScreenshot_BeginInvoke_m144F10F62D898B50D77F36C2AD2AD1668F39DBF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pOutScreenshotHandle0);
	__d_args[1] = Box(EVRScreenshotType_tDF3B2AADEE288D51AE786D7D96E1304A84AE78A9_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = ___pchPreviewFilename2;
	__d_args[3] = ___pchVRFilename3;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__RequestScreenshot::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _RequestScreenshot_EndInvoke_m1E5A1B0456BC3B109603266A27E6F23B734E88F5 (_RequestScreenshot_tBF64EF72DB6123FF822B7487CDDDA7375A12CFA2 * __this, uint32_t* ___pOutScreenshotHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOutScreenshotHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 (_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSourcePreviewFilename2' to native representation
	char* ____pchSourcePreviewFilename2_marshaled = NULL;
	____pchSourcePreviewFilename2_marshaled = il2cpp_codegen_marshal_string(___pchSourcePreviewFilename2);

	// Marshaling of parameter '___pchSourceVRFilename3' to native representation
	char* ____pchSourceVRFilename3_marshaled = NULL;
	____pchSourceVRFilename3_marshaled = il2cpp_codegen_marshal_string(___pchSourceVRFilename3);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___type1, ____pchSourcePreviewFilename2_marshaled, ____pchSourceVRFilename3_marshaled);

	// Marshaling cleanup of parameter '___pchSourcePreviewFilename2' native representation
	il2cpp_codegen_marshal_free(____pchSourcePreviewFilename2_marshaled);
	____pchSourcePreviewFilename2_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSourceVRFilename3' native representation
	il2cpp_codegen_marshal_free(____pchSourceVRFilename3_marshaled);
	____pchSourceVRFilename3_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__SubmitScreenshot::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SubmitScreenshot__ctor_mE7D4F5DE5F43A97C09ED975689B9748702E68CBC (_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__SubmitScreenshot::Invoke(System.UInt32,Valve.VR.EVRScreenshotType,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SubmitScreenshot_Invoke_mB13696D02B4B754CA9F2C877F18A68D195C08566 (_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
					else
						result = VirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___screenshotHandle0) - 1), ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__SubmitScreenshot::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotType,System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SubmitScreenshot_BeginInvoke_mEE8E0DB5FFAC6A291702135F03FA91F5EBAF68BA (_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SubmitScreenshot_BeginInvoke_mEE8E0DB5FFAC6A291702135F03FA91F5EBAF68BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotType_tDF3B2AADEE288D51AE786D7D96E1304A84AE78A9_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = ___pchSourcePreviewFilename2;
	__d_args[3] = ___pchSourceVRFilename3;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__SubmitScreenshot::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _SubmitScreenshot_EndInvoke_mB198E571EB2D8F054FDFA09A253721C9053A519C (_SubmitScreenshot_t48BF6AA384F6DD900863EA367B6EB45C23A45B95 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 (_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t*, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchPreviewFilename1' to native representation
	char* ____pchPreviewFilename1_marshaled = NULL;
	____pchPreviewFilename1_marshaled = il2cpp_codegen_marshal_string(___pchPreviewFilename1);

	// Marshaling of parameter '___pchVRFilename2' to native representation
	char* ____pchVRFilename2_marshaled = NULL;
	____pchVRFilename2_marshaled = il2cpp_codegen_marshal_string(___pchVRFilename2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___pOutScreenshotHandle0, ____pchPreviewFilename1_marshaled, ____pchVRFilename2_marshaled);

	// Marshaling cleanup of parameter '___pchPreviewFilename1' native representation
	il2cpp_codegen_marshal_free(____pchPreviewFilename1_marshaled);
	____pchPreviewFilename1_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchVRFilename2' native representation
	il2cpp_codegen_marshal_free(____pchVRFilename2_marshaled);
	____pchVRFilename2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__TakeStereoScreenshot::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _TakeStereoScreenshot__ctor_m041C4A1064BA065D7F943734CA50F35D653CA86E (_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__TakeStereoScreenshot::Invoke(System.UInt32&,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _TakeStereoScreenshot_Invoke_m58749B6A6516EF34FC5EE1444A996B5B7EB2A324 (_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
					else
						result = VirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pOutScreenshotHandle0) - 1), ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__TakeStereoScreenshot::BeginInvoke(System.UInt32&,System.String,System.String,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _TakeStereoScreenshot_BeginInvoke_mFA941B1A3ABD7196E182FD50951F1800F08AFFAD (_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_TakeStereoScreenshot_BeginInvoke_mFA941B1A3ABD7196E182FD50951F1800F08AFFAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pOutScreenshotHandle0);
	__d_args[1] = ___pchPreviewFilename1;
	__d_args[2] = ___pchVRFilename2;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__TakeStereoScreenshot::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _TakeStereoScreenshot_EndInvoke_m43522E0C26E02609F5947C264087876C4D155D2E (_TakeStereoScreenshot_t0CE0E60FD194B987ADFCAD20B36CFD094F5F51E2 * __this, uint32_t* ___pOutScreenshotHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOutScreenshotHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 (_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___flProgress1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__UpdateScreenshotProgress::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _UpdateScreenshotProgress__ctor_mFD127D5D53A7A81E808C7168A7AD03561A98AEE8 (_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__UpdateScreenshotProgress::Invoke(System.UInt32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _UpdateScreenshotProgress_Invoke_mDA45DF4E421D99BB082E90EF489818912DEED00C (_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
					else
						result = GenericVirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
					else
						result = VirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___screenshotHandle0) - 1), ___flProgress1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__UpdateScreenshotProgress::BeginInvoke(System.UInt32,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _UpdateScreenshotProgress_BeginInvoke_m716C00E0EF8D7E96A546999F080D2293143F3F57 (_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_UpdateScreenshotProgress_BeginInvoke_m716C00E0EF8D7E96A546999F080D2293143F3F57_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___flProgress1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__UpdateScreenshotProgress::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _UpdateScreenshotProgress_EndInvoke_m9C9A32D7B4EDF15B289B45BE3E30BD326D8AB5DA (_UpdateScreenshotProgress_t1FF6FE7A203BD10AF5F842FDA0C6AE543A231503 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRSettings
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_pinvoke(const IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239& unmarshaled, IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_pinvoke& marshaled)
{
	marshaled.___GetSettingsErrorNameFromEnum_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSettingsErrorNameFromEnum_0()));
	marshaled.___Sync_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Sync_1()));
	marshaled.___SetBool_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetBool_2()));
	marshaled.___SetInt32_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetInt32_3()));
	marshaled.___SetFloat_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetFloat_4()));
	marshaled.___SetString_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetString_5()));
	marshaled.___GetBool_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBool_6()));
	marshaled.___GetInt32_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32_7()));
	marshaled.___GetFloat_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloat_8()));
	marshaled.___GetString_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetString_9()));
	marshaled.___RemoveSection_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveSection_10()));
	marshaled.___RemoveKeyInSection_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveKeyInSection_11()));
}
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_pinvoke_back(const IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_pinvoke& marshaled, IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetSettingsErrorNameFromEnum_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF>(marshaled.___GetSettingsErrorNameFromEnum_0, _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF_il2cpp_TypeInfo_var));
	unmarshaled.set_Sync_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C>(marshaled.___Sync_1, _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C_il2cpp_TypeInfo_var));
	unmarshaled.set_SetBool_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C>(marshaled.___SetBool_2, _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C_il2cpp_TypeInfo_var));
	unmarshaled.set_SetInt32_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B>(marshaled.___SetInt32_3, _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetFloat_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794>(marshaled.___SetFloat_4, _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794_il2cpp_TypeInfo_var));
	unmarshaled.set_SetString_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276>(marshaled.___SetString_5, _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBool_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672>(marshaled.___GetBool_6, _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE>(marshaled.___GetInt32_7, _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloat_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729>(marshaled.___GetFloat_8, _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729_il2cpp_TypeInfo_var));
	unmarshaled.set_GetString_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetString_t0C69AFED057772F90E19D351974F9DA664771905>(marshaled.___GetString_9, _GetString_t0C69AFED057772F90E19D351974F9DA664771905_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveSection_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF>(marshaled.___RemoveSection_10, _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveKeyInSection_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9>(marshaled.___RemoveKeyInSection_11, _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSettings
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_pinvoke_cleanup(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRSettings
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_com(const IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239& unmarshaled, IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_com& marshaled)
{
	marshaled.___GetSettingsErrorNameFromEnum_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSettingsErrorNameFromEnum_0()));
	marshaled.___Sync_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Sync_1()));
	marshaled.___SetBool_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetBool_2()));
	marshaled.___SetInt32_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetInt32_3()));
	marshaled.___SetFloat_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetFloat_4()));
	marshaled.___SetString_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetString_5()));
	marshaled.___GetBool_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBool_6()));
	marshaled.___GetInt32_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32_7()));
	marshaled.___GetFloat_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloat_8()));
	marshaled.___GetString_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetString_9()));
	marshaled.___RemoveSection_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveSection_10()));
	marshaled.___RemoveKeyInSection_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveKeyInSection_11()));
}
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_com_back(const IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_com& marshaled, IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetSettingsErrorNameFromEnum_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF>(marshaled.___GetSettingsErrorNameFromEnum_0, _GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF_il2cpp_TypeInfo_var));
	unmarshaled.set_Sync_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C>(marshaled.___Sync_1, _Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C_il2cpp_TypeInfo_var));
	unmarshaled.set_SetBool_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C>(marshaled.___SetBool_2, _SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C_il2cpp_TypeInfo_var));
	unmarshaled.set_SetInt32_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B>(marshaled.___SetInt32_3, _SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetFloat_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794>(marshaled.___SetFloat_4, _SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794_il2cpp_TypeInfo_var));
	unmarshaled.set_SetString_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276>(marshaled.___SetString_5, _SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBool_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672>(marshaled.___GetBool_6, _GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE>(marshaled.___GetInt32_7, _GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloat_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729>(marshaled.___GetFloat_8, _GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729_il2cpp_TypeInfo_var));
	unmarshaled.set_GetString_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetString_t0C69AFED057772F90E19D351974F9DA664771905>(marshaled.___GetString_9, _GetString_t0C69AFED057772F90E19D351974F9DA664771905_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveSection_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF>(marshaled.___RemoveSection_10, _RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveKeyInSection_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9>(marshaled.___RemoveKeyInSection_11, _RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSettings
IL2CPP_EXTERN_C void IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshal_com_cleanup(IVRSettings_tE43FC98A02D89A2C8B582A08282C81FD33CD4239_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 (_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRSettings__GetBool::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetBool__ctor_m00D9D0A1750F64656521F7DD0A0FC6BF86F3A5D0 (_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRSettings__GetBool::Invoke(System.String,System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetBool_Invoke_mE61C09E2316CAC07B14D823102CCFA52AE0E58E1 (_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___peError2, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetBool::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetBool_BeginInvoke_m3A777D4D6B45B722DBAFBC32FF8165B341E4EEBE (_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetBool_BeginInvoke_m3A777D4D6B45B722DBAFBC32FF8165B341E4EEBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVRSettings__GetBool::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _GetBool_EndInvoke_m358CC4FEFDCFC9A59444F88BE2C57D9D4E841950 (_GetBool_tD1FAAA35B0C46D98B04772524481AA4A30305672 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  float DelegatePInvokeWrapper__GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 (_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef float (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	float returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetFloat::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetFloat__ctor_m2BF0119038D047CB7E8C9115F40B3AF479A9261B (_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Single Valve.VR.IVRSettings__GetFloat::Invoke(System.String,System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float _GetFloat_Invoke_mB09743F7212749A6D3DA28E0FEDB8B611E0441F5 (_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	float result = 0.0f;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef float (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___peError2, targetMethod);
				}
				else
				{
					typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef float (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetFloat::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetFloat_BeginInvoke_m92E072EE65C71CBE6CFA3DE0F8D659836AA91028 (_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetFloat_BeginInvoke_m92E072EE65C71CBE6CFA3DE0F8D659836AA91028_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Single Valve.VR.IVRSettings__GetFloat::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float _GetFloat_EndInvoke_m8652F73742B4444891EA28818FADF9098FD00F1E (_GetFloat_t36A246C20352A63696A246FB1BC93AD219F33729 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(float*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE (_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetInt32::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetInt32__ctor_m77D5BFAEE1E03AF4F7A46720F897D09DD266D807 (_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Int32 Valve.VR.IVRSettings__GetInt32::Invoke(System.String,System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetInt32_Invoke_mA40CB3A75272B0647261DBBC19FA3D71F1F9BF23 (_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___peError2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						result = VirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetInt32::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetInt32_BeginInvoke_m55CCD379B3D48CC45066EBAA7C332F97217CF9B8 (_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetInt32_BeginInvoke_m55CCD379B3D48CC45066EBAA7C332F97217CF9B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Int32 Valve.VR.IVRSettings__GetInt32::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetInt32_EndInvoke_m57CA016A7C7B0B95EA16DD200D2B075D73043861 (_GetInt32_tAC7D9DDCF4420B6892089F63C77DC1F258CBB5EE * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  intptr_t DelegatePInvokeWrapper__GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF (_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * __this, int32_t ___eError0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___eError0);

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetSettingsErrorNameFromEnum__ctor_mC385EA60EA2A8AC235D8B887F590A579A8D446A1 (_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::Invoke(Valve.VR.EVRSettingsError)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetSettingsErrorNameFromEnum_Invoke_m5A1F67A035A1D783855A9074EB7B4860DC1C7BBD (_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * __this, int32_t ___eError0, const RuntimeMethod* method)
{
	intptr_t result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
					else
						result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eError0);
					else
						result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eError0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef intptr_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___eError0) - 1), targetMethod);
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::BeginInvoke(Valve.VR.EVRSettingsError,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetSettingsErrorNameFromEnum_BeginInvoke_m0353D88625C992B617324A624B0FA2BDDACD2537 (_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * __this, int32_t ___eError0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetSettingsErrorNameFromEnum_BeginInvoke_m0353D88625C992B617324A624B0FA2BDDACD2537_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &___eError0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t _GetSettingsErrorNameFromEnum_EndInvoke_mBD44A93C273886822E322389729AED11285B2F09 (_GetSettingsErrorNameFromEnum_tAB8ADDACBCBC80FC35B6D1D974B5A297087A05CF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__GetString_t0C69AFED057772F90E19D351974F9DA664771905 (_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Marshaling of parameter '___pchValue2' to native representation
	char* ____pchValue2_marshaled = NULL;
	____pchValue2_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue2);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ____pchValue2_marshaled, ___unValueLen3, ___peError4);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	// Marshaling of parameter '___pchValue2' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue2, ____pchValue2_marshaled);

	// Marshaling cleanup of parameter '___pchValue2' native representation
	il2cpp_codegen_marshal_free(____pchValue2_marshaled);
	____pchValue2_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__GetString::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetString__ctor_mC59FDC45D90F3DF4021EB03A5D4A57585589E68C (_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__GetString::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetString_Invoke_mDEC7517BB7ED5AAC8A3200BED8F3F16BD457FE2D (_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
		}
		else if (___parameterCount != 5)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					else
						GenericVirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					else
						VirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					else
						GenericVirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					else
						VirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__GetString::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetString_BeginInvoke_m1B35BD7A93AAB13F8E3D0457B46DCFB6DC122F35 (_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetString_BeginInvoke_m1B35BD7A93AAB13F8E3D0457B46DCFB6DC122F35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = ___pchValue2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unValueLen3);
	__d_args[4] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Void Valve.VR.IVRSettings__GetString::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetString_EndInvoke_mD778EB9167A02C0B7B91A90C36941FA3D81A753C (_GetString_t0C69AFED057772F90E19D351974F9DA664771905 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 (_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveKeyInSection__ctor_m4FAA796C96392BA2E37F007EF053971115A972F9 (_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::Invoke(System.String,System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveKeyInSection_Invoke_mAEBFBCCC826292EC8EACB5FA322E4D89F8220EE2 (_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___peError2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					else
						VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__RemoveKeyInSection::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _RemoveKeyInSection_BeginInvoke_m37956AE42566E08B4343779F550BCA822D30D101 (_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RemoveKeyInSection_BeginInvoke_m37956AE42566E08B4343779F550BCA822D30D101_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveKeyInSection_EndInvoke_mDAF8E968D1D9084855EACF9A9A3011078672A0CD (_RemoveKeyInSection_t62F388AF7D08EB6AF18438758D6D59A61A8F9FD9 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF (_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * __this, String_t* ___pchSection0, int32_t* ___peError1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ___peError1);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__RemoveSection::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveSection__ctor_m717FA7F57ACFBB9B3DCD0A69E54FA3BF1F09821B (_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__RemoveSection::Invoke(System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveSection_Invoke_m8A153C0E749F1D38BE53AF49CC6690E8D9563C64 (_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * __this, String_t* ___pchSection0, int32_t* ___peError1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
					else
						GenericVirtActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___peError1);
					else
						VirtActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___peError1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___peError1) - 1), targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
					else
						GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___peError1);
					else
						VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___peError1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___peError1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__RemoveSection::BeginInvoke(System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _RemoveSection_BeginInvoke_m8FDCB521373589BDD5592FE6A71CE9FEA8773B5A (_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * __this, String_t* ___pchSection0, int32_t* ___peError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RemoveSection_BeginInvoke_m8FDCB521373589BDD5592FE6A71CE9FEA8773B5A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRSettings__RemoveSection::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _RemoveSection_EndInvoke_m33301EA9BDCF7B03166089D79411E66252B56BBD (_RemoveSection_t7A9B04830AAF051F3DCDCA353BE22BD4657A55EF * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C (_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, static_cast<int32_t>(___bValue2), ___peError3);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetBool::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetBool__ctor_m458C9B06B3A8D88C9D7B5062A52F529F44394E28 (_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetBool::Invoke(System.String,System.String,System.Boolean,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetBool_Invoke_mDDAE204B64C346B38BCE3227E815891C7885915D (_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					else
						GenericVirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					else
						VirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___bValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					else
						GenericVirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					else
						VirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetBool::BeginInvoke(System.String,System.String,System.Boolean,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetBool_BeginInvoke_mC1AF73978160A3CEB74257A11F244B5F74DC16E7 (_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetBool_BeginInvoke_mC1AF73978160A3CEB74257A11F244B5F74DC16E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bValue2);
	__d_args[3] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetBool::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetBool_EndInvoke_mE976CD9E561C737925C2BEFB992218AFDA870110 (_SetBool_t6B345CCF55E057987EA2DC08BFCFBFE557C1632C * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 (_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, float, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___flValue2, ___peError3);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetFloat::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetFloat__ctor_mF33563741561BB09E859E0887C5765B4A276D8F3 (_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetFloat::Invoke(System.String,System.String,System.Single,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetFloat_Invoke_mAD1A60A40182A20506FCE54A5C37B3D60A5916A7 (_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					else
						GenericVirtActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					else
						VirtActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___flValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					else
						GenericVirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					else
						VirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetFloat::BeginInvoke(System.String,System.String,System.Single,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetFloat_BeginInvoke_mE276E98870AE6BBE53B76BD472DFDA4C642AEF6C (_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetFloat_BeginInvoke_mE276E98870AE6BBE53B76BD472DFDA4C642AEF6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___flValue2);
	__d_args[3] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetFloat::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetFloat_EndInvoke_m5FAE1DC96693C5F7CA0DF87F43A729A9345D6860 (_SetFloat_tAB482D03B31A159EC8A5049FB78468CA0893B794 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B (_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___nValue2, ___peError3);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetInt32::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetInt32__ctor_m0F361B3FB9E72E63B232229E13AA9DE22AF48DE1 (_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetInt32::Invoke(System.String,System.String,System.Int32,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetInt32_Invoke_m73E12A5A91D06EA6F78F484A7781484C491D5F25 (_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					else
						GenericVirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					else
						VirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___nValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					else
						GenericVirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					else
						VirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetInt32::BeginInvoke(System.String,System.String,System.Int32,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetInt32_BeginInvoke_m8ECDA7F3ECDF62052235CF7A865D773A3C45925E (_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetInt32_BeginInvoke_m8ECDA7F3ECDF62052235CF7A865D773A3C45925E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___nValue2);
	__d_args[3] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetInt32::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetInt32_EndInvoke_m920E146DF3E6B315D55E2554D991DC28DA895A5D (_SetInt32_t0080AD2BCDF9C8DA497C477911ACDA6C91730A7B * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper__SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 (_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchSection0' to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter '___pchSettingsKey1' to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Marshaling of parameter '___pchValue2' to native representation
	char* ____pchValue2_marshaled = NULL;
	____pchValue2_marshaled = il2cpp_codegen_marshal_string(___pchValue2);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ____pchValue2_marshaled, ___peError3);

	// Marshaling cleanup of parameter '___pchSection0' native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchSettingsKey1' native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	// Marshaling cleanup of parameter '___pchValue2' native representation
	il2cpp_codegen_marshal_free(____pchValue2_marshaled);
	____pchValue2_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetString::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetString__ctor_mC062BAAF8DB6BBAAB7A85C6182D8797779E1231B (_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetString::Invoke(System.String,System.String,System.String,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetString_Invoke_m71B20B45C3A41025F74F521887C26D5204C6A804 (_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					else
						GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					else
						VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSettingsKey1) - 1), ___pchValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					else
						GenericVirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					else
						VirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchSection0) - 1), ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetString::BeginInvoke(System.String,System.String,System.String,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _SetString_BeginInvoke_m6CF17BE13AAD4D27C70961391FA8AC2E51996B1A (_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetString_BeginInvoke_m6CF17BE13AAD4D27C70961391FA8AC2E51996B1A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = ___pchValue2;
	__d_args[3] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetString::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _SetString_EndInvoke_m1008A0A5C51989C0FE866D540A8C94D9E9794428 (_SetString_t47B3B41BBD766E49A30B80330C5EF61DC220D276 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  bool DelegatePInvokeWrapper__Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C (_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * __this, bool ___bForce0, int32_t* ___peError1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(static_cast<int32_t>(___bForce0), ___peError1);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRSettings__Sync::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _Sync__ctor_m12F1E6CF8A1D2742C95E0D58DE90D507937F8110 (_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRSettings__Sync::Invoke(System.Boolean,Valve.VR.EVRSettingsError&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _Sync_Invoke_m10C59787A75B509A531CFB9246A5DCDB14E7AC57 (_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * __this, bool ___bForce0, int32_t* ___peError1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
					else
						result = GenericVirtFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bForce0, ___peError1);
					else
						result = VirtFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bForce0, ___peError1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef bool (*FunctionPointerType) (RuntimeObject*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___bForce0) - 1), ___peError1, targetMethod);
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__Sync::BeginInvoke(System.Boolean,Valve.VR.EVRSettingsError&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _Sync_BeginInvoke_m696CA40D9ED00625319CA0D95FDBD627AB53E79C (_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * __this, bool ___bForce0, int32_t* ___peError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_Sync_BeginInvoke_m696CA40D9ED00625319CA0D95FDBD627AB53E79C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bForce0);
	__d_args[1] = Box(EVRSettingsError_tADA57627B159E96D2F10A4E3E313B0F067FA628B_il2cpp_TypeInfo_var, &*___peError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRSettings__Sync::EndInvoke(Valve.VR.EVRSettingsError&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool _Sync_EndInvoke_m2B7A4392401BFF785189AB697B1CC326784F6125 (_Sync_t704FCFB9007EADB52D05E15FA2D6B26166D2866C * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRSpatialAnchors
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_pinvoke(const IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758& unmarshaled, IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_pinvoke& marshaled)
{
	marshaled.___CreateSpatialAnchorFromDescriptor_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateSpatialAnchorFromDescriptor_0()));
	marshaled.___CreateSpatialAnchorFromPose_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateSpatialAnchorFromPose_1()));
	marshaled.___GetSpatialAnchorPose_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSpatialAnchorPose_2()));
	marshaled.___GetSpatialAnchorDescriptor_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSpatialAnchorDescriptor_3()));
}
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_pinvoke_back(const IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_pinvoke& marshaled, IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_CreateSpatialAnchorFromDescriptor_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6>(marshaled.___CreateSpatialAnchorFromDescriptor_0, _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateSpatialAnchorFromPose_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206>(marshaled.___CreateSpatialAnchorFromPose_1, _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSpatialAnchorPose_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF>(marshaled.___GetSpatialAnchorPose_2, _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSpatialAnchorDescriptor_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8>(marshaled.___GetSpatialAnchorDescriptor_3, _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSpatialAnchors
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_pinvoke_cleanup(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRSpatialAnchors
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_com(const IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758& unmarshaled, IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_com& marshaled)
{
	marshaled.___CreateSpatialAnchorFromDescriptor_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateSpatialAnchorFromDescriptor_0()));
	marshaled.___CreateSpatialAnchorFromPose_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateSpatialAnchorFromPose_1()));
	marshaled.___GetSpatialAnchorPose_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSpatialAnchorPose_2()));
	marshaled.___GetSpatialAnchorDescriptor_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSpatialAnchorDescriptor_3()));
}
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_com_back(const IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_com& marshaled, IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_CreateSpatialAnchorFromDescriptor_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6>(marshaled.___CreateSpatialAnchorFromDescriptor_0, _CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateSpatialAnchorFromPose_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206>(marshaled.___CreateSpatialAnchorFromPose_1, _CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSpatialAnchorPose_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF>(marshaled.___GetSpatialAnchorPose_2, _GetSpatialAnchorPose_t4B210A925511757F99AD4C1BEA761E83A19C34EF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSpatialAnchorDescriptor_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8>(marshaled.___GetSpatialAnchorDescriptor_3, _GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSpatialAnchors
IL2CPP_EXTERN_C void IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshal_com_cleanup(IVRSpatialAnchors_tBF0FCA0EBC3C47019CE4EB74C8A2E16DCE848758_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 (_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * __this, String_t* ___pchDescriptor0, uint32_t* ___pHandleOut1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchDescriptor0' to native representation
	char* ____pchDescriptor0_marshaled = NULL;
	____pchDescriptor0_marshaled = il2cpp_codegen_marshal_string(___pchDescriptor0);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchDescriptor0_marshaled, ___pHandleOut1);

	// Marshaling cleanup of parameter '___pchDescriptor0' native representation
	il2cpp_codegen_marshal_free(____pchDescriptor0_marshaled);
	____pchDescriptor0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CreateSpatialAnchorFromDescriptor__ctor_mE50290CC7724E856373750E1307FE98BE7A3AA19 (_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor::Invoke(System.String,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateSpatialAnchorFromDescriptor_Invoke_mF85D51A25E4AC890D4D54DCC0D8509C91C2A39A2 (_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * __this, String_t* ___pchDescriptor0, uint32_t* ___pHandleOut1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchDescriptor0, ___pHandleOut1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchDescriptor0, ___pHandleOut1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker1< int32_t, uint32_t* >::Invoke(targetMethod, ___pchDescriptor0, ___pHandleOut1);
					else
						result = GenericVirtFuncInvoker1< int32_t, uint32_t* >::Invoke(targetMethod, ___pchDescriptor0, ___pHandleOut1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker1< int32_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchDescriptor0, ___pHandleOut1);
					else
						result = VirtFuncInvoker1< int32_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchDescriptor0, ___pHandleOut1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pHandleOut1) - 1), targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchDescriptor0, ___pHandleOut1, targetMethod);
				}
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (String_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchDescriptor0, ___pHandleOut1, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pchDescriptor0, ___pHandleOut1);
					else
						result = GenericVirtFuncInvoker2< int32_t, String_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pchDescriptor0, ___pHandleOut1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker2< int32_t, String_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchDescriptor0, ___pHandleOut1);
					else
						result = VirtFuncInvoker2< int32_t, String_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchDescriptor0, ___pHandleOut1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___pchDescriptor0) - 1), ___pHandleOut1, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchDescriptor0, ___pHandleOut1, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor::BeginInvoke(System.String,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _CreateSpatialAnchorFromDescriptor_BeginInvoke_mCD0CF4301813C2A96022BC01263A5392DA0E5397 (_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * __this, String_t* ___pchDescriptor0, uint32_t* ___pHandleOut1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateSpatialAnchorFromDescriptor_BeginInvoke_mCD0CF4301813C2A96022BC01263A5392DA0E5397_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchDescriptor0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHandleOut1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateSpatialAnchorFromDescriptor_EndInvoke_m145E4736C5A9E27AD9AC0C8D2DD38C1BF44D6AFA (_CreateSpatialAnchorFromDescriptor_t2E66C0CBFD10B5373CACE12F8014611A21EF9CF6 * __this, uint32_t* ___pHandleOut0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pHandleOut0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 (_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * __this, uint32_t ___unDeviceIndex0, int32_t ___eOrigin1, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 * ___pPose2, uint32_t* ___pHandleOut3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3);

	return returnValue;
}
// System.Void Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _CreateSpatialAnchorFromPose__ctor_mECD5D7E171C84FD186C7ACC4D26C6280DE35362A (_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose::Invoke(System.UInt32,Valve.VR.ETrackingUniverseOrigin,Valve.VR.SpatialAnchorPose_t&,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateSpatialAnchorFromPose_Invoke_mA15D0B40155A6CE671698AA97604021EF3BBD918 (_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * __this, uint32_t ___unDeviceIndex0, int32_t ___eOrigin1, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 * ___pPose2, uint32_t* ___pHandleOut3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker4< int32_t, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t* >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3);
					else
						result = GenericVirtFuncInvoker4< int32_t, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t* >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker4< int32_t, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3);
					else
						result = VirtFuncInvoker4< int32_t, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___unDeviceIndex0) - 1), ___eOrigin1, ___pPose2, ___pHandleOut3, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___eOrigin1, ___pPose2, ___pHandleOut3, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose::BeginInvoke(System.UInt32,Valve.VR.ETrackingUniverseOrigin,Valve.VR.SpatialAnchorPose_t&,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _CreateSpatialAnchorFromPose_BeginInvoke_m234ADB033A92EC0A5B0FF45BE082AE2F281009CF (_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * __this, uint32_t ___unDeviceIndex0, int32_t ___eOrigin1, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 * ___pPose2, uint32_t* ___pHandleOut3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateSpatialAnchorFromPose_BeginInvoke_m234ADB033A92EC0A5B0FF45BE082AE2F281009CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDeviceIndex0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B_il2cpp_TypeInfo_var, &___eOrigin1);
	__d_args[2] = Box(SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234_il2cpp_TypeInfo_var, &*___pPose2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHandleOut3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__CreateSpatialAnchorFromPose::EndInvoke(Valve.VR.SpatialAnchorPose_t&,System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _CreateSpatialAnchorFromPose_EndInvoke_m1297107210B578533DED493B50F2F26FB86B7038 (_CreateSpatialAnchorFromPose_t5A3E72BE3A6C3F2D5369F3999966798A6BC1D206 * __this, SpatialAnchorPose_t_t4C2FFB0A2A204C035D42B8E8434CA81983881234 * ___pPose0, uint32_t* ___pHandleOut1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pPose0,
	___pHandleOut1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper__GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 (_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * __this, uint32_t ___unHandle0, StringBuilder_t * ___pchDescriptorOut1, uint32_t* ___punDescriptorBufferLenInOut2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, char*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter '___pchDescriptorOut1' to native representation
	char* ____pchDescriptorOut1_marshaled = NULL;
	____pchDescriptorOut1_marshaled = il2cpp_codegen_marshal_string_builder(___pchDescriptorOut1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___unHandle0, ____pchDescriptorOut1_marshaled, ___punDescriptorBufferLenInOut2);

	// Marshaling of parameter '___pchDescriptorOut1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchDescriptorOut1, ____pchDescriptorOut1_marshaled);

	// Marshaling cleanup of parameter '___pchDescriptorOut1' native representation
	il2cpp_codegen_marshal_free(____pchDescriptorOut1_marshaled);
	____pchDescriptorOut1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void _GetSpatialAnchorDescriptor__ctor_m3E2AE8FD080818E12E72795B15B846E9DF3A9CD6 (_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor::Invoke(System.UInt32,System.Text.StringBuilder,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetSpatialAnchorDescriptor_Invoke_m7611CFA20FE225F0FD372A20044CD8BCC47BBF0D (_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * __this, uint32_t ___unHandle0, StringBuilder_t * ___pchDescriptorOut1, uint32_t* ___punDescriptorBufferLenInOut2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (targetThis == NULL)
				{
					typedef int32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2, targetMethod);
				}
				else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker3< int32_t, uint32_t, StringBuilder_t *, uint32_t* >::Invoke(targetMethod, targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2);
					else
						result = GenericVirtFuncInvoker3< int32_t, uint32_t, StringBuilder_t *, uint32_t* >::Invoke(targetMethod, targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker3< int32_t, uint32_t, StringBuilder_t *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2);
					else
						result = VirtFuncInvoker3< int32_t, uint32_t, StringBuilder_t *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef int32_t (*FunctionPointerType) (RuntimeObject*, StringBuilder_t *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___unHandle0) - 1), ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2, targetMethod);
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unHandle0, ___pchDescriptorOut1, ___punDescriptorBufferLenInOut2, targetMethod);
				}
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor::BeginInvoke(System.UInt32,System.Text.StringBuilder,System.UInt32&,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* _GetSpatialAnchorDescriptor_BeginInvoke_mD663CFCE8185B57CF39CADF61EBE70E063A33010 (_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * __this, uint32_t ___unHandle0, StringBuilder_t * ___pchDescriptorOut1, uint32_t* ___punDescriptorBufferLenInOut2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetSpatialAnchorDescriptor_BeginInvoke_mD663CFCE8185B57CF39CADF61EBE70E063A33010_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unHandle0);
	__d_args[1] = ___pchDescriptorOut1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punDescriptorBufferLenInOut2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRSpatialAnchorError Valve.VR.IVRSpatialAnchors__GetSpatialAnchorDescriptor::EndInvoke(System.UInt32&,System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t _GetSpatialAnchorDescriptor_EndInvoke_m7BB682A0C1DFB42FBC95D66261AAFF96EA253898 (_GetSpatialAnchorDescriptor_t1FB7B58451C5A5D46E31D351AD774C19CBF4A5D8 * __this, uint32_t* ___punDescriptorBufferLenInOut0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punDescriptorBufferLenInOut0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
